// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cosmos-service.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// common gets request payload
type CommonGetsRequest struct {
	// item to sort
	Item string `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	// item to order
	Order string `protobuf:"bytes,2,opt,name=order,proto3" json:"order,omitempty"`
	// pagination from
	From int64 `protobuf:"varint,3,opt,name=from,proto3" json:"from,omitempty"`
	// pagination to
	To int64 `protobuf:"varint,4,opt,name=to,proto3" json:"to,omitempty"`
	// item to filter
	FilterItem string `protobuf:"bytes,5,opt,name=filterItem,proto3" json:"filterItem,omitempty"`
	// value to filter
	FilterValue string `protobuf:"bytes,6,opt,name=filterValue,proto3" json:"filterValue,omitempty"`
	// patient ids
	Ids                  []string `protobuf:"bytes,7,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonGetsRequest) Reset()         { *m = CommonGetsRequest{} }
func (m *CommonGetsRequest) String() string { return proto.CompactTextString(m) }
func (*CommonGetsRequest) ProtoMessage()    {}
func (*CommonGetsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{0}
}

func (m *CommonGetsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonGetsRequest.Unmarshal(m, b)
}
func (m *CommonGetsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonGetsRequest.Marshal(b, m, deterministic)
}
func (m *CommonGetsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonGetsRequest.Merge(m, src)
}
func (m *CommonGetsRequest) XXX_Size() int {
	return xxx_messageInfo_CommonGetsRequest.Size(m)
}
func (m *CommonGetsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonGetsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommonGetsRequest proto.InternalMessageInfo

func (m *CommonGetsRequest) GetItem() string {
	if m != nil {
		return m.Item
	}
	return ""
}

func (m *CommonGetsRequest) GetOrder() string {
	if m != nil {
		return m.Order
	}
	return ""
}

func (m *CommonGetsRequest) GetFrom() int64 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *CommonGetsRequest) GetTo() int64 {
	if m != nil {
		return m.To
	}
	return 0
}

func (m *CommonGetsRequest) GetFilterItem() string {
	if m != nil {
		return m.FilterItem
	}
	return ""
}

func (m *CommonGetsRequest) GetFilterValue() string {
	if m != nil {
		return m.FilterValue
	}
	return ""
}

func (m *CommonGetsRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

// common get request payload
type CommonGetRequest struct {
	// patient IC / passport
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonGetRequest) Reset()         { *m = CommonGetRequest{} }
func (m *CommonGetRequest) String() string { return proto.CompactTextString(m) }
func (*CommonGetRequest) ProtoMessage()    {}
func (*CommonGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{1}
}

func (m *CommonGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonGetRequest.Unmarshal(m, b)
}
func (m *CommonGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonGetRequest.Marshal(b, m, deterministic)
}
func (m *CommonGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonGetRequest.Merge(m, src)
}
func (m *CommonGetRequest) XXX_Size() int {
	return xxx_messageInfo_CommonGetRequest.Size(m)
}
func (m *CommonGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommonGetRequest proto.InternalMessageInfo

func (m *CommonGetRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// common delete request payload
type CommonDeleteRequest struct {
	// id
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonDeleteRequest) Reset()         { *m = CommonDeleteRequest{} }
func (m *CommonDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*CommonDeleteRequest) ProtoMessage()    {}
func (*CommonDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{2}
}

func (m *CommonDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonDeleteRequest.Unmarshal(m, b)
}
func (m *CommonDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonDeleteRequest.Marshal(b, m, deterministic)
}
func (m *CommonDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonDeleteRequest.Merge(m, src)
}
func (m *CommonDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_CommonDeleteRequest.Size(m)
}
func (m *CommonDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommonDeleteRequest proto.InternalMessageInfo

func (m *CommonDeleteRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// common batch delete request payload
type CommonDeletesRequest struct {
	// ids
	Ids                  []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonDeletesRequest) Reset()         { *m = CommonDeletesRequest{} }
func (m *CommonDeletesRequest) String() string { return proto.CompactTextString(m) }
func (*CommonDeletesRequest) ProtoMessage()    {}
func (*CommonDeletesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{3}
}

func (m *CommonDeletesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonDeletesRequest.Unmarshal(m, b)
}
func (m *CommonDeletesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonDeletesRequest.Marshal(b, m, deterministic)
}
func (m *CommonDeletesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonDeletesRequest.Merge(m, src)
}
func (m *CommonDeletesRequest) XXX_Size() int {
	return xxx_messageInfo_CommonDeletesRequest.Size(m)
}
func (m *CommonDeletesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonDeletesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommonDeletesRequest proto.InternalMessageInfo

func (m *CommonDeletesRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

// common Ids response
type CommonIdsResponse struct {
	// ids
	Data                 []string `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonIdsResponse) Reset()         { *m = CommonIdsResponse{} }
func (m *CommonIdsResponse) String() string { return proto.CompactTextString(m) }
func (*CommonIdsResponse) ProtoMessage()    {}
func (*CommonIdsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{4}
}

func (m *CommonIdsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonIdsResponse.Unmarshal(m, b)
}
func (m *CommonIdsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonIdsResponse.Marshal(b, m, deterministic)
}
func (m *CommonIdsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonIdsResponse.Merge(m, src)
}
func (m *CommonIdsResponse) XXX_Size() int {
	return xxx_messageInfo_CommonIdsResponse.Size(m)
}
func (m *CommonIdsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonIdsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommonIdsResponse proto.InternalMessageInfo

func (m *CommonIdsResponse) GetData() []string {
	if m != nil {
		return m.Data
	}
	return nil
}

type LoginRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{5}
}

func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (m *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(m, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// get password reset request payload
type GetPasswordResetRequest struct {
	// user id
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPasswordResetRequest) Reset()         { *m = GetPasswordResetRequest{} }
func (m *GetPasswordResetRequest) String() string { return proto.CompactTextString(m) }
func (*GetPasswordResetRequest) ProtoMessage()    {}
func (*GetPasswordResetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{6}
}

func (m *GetPasswordResetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPasswordResetRequest.Unmarshal(m, b)
}
func (m *GetPasswordResetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPasswordResetRequest.Marshal(b, m, deterministic)
}
func (m *GetPasswordResetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPasswordResetRequest.Merge(m, src)
}
func (m *GetPasswordResetRequest) XXX_Size() int {
	return xxx_messageInfo_GetPasswordResetRequest.Size(m)
}
func (m *GetPasswordResetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPasswordResetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPasswordResetRequest proto.InternalMessageInfo

func (m *GetPasswordResetRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// get password reset request payload
type UpdatePasswordRequest struct {
	// token
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// password
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePasswordRequest) Reset()         { *m = UpdatePasswordRequest{} }
func (m *UpdatePasswordRequest) String() string { return proto.CompactTextString(m) }
func (*UpdatePasswordRequest) ProtoMessage()    {}
func (*UpdatePasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{7}
}

func (m *UpdatePasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePasswordRequest.Unmarshal(m, b)
}
func (m *UpdatePasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePasswordRequest.Marshal(b, m, deterministic)
}
func (m *UpdatePasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePasswordRequest.Merge(m, src)
}
func (m *UpdatePasswordRequest) XXX_Size() int {
	return xxx_messageInfo_UpdatePasswordRequest.Size(m)
}
func (m *UpdatePasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePasswordRequest proto.InternalMessageInfo

func (m *UpdatePasswordRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *UpdatePasswordRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LoginResponse struct {
	AccessToken          string   `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	RefreshToken         string   `protobuf:"bytes,2,opt,name=refreshToken,proto3" json:"refreshToken,omitempty"`
	DisplayName          string   `protobuf:"bytes,3,opt,name=displayName,proto3" json:"displayName,omitempty"`
	Role                 string   `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	Id                   string   `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginResponse) Reset()         { *m = LoginResponse{} }
func (m *LoginResponse) String() string { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()    {}
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{8}
}

func (m *LoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResponse.Unmarshal(m, b)
}
func (m *LoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResponse.Marshal(b, m, deterministic)
}
func (m *LoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResponse.Merge(m, src)
}
func (m *LoginResponse) XXX_Size() int {
	return xxx_messageInfo_LoginResponse.Size(m)
}
func (m *LoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResponse proto.InternalMessageInfo

func (m *LoginResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *LoginResponse) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *LoginResponse) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *LoginResponse) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *LoginResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RefreshResponse struct {
	AccessToken          string   `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	RefreshToken         string   `protobuf:"bytes,2,opt,name=refreshToken,proto3" json:"refreshToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RefreshResponse) Reset()         { *m = RefreshResponse{} }
func (m *RefreshResponse) String() string { return proto.CompactTextString(m) }
func (*RefreshResponse) ProtoMessage()    {}
func (*RefreshResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{9}
}

func (m *RefreshResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefreshResponse.Unmarshal(m, b)
}
func (m *RefreshResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefreshResponse.Marshal(b, m, deterministic)
}
func (m *RefreshResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefreshResponse.Merge(m, src)
}
func (m *RefreshResponse) XXX_Size() int {
	return xxx_messageInfo_RefreshResponse.Size(m)
}
func (m *RefreshResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RefreshResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RefreshResponse proto.InternalMessageInfo

func (m *RefreshResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *RefreshResponse) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

// get password reset response payload
type GetPasswordResetResponse struct {
	// password reset message
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPasswordResetResponse) Reset()         { *m = GetPasswordResetResponse{} }
func (m *GetPasswordResetResponse) String() string { return proto.CompactTextString(m) }
func (*GetPasswordResetResponse) ProtoMessage()    {}
func (*GetPasswordResetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{10}
}

func (m *GetPasswordResetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPasswordResetResponse.Unmarshal(m, b)
}
func (m *GetPasswordResetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPasswordResetResponse.Marshal(b, m, deterministic)
}
func (m *GetPasswordResetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPasswordResetResponse.Merge(m, src)
}
func (m *GetPasswordResetResponse) XXX_Size() int {
	return xxx_messageInfo_GetPasswordResetResponse.Size(m)
}
func (m *GetPasswordResetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPasswordResetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPasswordResetResponse proto.InternalMessageInfo

func (m *GetPasswordResetResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// patient payload
type Patient struct {
	// patient IC / passport number
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// patient telegram ID
	TelegramId string `protobuf:"bytes,2,opt,name=telegramId,proto3" json:"telegramId,omitempty"`
	// patient name
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// patient status (1 - Symptomatic, 2 - Asymptomatic，3 - Confirmed but not Admitted, 4 - Confirmed and Admitted, 5 - Completed, 6 - Recovered, 7 - Quit, 8 - Passed Away)
	Status int64 `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	// patient phone number
	PhoneNumber string `protobuf:"bytes,5,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	// patient email
	Email string `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	// patient latest declare time in milliseconds
	LastDeclared int64 `protobuf:"varint,7,opt,name=lastDeclared,proto3" json:"lastDeclared,omitempty"`
	// patient number of swabs (covid-19 test)
	SwabCount int64 `protobuf:"varint,8,opt,name=swabCount,proto3" json:"swabCount,omitempty"`
	// patient episode
	Episode int64 `protobuf:"varint,9,opt,name=episode,proto3" json:"episode,omitempty"`
	// patient type (1 - PUI, 2 - Contact Tracing)
	Type int64 `protobuf:"varint,10,opt,name=type,proto3" json:"type,omitempty"`
	// patient latest declare result (true - has symptom, false - no symptom)
	LastDeclareResult bool `protobuf:"varint,11,opt,name=lastDeclareResult,proto3" json:"lastDeclareResult,omitempty"`
	// patient date of exposure
	ExposureDate string `protobuf:"bytes,12,opt,name=exposureDate,proto3" json:"exposureDate,omitempty"`
	// patient source of exposure
	ExposureSource string `protobuf:"bytes,13,opt,name=exposureSource,proto3" json:"exposureSource,omitempty"`
	// patient days since exposure (inclusive)
	DaysSinceExposure int64 `protobuf:"varint,14,opt,name=daysSinceExposure,proto3" json:"daysSinceExposure,omitempty"`
	// patient registration number
	RegistrationNum string `protobuf:"bytes,15,opt,name=registrationNum,proto3" json:"registrationNum,omitempty"`
	// patient alternative contact number
	AlternateContact string `protobuf:"bytes,16,opt,name=alternateContact,proto3" json:"alternateContact,omitempty"`
	// patient isolation address
	IsolationAddress string `protobuf:"bytes,17,opt,name=isolationAddress,proto3" json:"isolationAddress,omitempty"`
	// patient date of symptom
	SymptomDate string `protobuf:"bytes,18,opt,name=symptomDate,proto3" json:"symptomDate,omitempty"`
	// patient date of swab
	SwabDate string `protobuf:"bytes,19,opt,name=swabDate,proto3" json:"swabDate,omitempty"`
	// patient days since fever (inclusive)
	FeverContDay int64 `protobuf:"varint,20,opt,name=feverContDay,proto3" json:"feverContDay,omitempty"`
	// doctors' remarks on patient
	Remarks string `protobuf:"bytes,21,opt,name=remarks,proto3" json:"remarks,omitempty"`
	// patient localization (1 - English, 2 - Malay， 3 - Chinese, 4 - Tamil)
	Localization int64 `protobuf:"varint,22,opt,name=localization,proto3" json:"localization,omitempty"`
	// patient latest report calling status
	CallingStatus int64 `protobuf:"varint,23,opt,name=callingStatus,proto3" json:"callingStatus,omitempty"`
	// patient consent signing time in milliseconds
	Consent int64 `protobuf:"varint,25,opt,name=consent,proto3" json:"consent,omitempty"`
	// patient privacy policy signing time in milliseconds
	PrivacyPolicy int64 `protobuf:"varint,26,opt,name=privacyPolicy,proto3" json:"privacyPolicy,omitempty"`
	// patient date of starting fever
	FeverStartDate string `protobuf:"bytes,27,opt,name=feverStartDate,proto3" json:"feverStartDate,omitempty"`
	// patient location of swab
	SwabLocation string `protobuf:"bytes,28,opt,name=swabLocation,proto3" json:"swabLocation,omitempty"`
	// patient day since swab
	DaysSinceSwab int64 `protobuf:"varint,29,opt,name=daysSinceSwab,proto3" json:"daysSinceSwab,omitempty"`
	// patient type change date
	TypeChangeDate string `protobuf:"bytes,30,opt,name=typeChangeDate,proto3" json:"typeChangeDate,omitempty"`
	// patient home address
	HomeAddress string `protobuf:"bytes,31,opt,name=homeAddress,proto3" json:"homeAddress,omitempty"`
	// patient swab status
	SwabStatus int64 `protobuf:"varint,32,opt,name=swabStatus,proto3" json:"swabStatus,omitempty"`
	// patient is other swab location
	IsOtherSwabLocation bool `protobuf:"varint,33,opt,name=isOtherSwabLocation,proto3" json:"isOtherSwabLocation,omitempty"`
	// patient is same address
	IsSameAddress bool `protobuf:"varint,34,opt,name=isSameAddress,proto3" json:"isSameAddress,omitempty"`
	// patient registration status
	RegistrationStatus   int64    `protobuf:"varint,35,opt,name=registrationStatus,proto3" json:"registrationStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Patient) Reset()         { *m = Patient{} }
func (m *Patient) String() string { return proto.CompactTextString(m) }
func (*Patient) ProtoMessage()    {}
func (*Patient) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{11}
}

func (m *Patient) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Patient.Unmarshal(m, b)
}
func (m *Patient) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Patient.Marshal(b, m, deterministic)
}
func (m *Patient) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Patient.Merge(m, src)
}
func (m *Patient) XXX_Size() int {
	return xxx_messageInfo_Patient.Size(m)
}
func (m *Patient) XXX_DiscardUnknown() {
	xxx_messageInfo_Patient.DiscardUnknown(m)
}

var xxx_messageInfo_Patient proto.InternalMessageInfo

func (m *Patient) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Patient) GetTelegramId() string {
	if m != nil {
		return m.TelegramId
	}
	return ""
}

func (m *Patient) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Patient) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Patient) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *Patient) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Patient) GetLastDeclared() int64 {
	if m != nil {
		return m.LastDeclared
	}
	return 0
}

func (m *Patient) GetSwabCount() int64 {
	if m != nil {
		return m.SwabCount
	}
	return 0
}

func (m *Patient) GetEpisode() int64 {
	if m != nil {
		return m.Episode
	}
	return 0
}

func (m *Patient) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Patient) GetLastDeclareResult() bool {
	if m != nil {
		return m.LastDeclareResult
	}
	return false
}

func (m *Patient) GetExposureDate() string {
	if m != nil {
		return m.ExposureDate
	}
	return ""
}

func (m *Patient) GetExposureSource() string {
	if m != nil {
		return m.ExposureSource
	}
	return ""
}

func (m *Patient) GetDaysSinceExposure() int64 {
	if m != nil {
		return m.DaysSinceExposure
	}
	return 0
}

func (m *Patient) GetRegistrationNum() string {
	if m != nil {
		return m.RegistrationNum
	}
	return ""
}

func (m *Patient) GetAlternateContact() string {
	if m != nil {
		return m.AlternateContact
	}
	return ""
}

func (m *Patient) GetIsolationAddress() string {
	if m != nil {
		return m.IsolationAddress
	}
	return ""
}

func (m *Patient) GetSymptomDate() string {
	if m != nil {
		return m.SymptomDate
	}
	return ""
}

func (m *Patient) GetSwabDate() string {
	if m != nil {
		return m.SwabDate
	}
	return ""
}

func (m *Patient) GetFeverContDay() int64 {
	if m != nil {
		return m.FeverContDay
	}
	return 0
}

func (m *Patient) GetRemarks() string {
	if m != nil {
		return m.Remarks
	}
	return ""
}

func (m *Patient) GetLocalization() int64 {
	if m != nil {
		return m.Localization
	}
	return 0
}

func (m *Patient) GetCallingStatus() int64 {
	if m != nil {
		return m.CallingStatus
	}
	return 0
}

func (m *Patient) GetConsent() int64 {
	if m != nil {
		return m.Consent
	}
	return 0
}

func (m *Patient) GetPrivacyPolicy() int64 {
	if m != nil {
		return m.PrivacyPolicy
	}
	return 0
}

func (m *Patient) GetFeverStartDate() string {
	if m != nil {
		return m.FeverStartDate
	}
	return ""
}

func (m *Patient) GetSwabLocation() string {
	if m != nil {
		return m.SwabLocation
	}
	return ""
}

func (m *Patient) GetDaysSinceSwab() int64 {
	if m != nil {
		return m.DaysSinceSwab
	}
	return 0
}

func (m *Patient) GetTypeChangeDate() string {
	if m != nil {
		return m.TypeChangeDate
	}
	return ""
}

func (m *Patient) GetHomeAddress() string {
	if m != nil {
		return m.HomeAddress
	}
	return ""
}

func (m *Patient) GetSwabStatus() int64 {
	if m != nil {
		return m.SwabStatus
	}
	return 0
}

func (m *Patient) GetIsOtherSwabLocation() bool {
	if m != nil {
		return m.IsOtherSwabLocation
	}
	return false
}

func (m *Patient) GetIsSameAddress() bool {
	if m != nil {
		return m.IsSameAddress
	}
	return false
}

func (m *Patient) GetRegistrationStatus() int64 {
	if m != nil {
		return m.RegistrationStatus
	}
	return 0
}

// common patient request payload
type CommonPatientRequest struct {
	// patient IC / passport
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// patient object
	Data                 *Patient `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonPatientRequest) Reset()         { *m = CommonPatientRequest{} }
func (m *CommonPatientRequest) String() string { return proto.CompactTextString(m) }
func (*CommonPatientRequest) ProtoMessage()    {}
func (*CommonPatientRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{12}
}

func (m *CommonPatientRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonPatientRequest.Unmarshal(m, b)
}
func (m *CommonPatientRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonPatientRequest.Marshal(b, m, deterministic)
}
func (m *CommonPatientRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonPatientRequest.Merge(m, src)
}
func (m *CommonPatientRequest) XXX_Size() int {
	return xxx_messageInfo_CommonPatientRequest.Size(m)
}
func (m *CommonPatientRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonPatientRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommonPatientRequest proto.InternalMessageInfo

func (m *CommonPatientRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CommonPatientRequest) GetData() *Patient {
	if m != nil {
		return m.Data
	}
	return nil
}

// common patients request payload
type CommonPatientsRequest struct {
	// patient ids
	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	// patient payload
	Data                 *Patient `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonPatientsRequest) Reset()         { *m = CommonPatientsRequest{} }
func (m *CommonPatientsRequest) String() string { return proto.CompactTextString(m) }
func (*CommonPatientsRequest) ProtoMessage()    {}
func (*CommonPatientsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{13}
}

func (m *CommonPatientsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonPatientsRequest.Unmarshal(m, b)
}
func (m *CommonPatientsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonPatientsRequest.Marshal(b, m, deterministic)
}
func (m *CommonPatientsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonPatientsRequest.Merge(m, src)
}
func (m *CommonPatientsRequest) XXX_Size() int {
	return xxx_messageInfo_CommonPatientsRequest.Size(m)
}
func (m *CommonPatientsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonPatientsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommonPatientsRequest proto.InternalMessageInfo

func (m *CommonPatientsRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *CommonPatientsRequest) GetData() *Patient {
	if m != nil {
		return m.Data
	}
	return nil
}

// common patients response payload
type CommonPatientsResponse struct {
	// patients payload
	Data []*Patient `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	// total patients
	Total                int64    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonPatientsResponse) Reset()         { *m = CommonPatientsResponse{} }
func (m *CommonPatientsResponse) String() string { return proto.CompactTextString(m) }
func (*CommonPatientsResponse) ProtoMessage()    {}
func (*CommonPatientsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{14}
}

func (m *CommonPatientsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonPatientsResponse.Unmarshal(m, b)
}
func (m *CommonPatientsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonPatientsResponse.Marshal(b, m, deterministic)
}
func (m *CommonPatientsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonPatientsResponse.Merge(m, src)
}
func (m *CommonPatientsResponse) XXX_Size() int {
	return xxx_messageInfo_CommonPatientsResponse.Size(m)
}
func (m *CommonPatientsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonPatientsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommonPatientsResponse proto.InternalMessageInfo

func (m *CommonPatientsResponse) GetData() []*Patient {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CommonPatientsResponse) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

// common patient response payload
type CommonPatientResponse struct {
	// patient payload
	Data                 *Patient `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonPatientResponse) Reset()         { *m = CommonPatientResponse{} }
func (m *CommonPatientResponse) String() string { return proto.CompactTextString(m) }
func (*CommonPatientResponse) ProtoMessage()    {}
func (*CommonPatientResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{15}
}

func (m *CommonPatientResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonPatientResponse.Unmarshal(m, b)
}
func (m *CommonPatientResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonPatientResponse.Marshal(b, m, deterministic)
}
func (m *CommonPatientResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonPatientResponse.Merge(m, src)
}
func (m *CommonPatientResponse) XXX_Size() int {
	return xxx_messageInfo_CommonPatientResponse.Size(m)
}
func (m *CommonPatientResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonPatientResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommonPatientResponse proto.InternalMessageInfo

func (m *CommonPatientResponse) GetData() *Patient {
	if m != nil {
		return m.Data
	}
	return nil
}

// swab payload
type Swab struct {
	// swab ID (patient id + date)
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// patient id
	PatientId string `protobuf:"bytes,2,opt,name=patientId,proto3" json:"patientId,omitempty"`
	// patient name
	PatientName string `protobuf:"bytes,3,opt,name=patientName,proto3" json:"patientName,omitempty"`
	// patient phone number
	PatientPhoneNumber string `protobuf:"bytes,4,opt,name=patientPhoneNumber,proto3" json:"patientPhoneNumber,omitempty"`
	// swab status (1 - positive, 2 - negative, 3 - pending)
	Status int64 `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	// swab date
	Date string `protobuf:"bytes,6,opt,name=date,proto3" json:"date,omitempty"`
	// swab location
	Location string `protobuf:"bytes,7,opt,name=location,proto3" json:"location,omitempty"`
	// is other swab location
	IsOtherSwabLocation  bool     `protobuf:"varint,8,opt,name=isOtherSwabLocation,proto3" json:"isOtherSwabLocation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Swab) Reset()         { *m = Swab{} }
func (m *Swab) String() string { return proto.CompactTextString(m) }
func (*Swab) ProtoMessage()    {}
func (*Swab) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{16}
}

func (m *Swab) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Swab.Unmarshal(m, b)
}
func (m *Swab) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Swab.Marshal(b, m, deterministic)
}
func (m *Swab) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Swab.Merge(m, src)
}
func (m *Swab) XXX_Size() int {
	return xxx_messageInfo_Swab.Size(m)
}
func (m *Swab) XXX_DiscardUnknown() {
	xxx_messageInfo_Swab.DiscardUnknown(m)
}

var xxx_messageInfo_Swab proto.InternalMessageInfo

func (m *Swab) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Swab) GetPatientId() string {
	if m != nil {
		return m.PatientId
	}
	return ""
}

func (m *Swab) GetPatientName() string {
	if m != nil {
		return m.PatientName
	}
	return ""
}

func (m *Swab) GetPatientPhoneNumber() string {
	if m != nil {
		return m.PatientPhoneNumber
	}
	return ""
}

func (m *Swab) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Swab) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *Swab) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *Swab) GetIsOtherSwabLocation() bool {
	if m != nil {
		return m.IsOtherSwabLocation
	}
	return false
}

// update swab request payload
type CommonSwabRequest struct {
	// swab id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// swab payload
	Data                 *Swab    `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonSwabRequest) Reset()         { *m = CommonSwabRequest{} }
func (m *CommonSwabRequest) String() string { return proto.CompactTextString(m) }
func (*CommonSwabRequest) ProtoMessage()    {}
func (*CommonSwabRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{17}
}

func (m *CommonSwabRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonSwabRequest.Unmarshal(m, b)
}
func (m *CommonSwabRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonSwabRequest.Marshal(b, m, deterministic)
}
func (m *CommonSwabRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonSwabRequest.Merge(m, src)
}
func (m *CommonSwabRequest) XXX_Size() int {
	return xxx_messageInfo_CommonSwabRequest.Size(m)
}
func (m *CommonSwabRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonSwabRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommonSwabRequest proto.InternalMessageInfo

func (m *CommonSwabRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CommonSwabRequest) GetData() *Swab {
	if m != nil {
		return m.Data
	}
	return nil
}

//  common swabs request payload
type CommonSwabsRequest struct {
	// swab ids
	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	// swab payload
	Data                 *Swab    `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonSwabsRequest) Reset()         { *m = CommonSwabsRequest{} }
func (m *CommonSwabsRequest) String() string { return proto.CompactTextString(m) }
func (*CommonSwabsRequest) ProtoMessage()    {}
func (*CommonSwabsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{18}
}

func (m *CommonSwabsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonSwabsRequest.Unmarshal(m, b)
}
func (m *CommonSwabsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonSwabsRequest.Marshal(b, m, deterministic)
}
func (m *CommonSwabsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonSwabsRequest.Merge(m, src)
}
func (m *CommonSwabsRequest) XXX_Size() int {
	return xxx_messageInfo_CommonSwabsRequest.Size(m)
}
func (m *CommonSwabsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonSwabsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommonSwabsRequest proto.InternalMessageInfo

func (m *CommonSwabsRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *CommonSwabsRequest) GetData() *Swab {
	if m != nil {
		return m.Data
	}
	return nil
}

// common swabs response payload
type CommonSwabsResponse struct {
	// swabs payload
	Data []*Swab `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	// total swabs
	Total                int64    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonSwabsResponse) Reset()         { *m = CommonSwabsResponse{} }
func (m *CommonSwabsResponse) String() string { return proto.CompactTextString(m) }
func (*CommonSwabsResponse) ProtoMessage()    {}
func (*CommonSwabsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{19}
}

func (m *CommonSwabsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonSwabsResponse.Unmarshal(m, b)
}
func (m *CommonSwabsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonSwabsResponse.Marshal(b, m, deterministic)
}
func (m *CommonSwabsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonSwabsResponse.Merge(m, src)
}
func (m *CommonSwabsResponse) XXX_Size() int {
	return xxx_messageInfo_CommonSwabsResponse.Size(m)
}
func (m *CommonSwabsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonSwabsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommonSwabsResponse proto.InternalMessageInfo

func (m *CommonSwabsResponse) GetData() []*Swab {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CommonSwabsResponse) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

// get swab response payload
type CommonSwabResponse struct {
	// swab payload
	Data                 *Swab    `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonSwabResponse) Reset()         { *m = CommonSwabResponse{} }
func (m *CommonSwabResponse) String() string { return proto.CompactTextString(m) }
func (*CommonSwabResponse) ProtoMessage()    {}
func (*CommonSwabResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{20}
}

func (m *CommonSwabResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonSwabResponse.Unmarshal(m, b)
}
func (m *CommonSwabResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonSwabResponse.Marshal(b, m, deterministic)
}
func (m *CommonSwabResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonSwabResponse.Merge(m, src)
}
func (m *CommonSwabResponse) XXX_Size() int {
	return xxx_messageInfo_CommonSwabResponse.Size(m)
}
func (m *CommonSwabResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonSwabResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommonSwabResponse proto.InternalMessageInfo

func (m *CommonSwabResponse) GetData() *Swab {
	if m != nil {
		return m.Data
	}
	return nil
}

// user payload
type User struct {
	// user id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// user role: superuser, chatbot, admin, nurse
	Role string `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	// user display name
	DisplayName string `protobuf:"bytes,3,opt,name=displayName,proto3" json:"displayName,omitempty"`
	// user phone number
	PhoneNumber string `protobuf:"bytes,4,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	// user email
	Email string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	// user account status (true - disabled, false - enabled)
	Disabled bool `protobuf:"varint,6,opt,name=disabled,proto3" json:"disabled,omitempty"`
	// user hashed password
	Password string `protobuf:"bytes,7,opt,name=password,proto3" json:"password,omitempty"`
	// questions JSON
	FinalQuestionsJson string `protobuf:"bytes,8,opt,name=finalQuestionsJson,proto3" json:"finalQuestionsJson,omitempty"`
	// chart
	Chart                string   `protobuf:"bytes,9,opt,name=chart,proto3" json:"chart,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{21}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *User) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *User) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetFinalQuestionsJson() string {
	if m != nil {
		return m.FinalQuestionsJson
	}
	return ""
}

func (m *User) GetChart() string {
	if m != nil {
		return m.Chart
	}
	return ""
}

// common user request payload
type CommonUserRequest struct {
	// user id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// user payload
	Data                 *User    `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonUserRequest) Reset()         { *m = CommonUserRequest{} }
func (m *CommonUserRequest) String() string { return proto.CompactTextString(m) }
func (*CommonUserRequest) ProtoMessage()    {}
func (*CommonUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{22}
}

func (m *CommonUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonUserRequest.Unmarshal(m, b)
}
func (m *CommonUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonUserRequest.Marshal(b, m, deterministic)
}
func (m *CommonUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonUserRequest.Merge(m, src)
}
func (m *CommonUserRequest) XXX_Size() int {
	return xxx_messageInfo_CommonUserRequest.Size(m)
}
func (m *CommonUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommonUserRequest proto.InternalMessageInfo

func (m *CommonUserRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CommonUserRequest) GetData() *User {
	if m != nil {
		return m.Data
	}
	return nil
}

// common users request payload
type CommonUsersRequest struct {
	// user ids
	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	// user payload
	Data                 *User    `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonUsersRequest) Reset()         { *m = CommonUsersRequest{} }
func (m *CommonUsersRequest) String() string { return proto.CompactTextString(m) }
func (*CommonUsersRequest) ProtoMessage()    {}
func (*CommonUsersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{23}
}

func (m *CommonUsersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonUsersRequest.Unmarshal(m, b)
}
func (m *CommonUsersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonUsersRequest.Marshal(b, m, deterministic)
}
func (m *CommonUsersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonUsersRequest.Merge(m, src)
}
func (m *CommonUsersRequest) XXX_Size() int {
	return xxx_messageInfo_CommonUsersRequest.Size(m)
}
func (m *CommonUsersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonUsersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommonUsersRequest proto.InternalMessageInfo

func (m *CommonUsersRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *CommonUsersRequest) GetData() *User {
	if m != nil {
		return m.Data
	}
	return nil
}

// common users response payload
type CommonUsersResponse struct {
	// users payload
	Data []*User `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	// total users
	Total                int64    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonUsersResponse) Reset()         { *m = CommonUsersResponse{} }
func (m *CommonUsersResponse) String() string { return proto.CompactTextString(m) }
func (*CommonUsersResponse) ProtoMessage()    {}
func (*CommonUsersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{24}
}

func (m *CommonUsersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonUsersResponse.Unmarshal(m, b)
}
func (m *CommonUsersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonUsersResponse.Marshal(b, m, deterministic)
}
func (m *CommonUsersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonUsersResponse.Merge(m, src)
}
func (m *CommonUsersResponse) XXX_Size() int {
	return xxx_messageInfo_CommonUsersResponse.Size(m)
}
func (m *CommonUsersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonUsersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommonUsersResponse proto.InternalMessageInfo

func (m *CommonUsersResponse) GetData() []*User {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CommonUsersResponse) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

// common user response payload
type CommonUserResponse struct {
	// user payload
	Data                 *User    `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonUserResponse) Reset()         { *m = CommonUserResponse{} }
func (m *CommonUserResponse) String() string { return proto.CompactTextString(m) }
func (*CommonUserResponse) ProtoMessage()    {}
func (*CommonUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{25}
}

func (m *CommonUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonUserResponse.Unmarshal(m, b)
}
func (m *CommonUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonUserResponse.Marshal(b, m, deterministic)
}
func (m *CommonUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonUserResponse.Merge(m, src)
}
func (m *CommonUserResponse) XXX_Size() int {
	return xxx_messageInfo_CommonUserResponse.Size(m)
}
func (m *CommonUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommonUserResponse proto.InternalMessageInfo

func (m *CommonUserResponse) GetData() *User {
	if m != nil {
		return m.Data
	}
	return nil
}

// declaration payload
type Declaration struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// patient IC / passport
	PatientId string `protobuf:"bytes,2,opt,name=patientId,proto3" json:"patientId,omitempty"`
	// cough (1 - no cough, 2 - getting better, 3 - cough remains the same, 4 - start coughing today, 5 - getting worse)
	Cough int64 `protobuf:"varint,3,opt,name=cough,proto3" json:"cough,omitempty"`
	// sore throat (1 - meno sore throat, 2 - getting better, 3 - sore throat remains the same, 4 - start having sore throat today, 5 - getting worse)
	Throat int64 `protobuf:"varint,4,opt,name=throat,proto3" json:"throat,omitempty"`
	// fever (1 - no fever, 3 - fever remains the same, 4 - start having a fever today, 5 - getting worse)
	Fever int64 `protobuf:"varint,5,opt,name=fever,proto3" json:"fever,omitempty"`
	// breathing difficulty (1 - no, 4 - has)
	Breathe int64 `protobuf:"varint,6,opt,name=breathe,proto3" json:"breathe,omitempty"`
	// chest pain (1 - no, 4 - has)
	Chest int64 `protobuf:"varint,7,opt,name=chest,proto3" json:"chest,omitempty"`
	// blue face (1 - no, 4 - has)
	Blue int64 `protobuf:"varint,8,opt,name=blue,proto3" json:"blue,omitempty"`
	// drowsiness (1 - no, 4 - has)
	Drowsy int64 `protobuf:"varint,9,opt,name=drowsy,proto3" json:"drowsy,omitempty"`
	// loss of taste / smell
	Loss int64 `protobuf:"varint,10,opt,name=loss,proto3" json:"loss,omitempty"`
	// report result (has symptom / no symptom)
	HasSymptom bool `protobuf:"varint,11,opt,name=hasSymptom,proto3" json:"hasSymptom,omitempty"`
	// report submission time in milliseconds
	SubmittedAt int64 `protobuf:"varint,12,opt,name=submittedAt,proto3" json:"submittedAt,omitempty"`
	// report calling status (1 - don’t have to call, 2 - patient called UMMC, 3 - UMMC called patient, 4 - no call yet)
	CallingStatus int64 `protobuf:"varint,13,opt,name=callingStatus,proto3" json:"callingStatus,omitempty"`
	// report date in string yyyyMMdd
	Date string `protobuf:"bytes,14,opt,name=date,proto3" json:"date,omitempty"`
	// patient name
	PatientName string `protobuf:"bytes,15,opt,name=patientName,proto3" json:"patientName,omitempty"`
	// patient phone number
	PatientPhoneNumber string `protobuf:"bytes,16,opt,name=patientPhoneNumber,proto3" json:"patientPhoneNumber,omitempty"`
	// doctor remarks on the report
	DoctorRemarks        string   `protobuf:"bytes,17,opt,name=doctorRemarks,proto3" json:"doctorRemarks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Declaration) Reset()         { *m = Declaration{} }
func (m *Declaration) String() string { return proto.CompactTextString(m) }
func (*Declaration) ProtoMessage()    {}
func (*Declaration) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{26}
}

func (m *Declaration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Declaration.Unmarshal(m, b)
}
func (m *Declaration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Declaration.Marshal(b, m, deterministic)
}
func (m *Declaration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Declaration.Merge(m, src)
}
func (m *Declaration) XXX_Size() int {
	return xxx_messageInfo_Declaration.Size(m)
}
func (m *Declaration) XXX_DiscardUnknown() {
	xxx_messageInfo_Declaration.DiscardUnknown(m)
}

var xxx_messageInfo_Declaration proto.InternalMessageInfo

func (m *Declaration) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Declaration) GetPatientId() string {
	if m != nil {
		return m.PatientId
	}
	return ""
}

func (m *Declaration) GetCough() int64 {
	if m != nil {
		return m.Cough
	}
	return 0
}

func (m *Declaration) GetThroat() int64 {
	if m != nil {
		return m.Throat
	}
	return 0
}

func (m *Declaration) GetFever() int64 {
	if m != nil {
		return m.Fever
	}
	return 0
}

func (m *Declaration) GetBreathe() int64 {
	if m != nil {
		return m.Breathe
	}
	return 0
}

func (m *Declaration) GetChest() int64 {
	if m != nil {
		return m.Chest
	}
	return 0
}

func (m *Declaration) GetBlue() int64 {
	if m != nil {
		return m.Blue
	}
	return 0
}

func (m *Declaration) GetDrowsy() int64 {
	if m != nil {
		return m.Drowsy
	}
	return 0
}

func (m *Declaration) GetLoss() int64 {
	if m != nil {
		return m.Loss
	}
	return 0
}

func (m *Declaration) GetHasSymptom() bool {
	if m != nil {
		return m.HasSymptom
	}
	return false
}

func (m *Declaration) GetSubmittedAt() int64 {
	if m != nil {
		return m.SubmittedAt
	}
	return 0
}

func (m *Declaration) GetCallingStatus() int64 {
	if m != nil {
		return m.CallingStatus
	}
	return 0
}

func (m *Declaration) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *Declaration) GetPatientName() string {
	if m != nil {
		return m.PatientName
	}
	return ""
}

func (m *Declaration) GetPatientPhoneNumber() string {
	if m != nil {
		return m.PatientPhoneNumber
	}
	return ""
}

func (m *Declaration) GetDoctorRemarks() string {
	if m != nil {
		return m.DoctorRemarks
	}
	return ""
}

// common declaration request payload
type CommonDeclarationRequest struct {
	// declaration id (not used )
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// declaration payload
	Data                 *Declaration `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CommonDeclarationRequest) Reset()         { *m = CommonDeclarationRequest{} }
func (m *CommonDeclarationRequest) String() string { return proto.CompactTextString(m) }
func (*CommonDeclarationRequest) ProtoMessage()    {}
func (*CommonDeclarationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{27}
}

func (m *CommonDeclarationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonDeclarationRequest.Unmarshal(m, b)
}
func (m *CommonDeclarationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonDeclarationRequest.Marshal(b, m, deterministic)
}
func (m *CommonDeclarationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonDeclarationRequest.Merge(m, src)
}
func (m *CommonDeclarationRequest) XXX_Size() int {
	return xxx_messageInfo_CommonDeclarationRequest.Size(m)
}
func (m *CommonDeclarationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonDeclarationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommonDeclarationRequest proto.InternalMessageInfo

func (m *CommonDeclarationRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CommonDeclarationRequest) GetData() *Declaration {
	if m != nil {
		return m.Data
	}
	return nil
}

// common declarations request payload
type CommonDeclarationsRequest struct {
	// declaration ids
	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	// declaration payload
	Data                 *Declaration `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CommonDeclarationsRequest) Reset()         { *m = CommonDeclarationsRequest{} }
func (m *CommonDeclarationsRequest) String() string { return proto.CompactTextString(m) }
func (*CommonDeclarationsRequest) ProtoMessage()    {}
func (*CommonDeclarationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{28}
}

func (m *CommonDeclarationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonDeclarationsRequest.Unmarshal(m, b)
}
func (m *CommonDeclarationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonDeclarationsRequest.Marshal(b, m, deterministic)
}
func (m *CommonDeclarationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonDeclarationsRequest.Merge(m, src)
}
func (m *CommonDeclarationsRequest) XXX_Size() int {
	return xxx_messageInfo_CommonDeclarationsRequest.Size(m)
}
func (m *CommonDeclarationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonDeclarationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommonDeclarationsRequest proto.InternalMessageInfo

func (m *CommonDeclarationsRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *CommonDeclarationsRequest) GetData() *Declaration {
	if m != nil {
		return m.Data
	}
	return nil
}

// common declaration response payload
type CommonDeclarationResponse struct {
	// declaration payload
	Data                 *Declaration `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CommonDeclarationResponse) Reset()         { *m = CommonDeclarationResponse{} }
func (m *CommonDeclarationResponse) String() string { return proto.CompactTextString(m) }
func (*CommonDeclarationResponse) ProtoMessage()    {}
func (*CommonDeclarationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{29}
}

func (m *CommonDeclarationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonDeclarationResponse.Unmarshal(m, b)
}
func (m *CommonDeclarationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonDeclarationResponse.Marshal(b, m, deterministic)
}
func (m *CommonDeclarationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonDeclarationResponse.Merge(m, src)
}
func (m *CommonDeclarationResponse) XXX_Size() int {
	return xxx_messageInfo_CommonDeclarationResponse.Size(m)
}
func (m *CommonDeclarationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonDeclarationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommonDeclarationResponse proto.InternalMessageInfo

func (m *CommonDeclarationResponse) GetData() *Declaration {
	if m != nil {
		return m.Data
	}
	return nil
}

// get declarations response payload
type CommonDeclarationsResponse struct {
	// declarations payload
	Data []*Declaration `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	// total declarations
	Total                int64    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonDeclarationsResponse) Reset()         { *m = CommonDeclarationsResponse{} }
func (m *CommonDeclarationsResponse) String() string { return proto.CompactTextString(m) }
func (*CommonDeclarationsResponse) ProtoMessage()    {}
func (*CommonDeclarationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{30}
}

func (m *CommonDeclarationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonDeclarationsResponse.Unmarshal(m, b)
}
func (m *CommonDeclarationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonDeclarationsResponse.Marshal(b, m, deterministic)
}
func (m *CommonDeclarationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonDeclarationsResponse.Merge(m, src)
}
func (m *CommonDeclarationsResponse) XXX_Size() int {
	return xxx_messageInfo_CommonDeclarationsResponse.Size(m)
}
func (m *CommonDeclarationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonDeclarationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommonDeclarationsResponse proto.InternalMessageInfo

func (m *CommonDeclarationsResponse) GetData() []*Declaration {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CommonDeclarationsResponse) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

// client update patient request payload
type ClientUpdatePatientRequest struct {
	// patient telegram ID
	TelegramId string `protobuf:"bytes,1,opt,name=telegramId,proto3" json:"telegramId,omitempty"`
	// patient name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// patient phone number
	PhoneNumber string `protobuf:"bytes,3,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	// patient IC / passport
	Id string `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	// patient status (1 - Symptomatic, 2 - Asymptomatic，3 - Confirmed but not Admitted, 4 - Confirmed and Admitted, 5 - Completed, 6 - Recovered, 7 - Quit, 8 - Passed Away)
	Status int64 `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	// patient email
	Email string `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	// patient latest declare time in milliseconds
	LastDeclared int64 `protobuf:"varint,7,opt,name=lastDeclared,proto3" json:"lastDeclared,omitempty"`
	// patient episode
	Episode int64 `protobuf:"varint,8,opt,name=episode,proto3" json:"episode,omitempty"`
	// patient type  (1 - PUI, 2 - Contact Tracing)
	Type int64 `protobuf:"varint,9,opt,name=type,proto3" json:"type,omitempty"`
	// patient localization (1 - English, 2 - Malay， 3 - Chinese, 4 - Tamil)
	Localization int64 `protobuf:"varint,10,opt,name=localization,proto3" json:"localization,omitempty"`
	// doctors' remarks on patient
	Remarks string `protobuf:"bytes,11,opt,name=remarks,proto3" json:"remarks,omitempty"`
	// patient consent signing time in milliseconds
	Consent int64 `protobuf:"varint,12,opt,name=consent,proto3" json:"consent,omitempty"`
	// patient privacy policy signing time in milliseconds
	PrivacyPolicy        int64    `protobuf:"varint,13,opt,name=privacyPolicy,proto3" json:"privacyPolicy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientUpdatePatientRequest) Reset()         { *m = ClientUpdatePatientRequest{} }
func (m *ClientUpdatePatientRequest) String() string { return proto.CompactTextString(m) }
func (*ClientUpdatePatientRequest) ProtoMessage()    {}
func (*ClientUpdatePatientRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{31}
}

func (m *ClientUpdatePatientRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientUpdatePatientRequest.Unmarshal(m, b)
}
func (m *ClientUpdatePatientRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientUpdatePatientRequest.Marshal(b, m, deterministic)
}
func (m *ClientUpdatePatientRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientUpdatePatientRequest.Merge(m, src)
}
func (m *ClientUpdatePatientRequest) XXX_Size() int {
	return xxx_messageInfo_ClientUpdatePatientRequest.Size(m)
}
func (m *ClientUpdatePatientRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientUpdatePatientRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClientUpdatePatientRequest proto.InternalMessageInfo

func (m *ClientUpdatePatientRequest) GetTelegramId() string {
	if m != nil {
		return m.TelegramId
	}
	return ""
}

func (m *ClientUpdatePatientRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ClientUpdatePatientRequest) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *ClientUpdatePatientRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ClientUpdatePatientRequest) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ClientUpdatePatientRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ClientUpdatePatientRequest) GetLastDeclared() int64 {
	if m != nil {
		return m.LastDeclared
	}
	return 0
}

func (m *ClientUpdatePatientRequest) GetEpisode() int64 {
	if m != nil {
		return m.Episode
	}
	return 0
}

func (m *ClientUpdatePatientRequest) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ClientUpdatePatientRequest) GetLocalization() int64 {
	if m != nil {
		return m.Localization
	}
	return 0
}

func (m *ClientUpdatePatientRequest) GetRemarks() string {
	if m != nil {
		return m.Remarks
	}
	return ""
}

func (m *ClientUpdatePatientRequest) GetConsent() int64 {
	if m != nil {
		return m.Consent
	}
	return 0
}

func (m *ClientUpdatePatientRequest) GetPrivacyPolicy() int64 {
	if m != nil {
		return m.PrivacyPolicy
	}
	return 0
}

// client get patients request payload
type ClientGetPatientsRequest struct {
	// patient telegram ID
	TelegramId string `protobuf:"bytes,1,opt,name=telegramId,proto3" json:"telegramId,omitempty"`
	// patient phone number
	PhoneNumber string `protobuf:"bytes,2,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	// patient id
	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	// day of monitoring
	Day                  int64    `protobuf:"varint,4,opt,name=day,proto3" json:"day,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientGetPatientsRequest) Reset()         { *m = ClientGetPatientsRequest{} }
func (m *ClientGetPatientsRequest) String() string { return proto.CompactTextString(m) }
func (*ClientGetPatientsRequest) ProtoMessage()    {}
func (*ClientGetPatientsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{32}
}

func (m *ClientGetPatientsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientGetPatientsRequest.Unmarshal(m, b)
}
func (m *ClientGetPatientsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientGetPatientsRequest.Marshal(b, m, deterministic)
}
func (m *ClientGetPatientsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientGetPatientsRequest.Merge(m, src)
}
func (m *ClientGetPatientsRequest) XXX_Size() int {
	return xxx_messageInfo_ClientGetPatientsRequest.Size(m)
}
func (m *ClientGetPatientsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientGetPatientsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClientGetPatientsRequest proto.InternalMessageInfo

func (m *ClientGetPatientsRequest) GetTelegramId() string {
	if m != nil {
		return m.TelegramId
	}
	return ""
}

func (m *ClientGetPatientsRequest) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *ClientGetPatientsRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ClientGetPatientsRequest) GetDay() int64 {
	if m != nil {
		return m.Day
	}
	return 0
}

// client get patients request payload
type ClientGetPatientV2Request struct {
	// patient telegram ID
	TelegramId string `protobuf:"bytes,1,opt,name=telegramId,proto3" json:"telegramId,omitempty"`
	// patient phone number
	PhoneNumber string `protobuf:"bytes,2,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	// patient id
	Id                   string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientGetPatientV2Request) Reset()         { *m = ClientGetPatientV2Request{} }
func (m *ClientGetPatientV2Request) String() string { return proto.CompactTextString(m) }
func (*ClientGetPatientV2Request) ProtoMessage()    {}
func (*ClientGetPatientV2Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{33}
}

func (m *ClientGetPatientV2Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientGetPatientV2Request.Unmarshal(m, b)
}
func (m *ClientGetPatientV2Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientGetPatientV2Request.Marshal(b, m, deterministic)
}
func (m *ClientGetPatientV2Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientGetPatientV2Request.Merge(m, src)
}
func (m *ClientGetPatientV2Request) XXX_Size() int {
	return xxx_messageInfo_ClientGetPatientV2Request.Size(m)
}
func (m *ClientGetPatientV2Request) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientGetPatientV2Request.DiscardUnknown(m)
}

var xxx_messageInfo_ClientGetPatientV2Request proto.InternalMessageInfo

func (m *ClientGetPatientV2Request) GetTelegramId() string {
	if m != nil {
		return m.TelegramId
	}
	return ""
}

func (m *ClientGetPatientV2Request) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *ClientGetPatientV2Request) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// client get undeclared patients request payload
type ClientGetUndeclaredPatientsRequest struct {
	// undeclared from given millisecond time (deprecated, now depending on 12 am)
	From int64 `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	// undeclared to given millisecond time (deprecated)
	To                   int64    `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientGetUndeclaredPatientsRequest) Reset()         { *m = ClientGetUndeclaredPatientsRequest{} }
func (m *ClientGetUndeclaredPatientsRequest) String() string { return proto.CompactTextString(m) }
func (*ClientGetUndeclaredPatientsRequest) ProtoMessage()    {}
func (*ClientGetUndeclaredPatientsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{34}
}

func (m *ClientGetUndeclaredPatientsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientGetUndeclaredPatientsRequest.Unmarshal(m, b)
}
func (m *ClientGetUndeclaredPatientsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientGetUndeclaredPatientsRequest.Marshal(b, m, deterministic)
}
func (m *ClientGetUndeclaredPatientsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientGetUndeclaredPatientsRequest.Merge(m, src)
}
func (m *ClientGetUndeclaredPatientsRequest) XXX_Size() int {
	return xxx_messageInfo_ClientGetUndeclaredPatientsRequest.Size(m)
}
func (m *ClientGetUndeclaredPatientsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientGetUndeclaredPatientsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClientGetUndeclaredPatientsRequest proto.InternalMessageInfo

func (m *ClientGetUndeclaredPatientsRequest) GetFrom() int64 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *ClientGetUndeclaredPatientsRequest) GetTo() int64 {
	if m != nil {
		return m.To
	}
	return 0
}

// client create declaration request payload
type ClientCreateDeclarationRequest struct {
	// patient IC / passport
	PatientId string `protobuf:"bytes,1,opt,name=patientId,proto3" json:"patientId,omitempty"`
	// cough (1 - no cough, 2 - getting better, 3 - cough remains the same, 4 - start coughing today, 5 - getting worse)
	Cough int64 `protobuf:"varint,2,opt,name=cough,proto3" json:"cough,omitempty"`
	// sore throat (1 - no sore throat, 2 - getting better, 3 - sore throat remains the same, 4 - start having sore throat today, 5 - getting worse)
	Throat int64 `protobuf:"varint,3,opt,name=throat,proto3" json:"throat,omitempty"`
	// fever (1 - no fever, 3 - fever remains the same, 4 - start having a fever today, 5 - getting worse)
	Fever int64 `protobuf:"varint,4,opt,name=fever,proto3" json:"fever,omitempty"`
	// breathing difficulty (1 - no, 4 - has)
	Breathe int64 `protobuf:"varint,5,opt,name=breathe,proto3" json:"breathe,omitempty"`
	// chest pain (1 - no, 4 - has)
	Chest int64 `protobuf:"varint,6,opt,name=chest,proto3" json:"chest,omitempty"`
	// blue face (1 - no, 4 - has)
	Blue int64 `protobuf:"varint,7,opt,name=blue,proto3" json:"blue,omitempty"`
	// drowsiness (1 - no, 4 - has)
	Drowsy int64 `protobuf:"varint,8,opt,name=drowsy,proto3" json:"drowsy,omitempty"`
	// loss of taste / smell
	Loss                 int64    `protobuf:"varint,9,opt,name=loss,proto3" json:"loss,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientCreateDeclarationRequest) Reset()         { *m = ClientCreateDeclarationRequest{} }
func (m *ClientCreateDeclarationRequest) String() string { return proto.CompactTextString(m) }
func (*ClientCreateDeclarationRequest) ProtoMessage()    {}
func (*ClientCreateDeclarationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{35}
}

func (m *ClientCreateDeclarationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientCreateDeclarationRequest.Unmarshal(m, b)
}
func (m *ClientCreateDeclarationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientCreateDeclarationRequest.Marshal(b, m, deterministic)
}
func (m *ClientCreateDeclarationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientCreateDeclarationRequest.Merge(m, src)
}
func (m *ClientCreateDeclarationRequest) XXX_Size() int {
	return xxx_messageInfo_ClientCreateDeclarationRequest.Size(m)
}
func (m *ClientCreateDeclarationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientCreateDeclarationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClientCreateDeclarationRequest proto.InternalMessageInfo

func (m *ClientCreateDeclarationRequest) GetPatientId() string {
	if m != nil {
		return m.PatientId
	}
	return ""
}

func (m *ClientCreateDeclarationRequest) GetCough() int64 {
	if m != nil {
		return m.Cough
	}
	return 0
}

func (m *ClientCreateDeclarationRequest) GetThroat() int64 {
	if m != nil {
		return m.Throat
	}
	return 0
}

func (m *ClientCreateDeclarationRequest) GetFever() int64 {
	if m != nil {
		return m.Fever
	}
	return 0
}

func (m *ClientCreateDeclarationRequest) GetBreathe() int64 {
	if m != nil {
		return m.Breathe
	}
	return 0
}

func (m *ClientCreateDeclarationRequest) GetChest() int64 {
	if m != nil {
		return m.Chest
	}
	return 0
}

func (m *ClientCreateDeclarationRequest) GetBlue() int64 {
	if m != nil {
		return m.Blue
	}
	return 0
}

func (m *ClientCreateDeclarationRequest) GetDrowsy() int64 {
	if m != nil {
		return m.Drowsy
	}
	return 0
}

func (m *ClientCreateDeclarationRequest) GetLoss() int64 {
	if m != nil {
		return m.Loss
	}
	return 0
}

// client get patients response payload
type ClientGetPatientsResponse struct {
	// patients payload
	Patients             []*Patient `protobuf:"bytes,1,rep,name=patients,proto3" json:"patients,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ClientGetPatientsResponse) Reset()         { *m = ClientGetPatientsResponse{} }
func (m *ClientGetPatientsResponse) String() string { return proto.CompactTextString(m) }
func (*ClientGetPatientsResponse) ProtoMessage()    {}
func (*ClientGetPatientsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{36}
}

func (m *ClientGetPatientsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientGetPatientsResponse.Unmarshal(m, b)
}
func (m *ClientGetPatientsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientGetPatientsResponse.Marshal(b, m, deterministic)
}
func (m *ClientGetPatientsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientGetPatientsResponse.Merge(m, src)
}
func (m *ClientGetPatientsResponse) XXX_Size() int {
	return xxx_messageInfo_ClientGetPatientsResponse.Size(m)
}
func (m *ClientGetPatientsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientGetPatientsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClientGetPatientsResponse proto.InternalMessageInfo

func (m *ClientGetPatientsResponse) GetPatients() []*Patient {
	if m != nil {
		return m.Patients
	}
	return nil
}

// client get patient V2 response payload
type ClientGetPatientV2Response struct {
	Data                 *Patient `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientGetPatientV2Response) Reset()         { *m = ClientGetPatientV2Response{} }
func (m *ClientGetPatientV2Response) String() string { return proto.CompactTextString(m) }
func (*ClientGetPatientV2Response) ProtoMessage()    {}
func (*ClientGetPatientV2Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{37}
}

func (m *ClientGetPatientV2Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientGetPatientV2Response.Unmarshal(m, b)
}
func (m *ClientGetPatientV2Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientGetPatientV2Response.Marshal(b, m, deterministic)
}
func (m *ClientGetPatientV2Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientGetPatientV2Response.Merge(m, src)
}
func (m *ClientGetPatientV2Response) XXX_Size() int {
	return xxx_messageInfo_ClientGetPatientV2Response.Size(m)
}
func (m *ClientGetPatientV2Response) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientGetPatientV2Response.DiscardUnknown(m)
}

var xxx_messageInfo_ClientGetPatientV2Response proto.InternalMessageInfo

func (m *ClientGetPatientV2Response) GetData() *Patient {
	if m != nil {
		return m.Data
	}
	return nil
}

// client update patient V2 response payload
type ClientUpdatePatientV2Response struct {
	RegistrationStatus   int64    `protobuf:"varint,1,opt,name=registrationStatus,proto3" json:"registrationStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientUpdatePatientV2Response) Reset()         { *m = ClientUpdatePatientV2Response{} }
func (m *ClientUpdatePatientV2Response) String() string { return proto.CompactTextString(m) }
func (*ClientUpdatePatientV2Response) ProtoMessage()    {}
func (*ClientUpdatePatientV2Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{38}
}

func (m *ClientUpdatePatientV2Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientUpdatePatientV2Response.Unmarshal(m, b)
}
func (m *ClientUpdatePatientV2Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientUpdatePatientV2Response.Marshal(b, m, deterministic)
}
func (m *ClientUpdatePatientV2Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientUpdatePatientV2Response.Merge(m, src)
}
func (m *ClientUpdatePatientV2Response) XXX_Size() int {
	return xxx_messageInfo_ClientUpdatePatientV2Response.Size(m)
}
func (m *ClientUpdatePatientV2Response) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientUpdatePatientV2Response.DiscardUnknown(m)
}

var xxx_messageInfo_ClientUpdatePatientV2Response proto.InternalMessageInfo

func (m *ClientUpdatePatientV2Response) GetRegistrationStatus() int64 {
	if m != nil {
		return m.RegistrationStatus
	}
	return 0
}

// client get undeclared patients response payload
type ClientGetUndeclaredPatientsResponse struct {
	// patients payload
	Patients             []*Patient `protobuf:"bytes,1,rep,name=patients,proto3" json:"patients,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ClientGetUndeclaredPatientsResponse) Reset()         { *m = ClientGetUndeclaredPatientsResponse{} }
func (m *ClientGetUndeclaredPatientsResponse) String() string { return proto.CompactTextString(m) }
func (*ClientGetUndeclaredPatientsResponse) ProtoMessage()    {}
func (*ClientGetUndeclaredPatientsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{39}
}

func (m *ClientGetUndeclaredPatientsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientGetUndeclaredPatientsResponse.Unmarshal(m, b)
}
func (m *ClientGetUndeclaredPatientsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientGetUndeclaredPatientsResponse.Marshal(b, m, deterministic)
}
func (m *ClientGetUndeclaredPatientsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientGetUndeclaredPatientsResponse.Merge(m, src)
}
func (m *ClientGetUndeclaredPatientsResponse) XXX_Size() int {
	return xxx_messageInfo_ClientGetUndeclaredPatientsResponse.Size(m)
}
func (m *ClientGetUndeclaredPatientsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientGetUndeclaredPatientsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClientGetUndeclaredPatientsResponse proto.InternalMessageInfo

func (m *ClientGetUndeclaredPatientsResponse) GetPatients() []*Patient {
	if m != nil {
		return m.Patients
	}
	return nil
}

// client create declaration response payload
type ClientCreateDeclarationResponse struct {
	// client report result
	HasSymptom           bool     `protobuf:"varint,1,opt,name=hasSymptom,proto3" json:"hasSymptom,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientCreateDeclarationResponse) Reset()         { *m = ClientCreateDeclarationResponse{} }
func (m *ClientCreateDeclarationResponse) String() string { return proto.CompactTextString(m) }
func (*ClientCreateDeclarationResponse) ProtoMessage()    {}
func (*ClientCreateDeclarationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{40}
}

func (m *ClientCreateDeclarationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientCreateDeclarationResponse.Unmarshal(m, b)
}
func (m *ClientCreateDeclarationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientCreateDeclarationResponse.Marshal(b, m, deterministic)
}
func (m *ClientCreateDeclarationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientCreateDeclarationResponse.Merge(m, src)
}
func (m *ClientCreateDeclarationResponse) XXX_Size() int {
	return xxx_messageInfo_ClientCreateDeclarationResponse.Size(m)
}
func (m *ClientCreateDeclarationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientCreateDeclarationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClientCreateDeclarationResponse proto.InternalMessageInfo

func (m *ClientCreateDeclarationResponse) GetHasSymptom() bool {
	if m != nil {
		return m.HasSymptom
	}
	return false
}

// report payload
type Report struct {
	// don't have to call count
	DontHaveToCallCount int64 `protobuf:"varint,1,opt,name=dontHaveToCallCount,proto3" json:"dontHaveToCallCount,omitempty"`
	// patient called count
	PatientCalledCount int64 `protobuf:"varint,2,opt,name=patientCalledCount,proto3" json:"patientCalledCount,omitempty"`
	// UMMC called count
	UmmcCalledCount int64 `protobuf:"varint,3,opt,name=ummcCalledCount,proto3" json:"ummcCalledCount,omitempty"`
	// no yet called count
	NoYetCallCount int64 `protobuf:"varint,4,opt,name=noYetCallCount,proto3" json:"noYetCallCount,omitempty"`
	// date of report
	Date string `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty"`
	// undeclared count
	UndeclaredCount int64 `protobuf:"varint,6,opt,name=undeclaredCount,proto3" json:"undeclaredCount,omitempty"`
	// declared count
	DeclaredCount int64 `protobuf:"varint,7,opt,name=declaredCount,proto3" json:"declaredCount,omitempty"`
	// asymptomatic patient count
	Asymptomatic int64 `protobuf:"varint,8,opt,name=asymptomatic,proto3" json:"asymptomatic,omitempty"`
	// symptomatic patient count
	Symptomatic int64 `protobuf:"varint,9,opt,name=symptomatic,proto3" json:"symptomatic,omitempty"`
	// confirmed but not admitted patient count
	ConfirmedButNotAdmitted int64 `protobuf:"varint,10,opt,name=confirmedButNotAdmitted,proto3" json:"confirmedButNotAdmitted,omitempty"`
	// confirmed and admitted patient count
	ConfirmedAndAdmitted int64 `protobuf:"varint,11,opt,name=confirmedAndAdmitted,proto3" json:"confirmedAndAdmitted,omitempty"`
	// completed patient count
	Completed int64 `protobuf:"varint,12,opt,name=completed,proto3" json:"completed,omitempty"`
	// quit patient count
	Quit int64 `protobuf:"varint,13,opt,name=quit,proto3" json:"quit,omitempty"`
	// recovered patient count
	Recovered int64 `protobuf:"varint,14,opt,name=recovered,proto3" json:"recovered,omitempty"`
	// passed away patient count
	PassedAway           int64    `protobuf:"varint,15,opt,name=passedAway,proto3" json:"passedAway,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Report) Reset()         { *m = Report{} }
func (m *Report) String() string { return proto.CompactTextString(m) }
func (*Report) ProtoMessage()    {}
func (*Report) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{41}
}

func (m *Report) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Report.Unmarshal(m, b)
}
func (m *Report) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Report.Marshal(b, m, deterministic)
}
func (m *Report) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Report.Merge(m, src)
}
func (m *Report) XXX_Size() int {
	return xxx_messageInfo_Report.Size(m)
}
func (m *Report) XXX_DiscardUnknown() {
	xxx_messageInfo_Report.DiscardUnknown(m)
}

var xxx_messageInfo_Report proto.InternalMessageInfo

func (m *Report) GetDontHaveToCallCount() int64 {
	if m != nil {
		return m.DontHaveToCallCount
	}
	return 0
}

func (m *Report) GetPatientCalledCount() int64 {
	if m != nil {
		return m.PatientCalledCount
	}
	return 0
}

func (m *Report) GetUmmcCalledCount() int64 {
	if m != nil {
		return m.UmmcCalledCount
	}
	return 0
}

func (m *Report) GetNoYetCallCount() int64 {
	if m != nil {
		return m.NoYetCallCount
	}
	return 0
}

func (m *Report) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *Report) GetUndeclaredCount() int64 {
	if m != nil {
		return m.UndeclaredCount
	}
	return 0
}

func (m *Report) GetDeclaredCount() int64 {
	if m != nil {
		return m.DeclaredCount
	}
	return 0
}

func (m *Report) GetAsymptomatic() int64 {
	if m != nil {
		return m.Asymptomatic
	}
	return 0
}

func (m *Report) GetSymptomatic() int64 {
	if m != nil {
		return m.Symptomatic
	}
	return 0
}

func (m *Report) GetConfirmedButNotAdmitted() int64 {
	if m != nil {
		return m.ConfirmedButNotAdmitted
	}
	return 0
}

func (m *Report) GetConfirmedAndAdmitted() int64 {
	if m != nil {
		return m.ConfirmedAndAdmitted
	}
	return 0
}

func (m *Report) GetCompleted() int64 {
	if m != nil {
		return m.Completed
	}
	return 0
}

func (m *Report) GetQuit() int64 {
	if m != nil {
		return m.Quit
	}
	return 0
}

func (m *Report) GetRecovered() int64 {
	if m != nil {
		return m.Recovered
	}
	return 0
}

func (m *Report) GetPassedAway() int64 {
	if m != nil {
		return m.PassedAway
	}
	return 0
}

// get report request payload
type GetReportRequest struct {
	// date of report
	Date string `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	// type of report (1 - status, 2 - declaration, 3 - calling status)
	Type                 int64    `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetReportRequest) Reset()         { *m = GetReportRequest{} }
func (m *GetReportRequest) String() string { return proto.CompactTextString(m) }
func (*GetReportRequest) ProtoMessage()    {}
func (*GetReportRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{42}
}

func (m *GetReportRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReportRequest.Unmarshal(m, b)
}
func (m *GetReportRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReportRequest.Marshal(b, m, deterministic)
}
func (m *GetReportRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReportRequest.Merge(m, src)
}
func (m *GetReportRequest) XXX_Size() int {
	return xxx_messageInfo_GetReportRequest.Size(m)
}
func (m *GetReportRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReportRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetReportRequest proto.InternalMessageInfo

func (m *GetReportRequest) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *GetReportRequest) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

// get reports request payload
type GetReportsRequest struct {
	// from date (inclusive, in yyyyMMdd format)
	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// to date (inclusive, in yyyyMMdd format)
	To string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	// type of report (1 - status, 2 - declaration, 3 - calling status)
	Type                 int64    `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetReportsRequest) Reset()         { *m = GetReportsRequest{} }
func (m *GetReportsRequest) String() string { return proto.CompactTextString(m) }
func (*GetReportsRequest) ProtoMessage()    {}
func (*GetReportsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{43}
}

func (m *GetReportsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReportsRequest.Unmarshal(m, b)
}
func (m *GetReportsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReportsRequest.Marshal(b, m, deterministic)
}
func (m *GetReportsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReportsRequest.Merge(m, src)
}
func (m *GetReportsRequest) XXX_Size() int {
	return xxx_messageInfo_GetReportsRequest.Size(m)
}
func (m *GetReportsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReportsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetReportsRequest proto.InternalMessageInfo

func (m *GetReportsRequest) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *GetReportsRequest) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *GetReportsRequest) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

// common report response payload
type CommonReportResponse struct {
	// report payload
	Data                 *Report  `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonReportResponse) Reset()         { *m = CommonReportResponse{} }
func (m *CommonReportResponse) String() string { return proto.CompactTextString(m) }
func (*CommonReportResponse) ProtoMessage()    {}
func (*CommonReportResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{44}
}

func (m *CommonReportResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonReportResponse.Unmarshal(m, b)
}
func (m *CommonReportResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonReportResponse.Marshal(b, m, deterministic)
}
func (m *CommonReportResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonReportResponse.Merge(m, src)
}
func (m *CommonReportResponse) XXX_Size() int {
	return xxx_messageInfo_CommonReportResponse.Size(m)
}
func (m *CommonReportResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonReportResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommonReportResponse proto.InternalMessageInfo

func (m *CommonReportResponse) GetData() *Report {
	if m != nil {
		return m.Data
	}
	return nil
}

// common reports response payload
type CommonReportsResponse struct {
	// reports payload
	Data                 []*Report `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CommonReportsResponse) Reset()         { *m = CommonReportsResponse{} }
func (m *CommonReportsResponse) String() string { return proto.CompactTextString(m) }
func (*CommonReportsResponse) ProtoMessage()    {}
func (*CommonReportsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{45}
}

func (m *CommonReportsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonReportsResponse.Unmarshal(m, b)
}
func (m *CommonReportsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonReportsResponse.Marshal(b, m, deterministic)
}
func (m *CommonReportsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonReportsResponse.Merge(m, src)
}
func (m *CommonReportsResponse) XXX_Size() int {
	return xxx_messageInfo_CommonReportsResponse.Size(m)
}
func (m *CommonReportsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonReportsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommonReportsResponse proto.InternalMessageInfo

func (m *CommonReportsResponse) GetData() []*Report {
	if m != nil {
		return m.Data
	}
	return nil
}

// activity payload
type Activity struct {
	// activity ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// user id
	UserId string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	// user name
	UserName string `protobuf:"bytes,3,opt,name=userName,proto3" json:"userName,omitempty"`
	// old patient
	OldPatient *Patient `protobuf:"bytes,4,opt,name=oldPatient,proto3" json:"oldPatient,omitempty"`
	// new patient
	NewPatient *Patient `protobuf:"bytes,5,opt,name=newPatient,proto3" json:"newPatient,omitempty"`
	// old swab
	OldSwab *Swab `protobuf:"bytes,6,opt,name=oldSwab,proto3" json:"oldSwab,omitempty"`
	// new swab
	NewSwab *Swab `protobuf:"bytes,7,opt,name=newSwab,proto3" json:"newSwab,omitempty"`
	// time
	Time                 int64    `protobuf:"varint,8,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Activity) Reset()         { *m = Activity{} }
func (m *Activity) String() string { return proto.CompactTextString(m) }
func (*Activity) ProtoMessage()    {}
func (*Activity) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{46}
}

func (m *Activity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Activity.Unmarshal(m, b)
}
func (m *Activity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Activity.Marshal(b, m, deterministic)
}
func (m *Activity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity.Merge(m, src)
}
func (m *Activity) XXX_Size() int {
	return xxx_messageInfo_Activity.Size(m)
}
func (m *Activity) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity.DiscardUnknown(m)
}

var xxx_messageInfo_Activity proto.InternalMessageInfo

func (m *Activity) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Activity) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Activity) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *Activity) GetOldPatient() *Patient {
	if m != nil {
		return m.OldPatient
	}
	return nil
}

func (m *Activity) GetNewPatient() *Patient {
	if m != nil {
		return m.NewPatient
	}
	return nil
}

func (m *Activity) GetOldSwab() *Swab {
	if m != nil {
		return m.OldSwab
	}
	return nil
}

func (m *Activity) GetNewSwab() *Swab {
	if m != nil {
		return m.NewSwab
	}
	return nil
}

func (m *Activity) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

// common activities response payload
type CommonActivitiesResponse struct {
	// activities payload
	Data []*Activity `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	// total activities
	Total                int64    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonActivitiesResponse) Reset()         { *m = CommonActivitiesResponse{} }
func (m *CommonActivitiesResponse) String() string { return proto.CompactTextString(m) }
func (*CommonActivitiesResponse) ProtoMessage()    {}
func (*CommonActivitiesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{47}
}

func (m *CommonActivitiesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonActivitiesResponse.Unmarshal(m, b)
}
func (m *CommonActivitiesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonActivitiesResponse.Marshal(b, m, deterministic)
}
func (m *CommonActivitiesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonActivitiesResponse.Merge(m, src)
}
func (m *CommonActivitiesResponse) XXX_Size() int {
	return xxx_messageInfo_CommonActivitiesResponse.Size(m)
}
func (m *CommonActivitiesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonActivitiesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommonActivitiesResponse proto.InternalMessageInfo

func (m *CommonActivitiesResponse) GetData() []*Activity {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CommonActivitiesResponse) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

// common activity response payload
type CommonActivityResponse struct {
	// activity payload
	Data                 *Activity `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CommonActivityResponse) Reset()         { *m = CommonActivityResponse{} }
func (m *CommonActivityResponse) String() string { return proto.CompactTextString(m) }
func (*CommonActivityResponse) ProtoMessage()    {}
func (*CommonActivityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1f0a13ba2b7b794, []int{48}
}

func (m *CommonActivityResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonActivityResponse.Unmarshal(m, b)
}
func (m *CommonActivityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonActivityResponse.Marshal(b, m, deterministic)
}
func (m *CommonActivityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonActivityResponse.Merge(m, src)
}
func (m *CommonActivityResponse) XXX_Size() int {
	return xxx_messageInfo_CommonActivityResponse.Size(m)
}
func (m *CommonActivityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonActivityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommonActivityResponse proto.InternalMessageInfo

func (m *CommonActivityResponse) GetData() *Activity {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*CommonGetsRequest)(nil), "pb.CommonGetsRequest")
	proto.RegisterType((*CommonGetRequest)(nil), "pb.CommonGetRequest")
	proto.RegisterType((*CommonDeleteRequest)(nil), "pb.CommonDeleteRequest")
	proto.RegisterType((*CommonDeletesRequest)(nil), "pb.CommonDeletesRequest")
	proto.RegisterType((*CommonIdsResponse)(nil), "pb.CommonIdsResponse")
	proto.RegisterType((*LoginRequest)(nil), "pb.LoginRequest")
	proto.RegisterType((*GetPasswordResetRequest)(nil), "pb.GetPasswordResetRequest")
	proto.RegisterType((*UpdatePasswordRequest)(nil), "pb.UpdatePasswordRequest")
	proto.RegisterType((*LoginResponse)(nil), "pb.LoginResponse")
	proto.RegisterType((*RefreshResponse)(nil), "pb.RefreshResponse")
	proto.RegisterType((*GetPasswordResetResponse)(nil), "pb.GetPasswordResetResponse")
	proto.RegisterType((*Patient)(nil), "pb.Patient")
	proto.RegisterType((*CommonPatientRequest)(nil), "pb.CommonPatientRequest")
	proto.RegisterType((*CommonPatientsRequest)(nil), "pb.CommonPatientsRequest")
	proto.RegisterType((*CommonPatientsResponse)(nil), "pb.CommonPatientsResponse")
	proto.RegisterType((*CommonPatientResponse)(nil), "pb.CommonPatientResponse")
	proto.RegisterType((*Swab)(nil), "pb.Swab")
	proto.RegisterType((*CommonSwabRequest)(nil), "pb.CommonSwabRequest")
	proto.RegisterType((*CommonSwabsRequest)(nil), "pb.CommonSwabsRequest")
	proto.RegisterType((*CommonSwabsResponse)(nil), "pb.CommonSwabsResponse")
	proto.RegisterType((*CommonSwabResponse)(nil), "pb.CommonSwabResponse")
	proto.RegisterType((*User)(nil), "pb.User")
	proto.RegisterType((*CommonUserRequest)(nil), "pb.CommonUserRequest")
	proto.RegisterType((*CommonUsersRequest)(nil), "pb.CommonUsersRequest")
	proto.RegisterType((*CommonUsersResponse)(nil), "pb.CommonUsersResponse")
	proto.RegisterType((*CommonUserResponse)(nil), "pb.CommonUserResponse")
	proto.RegisterType((*Declaration)(nil), "pb.Declaration")
	proto.RegisterType((*CommonDeclarationRequest)(nil), "pb.CommonDeclarationRequest")
	proto.RegisterType((*CommonDeclarationsRequest)(nil), "pb.CommonDeclarationsRequest")
	proto.RegisterType((*CommonDeclarationResponse)(nil), "pb.CommonDeclarationResponse")
	proto.RegisterType((*CommonDeclarationsResponse)(nil), "pb.CommonDeclarationsResponse")
	proto.RegisterType((*ClientUpdatePatientRequest)(nil), "pb.ClientUpdatePatientRequest")
	proto.RegisterType((*ClientGetPatientsRequest)(nil), "pb.ClientGetPatientsRequest")
	proto.RegisterType((*ClientGetPatientV2Request)(nil), "pb.ClientGetPatientV2Request")
	proto.RegisterType((*ClientGetUndeclaredPatientsRequest)(nil), "pb.ClientGetUndeclaredPatientsRequest")
	proto.RegisterType((*ClientCreateDeclarationRequest)(nil), "pb.ClientCreateDeclarationRequest")
	proto.RegisterType((*ClientGetPatientsResponse)(nil), "pb.ClientGetPatientsResponse")
	proto.RegisterType((*ClientGetPatientV2Response)(nil), "pb.ClientGetPatientV2Response")
	proto.RegisterType((*ClientUpdatePatientV2Response)(nil), "pb.ClientUpdatePatientV2Response")
	proto.RegisterType((*ClientGetUndeclaredPatientsResponse)(nil), "pb.ClientGetUndeclaredPatientsResponse")
	proto.RegisterType((*ClientCreateDeclarationResponse)(nil), "pb.ClientCreateDeclarationResponse")
	proto.RegisterType((*Report)(nil), "pb.Report")
	proto.RegisterType((*GetReportRequest)(nil), "pb.GetReportRequest")
	proto.RegisterType((*GetReportsRequest)(nil), "pb.GetReportsRequest")
	proto.RegisterType((*CommonReportResponse)(nil), "pb.CommonReportResponse")
	proto.RegisterType((*CommonReportsResponse)(nil), "pb.CommonReportsResponse")
	proto.RegisterType((*Activity)(nil), "pb.Activity")
	proto.RegisterType((*CommonActivitiesResponse)(nil), "pb.CommonActivitiesResponse")
	proto.RegisterType((*CommonActivityResponse)(nil), "pb.CommonActivityResponse")
}

func init() { proto.RegisterFile("cosmos-service.proto", fileDescriptor_f1f0a13ba2b7b794) }

var fileDescriptor_f1f0a13ba2b7b794 = []byte{
	// 3228 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x5a, 0xdd, 0x72, 0x1c, 0xb7,
	0xb1, 0xae, 0xdd, 0xe5, 0xdf, 0x82, 0x3f, 0x22, 0xc1, 0xbf, 0xd1, 0x88, 0xa2, 0xd6, 0x23, 0xdb,
	0xe2, 0xe1, 0xb1, 0xb9, 0x36, 0xcf, 0xa9, 0x73, 0x5c, 0xaa, 0x4a, 0x95, 0x69, 0xd2, 0x25, 0xcb,
	0x91, 0x29, 0x79, 0x69, 0x49, 0x49, 0xc5, 0xe5, 0x04, 0x3b, 0x03, 0xee, 0x8e, 0x3d, 0x33, 0x58,
	0x0f, 0xb0, 0xa4, 0x37, 0x2e, 0x27, 0x2e, 0x57, 0x2a, 0x0f, 0x90, 0x54, 0xe5, 0x26, 0x57, 0xa9,
	0x3c, 0x40, 0xae, 0xf2, 0x06, 0x79, 0x83, 0x5c, 0xe5, 0x22, 0x57, 0xc9, 0x13, 0xe4, 0x09, 0x52,
	0xf8, 0x99, 0x19, 0x60, 0x66, 0x40, 0x52, 0xa2, 0x73, 0xb5, 0x83, 0x46, 0xe3, 0xeb, 0x46, 0xa3,
	0xd1, 0xdd, 0x00, 0x16, 0xac, 0xf9, 0x84, 0xc6, 0x84, 0xbe, 0x49, 0x71, 0x7a, 0x16, 0xfa, 0x78,
	0x6f, 0x94, 0x12, 0x46, 0x60, 0x73, 0xd4, 0x77, 0xb7, 0x06, 0x84, 0x0c, 0x22, 0xdc, 0x45, 0xa3,
	0xb0, 0x8b, 0x92, 0x84, 0x30, 0xc4, 0x42, 0x92, 0x50, 0xc9, 0xe1, 0xbe, 0x21, 0x7e, 0xfc, 0x37,
	0x07, 0x38, 0x79, 0x93, 0x9e, 0xa3, 0xc1, 0x00, 0xa7, 0x5d, 0x32, 0x12, 0x1c, 0x35, 0xdc, 0xb7,
	0x14, 0x96, 0x68, 0xf5, 0xc7, 0xa7, 0x5d, 0x1c, 0x8f, 0xd8, 0x44, 0x76, 0x7a, 0x7f, 0x6e, 0x80,
	0x95, 0x43, 0x12, 0xc7, 0x24, 0x79, 0x80, 0x19, 0xed, 0xe1, 0x2f, 0xc7, 0x98, 0x32, 0x08, 0xc1,
	0x54, 0xc8, 0x70, 0xec, 0x34, 0x3a, 0x8d, 0x9d, 0x76, 0x4f, 0x7c, 0xc3, 0x35, 0x30, 0x4d, 0xd2,
	0x00, 0xa7, 0x4e, 0x53, 0x10, 0x65, 0x83, 0x73, 0x9e, 0xa6, 0x24, 0x76, 0x5a, 0x9d, 0xc6, 0x4e,
	0xab, 0x27, 0xbe, 0xe1, 0x12, 0x68, 0x32, 0xe2, 0x4c, 0x09, 0x4a, 0x93, 0x11, 0xb8, 0x0d, 0xc0,
	0x69, 0x18, 0x31, 0x9c, 0x3e, 0xe4, 0x98, 0xd3, 0x62, 0xb8, 0x46, 0x81, 0x1d, 0x30, 0x2f, 0x5b,
	0xcf, 0x50, 0x34, 0xc6, 0xce, 0x8c, 0x60, 0xd0, 0x49, 0x70, 0x19, 0xb4, 0xc2, 0x80, 0x3a, 0xb3,
	0x9d, 0xd6, 0x4e, 0xbb, 0xc7, 0x3f, 0x3d, 0x0f, 0x2c, 0xe7, 0x6a, 0x67, 0x5a, 0x2f, 0x81, 0x66,
	0x18, 0x28, 0x9d, 0x9b, 0x61, 0xe0, 0xbd, 0x06, 0x56, 0x25, 0xcf, 0x11, 0x8e, 0x30, 0xc3, 0x36,
	0xb6, 0x1d, 0xb0, 0xa6, 0xb3, 0xe5, 0x46, 0x50, 0x42, 0x1b, 0x85, 0xd0, 0x7b, 0x99, 0xad, 0x1e,
	0x06, 0xb4, 0x87, 0xe9, 0x88, 0x24, 0x14, 0x73, 0x0b, 0x04, 0x88, 0x21, 0xc5, 0x27, 0xbe, 0xbd,
	0x77, 0xc1, 0xc2, 0x23, 0x32, 0x08, 0x93, 0x0c, 0x6a, 0x0d, 0x4c, 0xe3, 0x18, 0x85, 0x91, 0x92,
	0x2a, 0x1b, 0xd0, 0x05, 0x73, 0x23, 0x44, 0xe9, 0x39, 0x49, 0x03, 0x65, 0xd4, 0xbc, 0xed, 0xfd,
	0x17, 0xd8, 0x7c, 0x80, 0xd9, 0x13, 0xd5, 0xec, 0x61, 0x6a, 0x9f, 0xe6, 0x43, 0xb0, 0xfe, 0x74,
	0x14, 0x20, 0x86, 0x0b, 0xee, 0x5c, 0x2a, 0x23, 0x5f, 0xe0, 0x24, 0x93, 0x2a, 0x1a, 0x17, 0x4a,
	0xfd, 0x7d, 0x03, 0x2c, 0x2a, 0xc5, 0xd5, 0xec, 0x3a, 0x60, 0x1e, 0xf9, 0x3e, 0xa6, 0xf4, 0x13,
	0x0d, 0x49, 0x27, 0x41, 0x0f, 0x2c, 0xa4, 0xf8, 0x34, 0xc5, 0x74, 0x28, 0x59, 0x24, 0xa6, 0x41,
	0xe3, 0x28, 0x41, 0x48, 0x47, 0x11, 0x9a, 0x1c, 0xa3, 0x18, 0x0b, 0x67, 0x69, 0xf7, 0x74, 0x12,
	0xb7, 0x62, 0x4a, 0x22, 0x2c, 0xbc, 0xa6, 0xdd, 0x13, 0xdf, 0x6a, 0xa2, 0xd3, 0xf9, 0x44, 0x9f,
	0x83, 0x1b, 0x3d, 0x89, 0xfa, 0xfd, 0xaa, 0xe7, 0xfd, 0x2f, 0x70, 0xaa, 0xc6, 0x56, 0x12, 0x1c,
	0x30, 0x1b, 0x63, 0x4a, 0xd1, 0x00, 0x2b, 0xf4, 0xac, 0xe9, 0xfd, 0xa1, 0x0d, 0x66, 0x9f, 0x20,
	0x16, 0xe2, 0xa4, 0xb2, 0x26, 0xdc, 0xe5, 0x19, 0x8e, 0xf0, 0x20, 0x45, 0xf1, 0xc3, 0xcc, 0xcc,
	0x1a, 0x85, 0x4f, 0x37, 0x29, 0x2c, 0x21, 0xbe, 0xe1, 0x06, 0x98, 0xa1, 0x0c, 0xb1, 0x31, 0x55,
	0x5b, 0x47, 0xb5, 0xf8, 0x1c, 0x47, 0x43, 0x92, 0xe0, 0xe3, 0x71, 0xdc, 0xc7, 0xa9, 0xb2, 0x87,
	0x4e, 0x2a, 0xdc, 0x6b, 0x46, 0x77, 0x2f, 0x0f, 0x2c, 0x44, 0x88, 0xb2, 0x23, 0xec, 0x47, 0x28,
	0xc5, 0x81, 0x33, 0x2b, 0x50, 0x0d, 0x1a, 0xdc, 0x02, 0x6d, 0x7a, 0x8e, 0xfa, 0x87, 0x64, 0x9c,
	0x30, 0x67, 0x4e, 0x30, 0x14, 0x04, 0x3e, 0x77, 0x3c, 0x0a, 0x29, 0x09, 0xb0, 0xd3, 0x16, 0x7d,
	0x59, 0x93, 0xeb, 0xcf, 0x26, 0x23, 0xec, 0x00, 0xb9, 0xed, 0xf9, 0x37, 0x7c, 0x03, 0xac, 0x68,
	0xd8, 0x3d, 0x4c, 0xc7, 0x11, 0x73, 0xe6, 0x3b, 0x8d, 0x9d, 0xb9, 0x5e, 0xb5, 0x83, 0x6b, 0x87,
	0xbf, 0x1a, 0x11, 0x3a, 0x4e, 0xf1, 0x11, 0x62, 0xd8, 0x59, 0x90, 0xeb, 0xa2, 0xd3, 0xe0, 0xeb,
	0x60, 0x29, 0x6b, 0x9f, 0x90, 0x71, 0xea, 0x63, 0x67, 0x51, 0x70, 0x95, 0xa8, 0x5c, 0x72, 0x80,
	0x26, 0xf4, 0x24, 0x4c, 0x7c, 0xfc, 0xbe, 0xea, 0x72, 0x96, 0x84, 0x6a, 0xd5, 0x0e, 0xb8, 0x03,
	0x6e, 0xa4, 0x78, 0x10, 0x52, 0x96, 0x8a, 0x30, 0x79, 0x3c, 0x8e, 0x9d, 0x1b, 0x02, 0xb6, 0x4c,
	0x86, 0xbb, 0x60, 0x19, 0xf1, 0x20, 0x94, 0x20, 0x86, 0x0f, 0x49, 0xc2, 0x90, 0xcf, 0x9c, 0x65,
	0xc1, 0x5a, 0xa1, 0x73, 0xde, 0x90, 0x92, 0x48, 0x8c, 0x3d, 0x08, 0x82, 0x14, 0x53, 0xea, 0xac,
	0x48, 0xde, 0x32, 0x9d, 0xaf, 0x28, 0x9d, 0xc4, 0x23, 0x46, 0x62, 0x31, 0x75, 0x28, 0x57, 0x54,
	0x23, 0xf1, 0x4d, 0xca, 0x97, 0x41, 0x74, 0xaf, 0xca, 0x4d, 0x9a, 0xb5, 0xb9, 0xe5, 0x4e, 0xf1,
	0x19, 0x4e, 0xb9, 0xe4, 0x23, 0x34, 0x71, 0xd6, 0xe4, 0xba, 0xea, 0x34, 0xbe, 0x72, 0x29, 0x8e,
	0x51, 0xfa, 0x05, 0x75, 0xd6, 0xa5, 0xd7, 0xaa, 0xa6, 0xf0, 0x0a, 0xe2, 0xa3, 0x28, 0xfc, 0xb9,
	0x50, 0xc9, 0xd9, 0x50, 0x5e, 0xa1, 0xd1, 0xe0, 0xab, 0x60, 0xd1, 0x47, 0x51, 0x14, 0x26, 0x83,
	0x13, 0xe9, 0x90, 0x9b, 0x82, 0xc9, 0x24, 0x72, 0x19, 0x3e, 0xdf, 0x22, 0x09, 0x73, 0x6e, 0x4a,
	0xef, 0x50, 0x4d, 0x3e, 0x7e, 0x94, 0x86, 0x67, 0xc8, 0x9f, 0x3c, 0x21, 0x51, 0xe8, 0x4f, 0x1c,
	0x57, 0x8e, 0x37, 0x88, 0x7c, 0x75, 0x85, 0xce, 0x27, 0x0c, 0xa5, 0x4c, 0xcc, 0xf4, 0x96, 0x5c,
	0x5d, 0x93, 0xca, 0x35, 0xe6, 0x73, 0x7f, 0x44, 0x7c, 0xa9, 0xf1, 0x96, 0xf4, 0x14, 0x9d, 0xc6,
	0x25, 0xe6, 0x0b, 0x7d, 0x72, 0x8e, 0xfa, 0xce, 0x6d, 0x29, 0xd1, 0x20, 0x72, 0x89, 0xdc, 0x53,
	0x0f, 0x87, 0x28, 0x19, 0x48, 0xaf, 0xdb, 0x96, 0x12, 0x4d, 0x2a, 0x5f, 0x9f, 0x21, 0x89, 0x71,
	0xb6, 0x8c, 0x77, 0xe4, 0xfa, 0x68, 0x24, 0xbe, 0xbf, 0xb9, 0x7c, 0x65, 0x9e, 0x8e, 0x10, 0xa6,
	0x51, 0xe0, 0x5b, 0x60, 0x35, 0xa4, 0x8f, 0xd9, 0x10, 0xa7, 0x27, 0xba, 0xea, 0xaf, 0x88, 0xdd,
	0x50, 0xd7, 0xc5, 0x67, 0x10, 0xd2, 0x13, 0x54, 0x48, 0xf5, 0x04, 0xaf, 0x49, 0x84, 0x7b, 0x00,
	0xea, 0x4e, 0xaa, 0xe4, 0xdf, 0x15, 0xf2, 0x6b, 0x7a, 0xbc, 0x07, 0x59, 0x6e, 0x53, 0x81, 0xca,
	0x92, 0x43, 0xe0, 0x1d, 0x95, 0xc4, 0x78, 0xa4, 0x9a, 0xdf, 0x9f, 0xdf, 0x1b, 0xf5, 0xf7, 0xb2,
	0x11, 0x32, 0xa3, 0x7d, 0x08, 0xd6, 0x0d, 0x20, 0x7b, 0x96, 0xbc, 0x1c, 0xeb, 0x31, 0xd8, 0x28,
	0x63, 0xa9, 0x60, 0x7b, 0x47, 0xcb, 0xa5, 0x75, 0x43, 0x65, 0x4a, 0x63, 0x28, 0x12, 0xe0, 0xad,
	0x9e, 0x6c, 0x78, 0xef, 0x94, 0x94, 0xab, 0xc1, 0xb3, 0xa8, 0xf2, 0x6d, 0x13, 0x4c, 0x09, 0xd7,
	0x28, 0x1b, 0x64, 0x0b, 0xb4, 0x47, 0x92, 0x33, 0x8f, 0xdf, 0x05, 0x41, 0x84, 0x64, 0xd9, 0xd0,
	0xf3, 0x99, 0x46, 0xe2, 0x0b, 0xa5, 0x9a, 0x4f, 0xb4, 0xd8, 0x2d, 0xb3, 0x5b, 0x4d, 0x8f, 0x16,
	0xfc, 0xa7, 0x8d, 0xe0, 0x2f, 0xab, 0x8b, 0xac, 0x28, 0x12, 0xdf, 0x3c, 0x38, 0x44, 0x99, 0x47,
	0xcd, 0xca, 0xe0, 0x90, 0xb5, 0x6d, 0x8e, 0x37, 0x67, 0x75, 0x3c, 0xef, 0x20, 0x2b, 0x6a, 0x38,
	0xd5, 0xe6, 0x1f, 0x5b, 0xc6, 0x9a, 0xce, 0x71, 0x43, 0x0a, 0x76, 0x69, 0xc5, 0x23, 0x00, 0x0b,
	0x88, 0x0b, 0x3c, 0xe3, 0x62, 0x94, 0x87, 0x59, 0xb9, 0xa6, 0x50, 0xd4, 0x1a, 0x6e, 0x19, 0x3e,
	0x51, 0x1a, 0x64, 0x71, 0x88, 0x7d, 0x5d, 0xa1, 0x1a, 0xa4, 0x3a, 0xf1, 0xdf, 0x35, 0xc1, 0xd4,
	0x53, 0x8a, 0xd3, 0xca, 0xdc, 0xb3, 0xd2, 0xa4, 0xa9, 0x95, 0x26, 0x97, 0x17, 0x34, 0xa5, 0xac,
	0x3d, 0x75, 0x41, 0xd6, 0x9e, 0x2e, 0x15, 0x85, 0x41, 0x48, 0x51, 0x3f, 0xc2, 0x81, 0x58, 0xf4,
	0xb9, 0x5e, 0xde, 0x36, 0x4a, 0xb7, 0x59, 0xb3, 0x74, 0xe3, 0x0e, 0x77, 0x1a, 0x26, 0x28, 0xfa,
	0x98, 0xdb, 0x9e, 0x57, 0xff, 0x1f, 0x52, 0xb5, 0xee, 0xed, 0x5e, 0x4d, 0x0f, 0x97, 0xee, 0x0f,
	0x51, 0xca, 0x44, 0x66, 0x6f, 0xf7, 0x64, 0xa3, 0x70, 0x06, 0x6e, 0x89, 0x17, 0x70, 0x06, 0xc1,
	0x5e, 0x72, 0x06, 0x4e, 0x7b, 0x31, 0x67, 0xd0, 0x50, 0x72, 0x67, 0x50, 0x28, 0x76, 0x67, 0x28,
	0x06, 0x5d, 0xe6, 0x0c, 0x72, 0x4e, 0x76, 0x67, 0xd0, 0xc4, 0xff, 0xa3, 0x05, 0xe6, 0x65, 0xbd,
	0x22, 0xb7, 0xd5, 0x8b, 0x85, 0x07, 0x6e, 0x5b, 0x32, 0x1e, 0x0c, 0xd5, 0xa9, 0x48, 0x36, 0xf8,
	0x16, 0x67, 0xc3, 0x94, 0x20, 0x96, 0xd5, 0x77, 0xb2, 0xc5, 0xb9, 0x45, 0xc6, 0x53, 0x3b, 0x5f,
	0x36, 0x78, 0x76, 0xed, 0xa7, 0x18, 0xb1, 0xa1, 0xdc, 0xfb, 0xad, 0x5e, 0xd6, 0x94, 0x2b, 0x87,
	0x29, 0x53, 0x05, 0x9d, 0x6c, 0x70, 0x2f, 0xed, 0xf3, 0xd3, 0x93, 0x2c, 0xe2, 0xc4, 0x37, 0x97,
	0x18, 0xa4, 0xe4, 0x9c, 0x4e, 0x54, 0xf9, 0xa6, 0x5a, 0x9c, 0x37, 0x22, 0x94, 0x66, 0xd5, 0x1b,
	0xff, 0xe6, 0x19, 0x6d, 0x88, 0xe8, 0x89, 0xac, 0x41, 0x54, 0xd9, 0xa6, 0x51, 0x44, 0xcd, 0x32,
	0xee, 0xc7, 0x21, 0x63, 0x38, 0x38, 0x60, 0xa2, 0x5c, 0x6b, 0xf5, 0x74, 0x52, 0xb5, 0x6a, 0x58,
	0xac, 0xab, 0x1a, 0xb2, 0x80, 0xb6, 0xa4, 0x05, 0xb4, 0x52, 0x38, 0xbd, 0x71, 0xd5, 0x70, 0xba,
	0x6c, 0x0d, 0xa7, 0xbc, 0x1e, 0x20, 0x3e, 0x23, 0x69, 0x4f, 0x55, 0x41, 0xb2, 0x14, 0x33, 0x89,
	0xde, 0x63, 0xe0, 0x64, 0x27, 0xbf, 0x7c, 0xa9, 0x6d, 0x4e, 0x7f, 0xd7, 0x70, 0xd7, 0x1b, 0xdc,
	0x5f, 0xf4, 0x51, 0xd2, 0x6d, 0x7a, 0xe0, 0x66, 0x05, 0xf0, 0x82, 0x2d, 0x70, 0x25, 0xcc, 0x77,
	0x6b, 0x30, 0x73, 0x2f, 0xbe, 0x6b, 0x78, 0xb1, 0x05, 0xe1, 0x39, 0x70, 0xeb, 0xb4, 0xaa, 0x40,
	0xb4, 0xac, 0x10, 0x96, 0x9d, 0xf5, 0x6d, 0x0b, 0xb8, 0x87, 0x11, 0xb7, 0x7d, 0x76, 0x00, 0x35,
	0x8a, 0x0c, 0xf3, 0x10, 0xd4, 0xb0, 0x1e, 0x82, 0x9a, 0xda, 0x21, 0xa8, 0x14, 0x36, 0x5b, 0xd5,
	0xb0, 0x29, 0x17, 0x66, 0x2a, 0x5f, 0x18, 0x5b, 0xe6, 0x7c, 0xf9, 0x43, 0x91, 0x76, 0xec, 0x99,
	0xab, 0x3f, 0xf6, 0xb4, 0xb5, 0x63, 0x4f, 0xb9, 0xa0, 0x06, 0x35, 0x05, 0xb5, 0x56, 0x8e, 0xcf,
	0x9b, 0xe5, 0xb8, 0x56, 0x44, 0x2f, 0x5c, 0x52, 0x44, 0x2f, 0xd6, 0x14, 0xd1, 0xde, 0x2f, 0x80,
	0x23, 0x57, 0x40, 0x1c, 0x60, 0xcd, 0xd2, 0xec, 0x32, 0xfb, 0x97, 0x6c, 0xdd, 0xb4, 0xd9, 0xba,
	0x95, 0xdb, 0x7a, 0x19, 0xb4, 0x02, 0x34, 0x51, 0xf1, 0x8b, 0x7f, 0x7a, 0x31, 0xb8, 0x59, 0x96,
	0xff, 0x6c, 0xff, 0x3f, 0xa6, 0x80, 0xf7, 0x01, 0xf0, 0x72, 0x71, 0x4f, 0x93, 0x40, 0xad, 0x58,
	0x79, 0xe2, 0xd9, 0xa5, 0x54, 0xa3, 0x72, 0x29, 0xd5, 0xcc, 0x2e, 0xa5, 0xbc, 0x7f, 0x35, 0xc0,
	0xb6, 0x84, 0x3a, 0xe4, 0x71, 0x15, 0xd7, 0x84, 0x00, 0x23, 0xc8, 0x37, 0xac, 0x41, 0xbe, 0x59,
	0x1f, 0xe4, 0x5b, 0xf5, 0x41, 0x7e, 0xca, 0x12, 0xe4, 0xa7, 0x2d, 0x41, 0x7e, 0xa6, 0x2e, 0xc8,
	0xcf, 0xd6, 0x06, 0xf9, 0xb9, 0xda, 0x20, 0xdf, 0x2e, 0x82, 0xbc, 0x77, 0x54, 0x5d, 0xad, 0x22,
	0x10, 0xdc, 0xe3, 0xd5, 0x85, 0xa4, 0xd5, 0x15, 0xe0, 0x79, 0xa7, 0xf7, 0x83, 0x6c, 0xd7, 0x9b,
	0x6b, 0x7e, 0xd5, 0x9a, 0xfb, 0x31, 0xb8, 0x5d, 0x13, 0x34, 0x34, 0x84, 0xfa, 0x43, 0x4e, 0xc3,
	0x7a, 0xc8, 0x39, 0x06, 0x77, 0x2f, 0x74, 0x8a, 0x17, 0x9d, 0xdf, 0x01, 0xb8, 0x63, 0xf5, 0x0c,
	0x85, 0x65, 0x66, 0xcb, 0x46, 0x39, 0x5b, 0x7a, 0x7f, 0x99, 0x02, 0x33, 0x3d, 0x3c, 0x22, 0x29,
	0xe3, 0x15, 0x79, 0x40, 0x12, 0xf6, 0x01, 0x3a, 0xc3, 0x9f, 0x90, 0x43, 0x14, 0x45, 0xf2, 0xb2,
	0x45, 0x4e, 0xa7, 0xae, 0x4b, 0x4b, 0x76, 0x9c, 0x86, 0x03, 0x39, 0x40, 0xba, 0x59, 0x4d, 0x0f,
	0xdc, 0x01, 0x37, 0xc6, 0x71, 0xec, 0xeb, 0xcc, 0xd2, 0xf9, 0xca, 0x64, 0x7e, 0x00, 0x4e, 0xc8,
	0x8f, 0x31, 0x2b, 0xd4, 0x90, 0xee, 0x58, 0xa2, 0xe6, 0x49, 0x7a, 0x5a, 0x4b, 0xd2, 0x5c, 0x4a,
	0x6e, 0x5c, 0x39, 0x78, 0x46, 0x49, 0x31, 0xc9, 0x22, 0xf9, 0x1a, 0x7c, 0xb3, 0xea, 0x30, 0x6e,
	0x70, 0x79, 0x60, 0x01, 0xa9, 0x2b, 0x0f, 0xc4, 0x42, 0x5f, 0x79, 0xaf, 0x41, 0xd3, 0x2e, 0x4a,
	0x04, 0x4b, 0x5b, 0x15, 0x1d, 0x1a, 0xc7, 0x3b, 0x60, 0xd3, 0x27, 0xc9, 0x69, 0x98, 0xc6, 0x38,
	0x78, 0x6f, 0xcc, 0x8e, 0x09, 0x3b, 0x08, 0x64, 0x45, 0xa2, 0x02, 0xb1, 0xad, 0x1b, 0xee, 0x83,
	0xb5, 0xbc, 0xeb, 0x20, 0x09, 0xf2, 0x61, 0xf3, 0x62, 0x58, 0x6d, 0x1f, 0x8f, 0x08, 0x3e, 0x89,
	0x47, 0x11, 0xe6, 0x8c, 0x32, 0x5e, 0x17, 0x04, 0x6e, 0xb5, 0x2f, 0xc7, 0x21, 0x53, 0x81, 0x5a,
	0x7c, 0xf3, 0x11, 0x29, 0xf6, 0xc9, 0x19, 0xe6, 0xc9, 0x46, 0x5e, 0x49, 0x15, 0x04, 0xee, 0x46,
	0xbc, 0x80, 0xc7, 0xc1, 0xc1, 0x39, 0x9a, 0x88, 0xba, 0xa7, 0xd5, 0xd3, 0x28, 0xde, 0x7d, 0xb0,
	0x2c, 0xee, 0xb7, 0xb9, 0x23, 0x69, 0xc1, 0x4d, 0xac, 0x4d, 0x43, 0x5b, 0x9b, 0x2c, 0x2f, 0x35,
	0x8b, 0xbc, 0xe4, 0xfd, 0x10, 0xac, 0xe4, 0x63, 0x6b, 0x23, 0x63, 0xbb, 0x12, 0x19, 0xdb, 0xe2,
	0xba, 0x3e, 0x03, 0x6b, 0x69, 0x60, 0xff, 0x97, 0xdd, 0x23, 0x64, 0xba, 0xe4, 0xfb, 0x40, 0xdf,
	0xec, 0x80, 0xef, 0x27, 0xc5, 0x21, 0xf7, 0xfa, 0xff, 0x67, 0x27, 0xf3, 0x5c, 0x8f, 0xca, 0xc0,
	0x56, 0xed, 0xc0, 0x5f, 0x35, 0xc1, 0xdc, 0x81, 0xcf, 0xc2, 0xb3, 0x90, 0x4d, 0x2a, 0xb5, 0xd8,
	0x06, 0x98, 0x19, 0x53, 0x9c, 0xe6, 0xa5, 0xb7, 0x6a, 0xf1, 0xf3, 0x11, 0xff, 0xd2, 0x8e, 0x64,
	0x79, 0x1b, 0xfe, 0x37, 0x00, 0x24, 0xca, 0x82, 0x82, 0x70, 0xfb, 0xd2, 0xfe, 0xd7, 0xba, 0x39,
	0x73, 0x82, 0xcf, 0x33, 0xe6, 0xe9, 0x1a, 0xe6, 0xa2, 0x1b, 0x7a, 0x60, 0x96, 0x44, 0x81, 0xb8,
	0x75, 0x9a, 0x29, 0x9d, 0x2c, 0xb3, 0x0e, 0xce, 0x93, 0xe0, 0x73, 0xc1, 0x33, 0x5b, 0xe6, 0x51,
	0x1d, 0xc2, 0xee, 0x61, 0x9c, 0x57, 0xf0, 0xfc, 0xdb, 0xeb, 0x65, 0x15, 0xaa, 0xb2, 0x45, 0x88,
	0xa9, 0x76, 0xf7, 0xad, 0x9b, 0x70, 0x81, 0x03, 0x66, 0x16, 0xbb, 0xb0, 0x6a, 0xbb, 0x9f, 0x5d,
	0xbf, 0xe4, 0xdc, 0x55, 0xc4, 0x46, 0x3d, 0xe2, 0xfe, 0x1f, 0x5f, 0x03, 0x8b, 0x87, 0xe2, 0xd1,
	0xea, 0x44, 0xbe, 0x59, 0xc1, 0x3e, 0x58, 0x94, 0x61, 0x32, 0x33, 0x87, 0xc3, 0x87, 0xd5, 0x5d,
	0x3a, 0xb9, 0x37, 0x6b, 0x7a, 0xa4, 0x64, 0x6f, 0xeb, 0xbb, 0xbf, 0xfe, 0xf3, 0xb7, 0xcd, 0x0d,
	0x6f, 0xa5, 0x7b, 0xf6, 0x76, 0x37, 0x0b, 0xc4, 0xdd, 0xaf, 0xc3, 0xe0, 0x9b, 0xfb, 0x8d, 0x5d,
	0xf8, 0x23, 0x00, 0x8a, 0x54, 0x03, 0xd7, 0x0a, 0x98, 0xe2, 0xf1, 0xe7, 0x22, 0xf0, 0x9b, 0x02,
	0x7c, 0x15, 0x56, 0xc1, 0xb9, 0xf6, 0x46, 0x16, 0xba, 0x96, 0xf6, 0x6e, 0xbd, 0xf6, 0x3f, 0x01,
	0x4b, 0x86, 0x0c, 0x0a, 0xab, 0x50, 0xd9, 0x06, 0x75, 0xd7, 0x8b, 0x2e, 0xed, 0x91, 0xc9, 0xdb,
	0x14, 0x12, 0x56, 0xdc, 0x05, 0x5d, 0x02, 0x07, 0xff, 0x0c, 0x2c, 0xca, 0x67, 0xab, 0x6c, 0x02,
	0x9b, 0x05, 0x80, 0xf1, 0xec, 0x75, 0x05, 0x03, 0xed, 0xd6, 0x18, 0xe8, 0x39, 0x58, 0x32, 0xf0,
	0xa9, 0x6e, 0x21, 0xf3, 0xc1, 0xcc, 0xa6, 0xfb, 0x9a, 0x40, 0x5f, 0xda, 0x35, 0x74, 0x87, 0xcf,
	0xc0, 0xbc, 0x56, 0x84, 0xc0, 0x75, 0x63, 0x51, 0x73, 0x48, 0xb7, 0xce, 0x52, 0x26, 0x2e, 0x34,
	0x71, 0x3f, 0x07, 0xeb, 0xb5, 0x65, 0xc0, 0xcb, 0x48, 0xd8, 0x16, 0x12, 0x1c, 0xb8, 0xc1, 0x25,
	0x14, 0x59, 0x2e, 0x97, 0xf5, 0x19, 0xb8, 0xf1, 0x00, 0x33, 0xbe, 0x79, 0xaf, 0x23, 0xc5, 0x11,
	0x52, 0x20, 0x5c, 0xe6, 0x52, 0xe8, 0x39, 0xea, 0xe7, 0xf8, 0x7d, 0x11, 0xc2, 0x4f, 0x18, 0xea,
	0x47, 0xf8, 0x3a, 0x12, 0x5c, 0x21, 0x61, 0x0d, 0x42, 0x21, 0x41, 0xc0, 0x95, 0xe6, 0xc0, 0x53,
	0xff, 0xf7, 0x36, 0x07, 0x7e, 0xe0, 0xcf, 0xf1, 0x7f, 0x26, 0x52, 0x98, 0xb8, 0x76, 0xbc, 0x8e,
	0x00, 0x63, 0x0f, 0x13, 0x8e, 0x56, 0xb2, 0xd2, 0x31, 0xb9, 0xee, 0x1c, 0x0c, 0x2b, 0x25, 0xc4,
	0x98, 0xc5, 0x33, 0x00, 0x64, 0x94, 0x13, 0x37, 0x84, 0x1a, 0xb8, 0x76, 0x4f, 0xe6, 0x6e, 0x94,
	0xc9, 0xa6, 0xee, 0xde, 0x92, 0x70, 0x23, 0x8a, 0xd3, 0x22, 0x36, 0x7c, 0x04, 0xe6, 0xb8, 0xb7,
	0x72, 0x9a, 0x4d, 0xe5, 0x4d, 0x13, 0xb5, 0xd0, 0x77, 0x45, 0xc0, 0xce, 0xc3, 0x76, 0x0e, 0x0b,
	0x1f, 0x83, 0x59, 0x05, 0x67, 0x89, 0x92, 0x36, 0x15, 0x37, 0x04, 0xd6, 0x32, 0x2c, 0xa9, 0xc8,
	0xe7, 0x2d, 0x63, 0xd7, 0x35, 0xe6, 0xed, 0xd6, 0xcc, 0xbb, 0x07, 0xe6, 0x0b, 0x5c, 0x0a, 0x37,
	0x2a, 0x73, 0xbc, 0x4a, 0x44, 0x71, 0x8b, 0x99, 0x73, 0xcc, 0xa7, 0x00, 0xc8, 0x80, 0x24, 0x74,
	0xb5, 0xc6, 0xc1, 0x4b, 0x4c, 0xb0, 0x5b, 0x36, 0xc1, 0xc7, 0x60, 0xbe, 0x80, 0x7d, 0x89, 0xf0,
	0xa7, 0x96, 0x69, 0x57, 0x5b, 0xa6, 0x14, 0xac, 0x54, 0x8e, 0x16, 0x70, 0x4b, 0x07, 0x2e, 0x9f,
	0x45, 0xdd, 0xdb, 0x96, 0x5e, 0x25, 0xa4, 0x23, 0x84, 0xb8, 0xde, 0x3a, 0x17, 0x12, 0x68, 0xd7,
	0x3c, 0xb9, 0xc5, 0xfb, 0x62, 0x9f, 0xeb, 0x37, 0x40, 0x36, 0x87, 0xdb, 0xae, 0x15, 0x65, 0xd9,
	0xeb, 0xba, 0x2c, 0x18, 0x80, 0x25, 0x53, 0x86, 0xc5, 0x0b, 0x2f, 0x99, 0xcc, 0x6d, 0x21, 0x60,
	0x13, 0xd6, 0x4f, 0x86, 0x5b, 0x4f, 0xfa, 0xce, 0xf7, 0x6d, 0x3d, 0xd7, 0x6e, 0xbd, 0x01, 0x80,
	0x15, 0x99, 0x14, 0xde, 0xb6, 0x59, 0xea, 0x42, 0x87, 0xb8, 0x25, 0xa4, 0xad, 0xbb, 0x15, 0xfb,
	0x71, 0x41, 0x9f, 0x83, 0x15, 0xe9, 0x56, 0xfa, 0xe4, 0xac, 0xbe, 0x7c, 0x35, 0x43, 0xee, 0x5a,
	0x0c, 0xf9, 0x53, 0x00, 0x2b, 0xb2, 0x5e, 0xc2, 0xc1, 0x95, 0x3f, 0xec, 0x56, 0xfd, 0x21, 0x8f,
	0x9a, 0xa2, 0xbe, 0xd5, 0x86, 0x6b, 0x4f, 0x4d, 0xfa, 0x7e, 0xd4, 0x5f, 0x6b, 0xcc, 0xa8, 0xc9,
	0xd3, 0x62, 0x39, 0x6a, 0x8a, 0x67, 0xa2, 0x2b, 0x44, 0x4d, 0xe3, 0x39, 0xc9, 0x8c, 0x9a, 0x02,
	0x56, 0x45, 0x4d, 0xa1, 0xe3, 0xa5, 0x51, 0xd3, 0x50, 0xd1, 0x88, 0x9a, 0x85, 0x8a, 0x45, 0xd4,
	0xbc, 0xc6, 0xbc, 0xdd, 0x9a, 0x79, 0xe7, 0x51, 0x53, 0x4e, 0x7d, 0xa3, 0x32, 0xc7, 0xab, 0x47,
	0x4d, 0x01, 0x6c, 0x44, 0x4d, 0xa1, 0xeb, 0x55, 0xa2, 0x66, 0x9d, 0x09, 0x76, 0xcb, 0x26, 0xc8,
	0xa3, 0xa6, 0x54, 0xf5, 0x7a, 0x51, 0x53, 0x2e, 0xd3, 0x73, 0xd0, 0xce, 0x0f, 0xb4, 0x72, 0xa1,
	0xca, 0x67, 0x63, 0x57, 0x13, 0x63, 0x1e, 0x54, 0xcd, 0xe4, 0x9e, 0xca, 0xc3, 0x68, 0xf7, 0x6b,
	0x6e, 0xcb, 0x6f, 0xe0, 0x89, 0x38, 0x5e, 0xa8, 0x13, 0xaa, 0x5c, 0xae, 0xca, 0xc9, 0x59, 0x2f,
	0x9f, 0x4b, 0x67, 0x59, 0x6f, 0x55, 0x60, 0x2f, 0xc2, 0x79, 0x0d, 0x1b, 0x52, 0x51, 0xf7, 0x18,
	0xff, 0x29, 0x82, 0xb7, 0x14, 0x74, 0xdd, 0xdf, 0xba, 0xdc, 0xad, 0xfa, 0x4e, 0x25, 0xe3, 0x55,
	0x21, 0x63, 0x1b, 0x6e, 0x99, 0xd9, 0xa9, 0x9b, 0xbd, 0xff, 0xa5, 0x42, 0x00, 0x29, 0x8e, 0x1a,
	0xea, 0x59, 0x50, 0xa8, 0x5d, 0xfb, 0xf7, 0x30, 0x77, 0x63, 0x4f, 0xfe, 0x31, 0x70, 0x2f, 0xfb,
	0x63, 0xe0, 0xde, 0xfb, 0xf1, 0x88, 0x4d, 0xbc, 0x5d, 0x21, 0xea, 0x55, 0xf7, 0x4e, 0x21, 0xca,
	0x90, 0xd2, 0xfd, 0x5a, 0xfc, 0x91, 0x4c, 0x78, 0xe4, 0x7b, 0x60, 0x5a, 0xfc, 0x5f, 0x0c, 0x2e,
	0x73, 0x39, 0xfa, 0x7f, 0xde, 0xdc, 0x15, 0x8d, 0x62, 0x7a, 0xa0, 0x27, 0x16, 0x35, 0xe2, 0x5d,
	0x1c, 0xe3, 0x11, 0x98, 0x79, 0x44, 0x06, 0x64, 0xcc, 0xa0, 0x45, 0x23, 0xab, 0xa6, 0x50, 0xe0,
	0x2d, 0x78, 0x40, 0xe1, 0x71, 0x8c, 0x63, 0x30, 0xab, 0xfe, 0x24, 0x66, 0x85, 0x5b, 0x95, 0xb7,
	0x0d, 0xc6, 0x3f, 0xc9, 0x32, 0x47, 0xf6, 0xd4, 0x22, 0x8a, 0x4e, 0xae, 0xdd, 0xa7, 0x60, 0xf1,
	0x01, 0x66, 0xc5, 0xf1, 0xdb, 0x16, 0x70, 0xb4, 0x04, 0x54, 0x3d, 0xab, 0x9b, 0x91, 0x02, 0x15,
	0x60, 0x9f, 0x8a, 0x53, 0x50, 0x7e, 0xd1, 0x51, 0x1f, 0x7e, 0xdc, 0x0a, 0xf4, 0xa4, 0x9c, 0x4c,
	0xe0, 0xaa, 0x09, 0x9c, 0x65, 0xca, 0xd5, 0x9a, 0x9b, 0x56, 0x28, 0x13, 0xbc, 0xf5, 0xdd, 0xc6,
	0x6a, 0xee, 0xbb, 0x42, 0xd6, 0x6d, 0xd7, 0x11, 0x45, 0xbe, 0x18, 0x5f, 0x3d, 0xed, 0xfe, 0x12,
	0xac, 0xd7, 0xde, 0xee, 0x5e, 0x2a, 0xf5, 0x15, 0x4b, 0x7f, 0x71, 0x31, 0xac, 0x2b, 0xb0, 0x6f,
	0x55, 0x20, 0x06, 0x2b, 0x95, 0x3b, 0x6e, 0x55, 0x1e, 0x58, 0x1e, 0x4a, 0x54, 0x1a, 0xb5, 0x5d,
	0x8c, 0x9b, 0x36, 0x2e, 0x89, 0x85, 0x23, 0x00, 0xab, 0x97, 0xe1, 0xb0, 0x16, 0x31, 0x7f, 0x18,
	0x71, 0xb7, 0x6d, 0xdd, 0x55, 0x89, 0x95, 0x89, 0xc2, 0xdf, 0x35, 0xc0, 0xad, 0x0b, 0xee, 0xbb,
	0xe1, 0xeb, 0x06, 0xb8, 0xf5, 0x95, 0xc4, 0xbd, 0x77, 0x29, 0x9f, 0xd2, 0xe6, 0x75, 0xa1, 0x4d,
	0x07, 0x6e, 0xd7, 0xad, 0x7b, 0x71, 0x2c, 0x86, 0xbf, 0x6e, 0x80, 0x4d, 0xcb, 0xc5, 0x39, 0xf4,
	0x0a, 0x61, 0xb6, 0xf7, 0x16, 0xf7, 0xee, 0x85, 0x3c, 0x4a, 0x19, 0x4f, 0x28, 0xb3, 0xe5, 0x6d,
	0x6a, 0xca, 0x94, 0x8a, 0xa8, 0xf7, 0xfe, 0xde, 0xf8, 0xcd, 0xc1, 0xdf, 0x1a, 0xf0, 0x4f, 0x0d,
	0xb0, 0x74, 0x48, 0x4e, 0x3e, 0x22, 0x27, 0x9d, 0xec, 0xb6, 0xea, 0x89, 0xd9, 0xee, 0x0c, 0x51,
	0x12, 0x44, 0x98, 0x76, 0x52, 0xa9, 0x02, 0xed, 0x9c, 0xa6, 0x24, 0xee, 0xf4, 0x09, 0x1b, 0x76,
	0x3e, 0x51, 0xef, 0x54, 0x1d, 0x7f, 0x88, 0x18, 0x27, 0x75, 0x50, 0x12, 0x74, 0x50, 0x10, 0x87,
	0x49, 0x27, 0x40, 0x74, 0xd8, 0x27, 0x28, 0x0d, 0xf6, 0xbc, 0x23, 0x78, 0x6f, 0xc8, 0xd8, 0x88,
	0xde, 0xef, 0x76, 0x07, 0x21, 0x1b, 0x8e, 0xfb, 0x7b, 0x3e, 0x89, 0xbb, 0xea, 0x8f, 0xdd, 0xe3,
	0x38, 0xf6, 0xbb, 0x7e, 0x98, 0xfa, 0x61, 0x32, 0xa6, 0xee, 0x4d, 0x7f, 0x18, 0x26, 0x5f, 0x85,
	0x24, 0x19, 0x9c, 0xe3, 0xf0, 0xdd, 0x09, 0x1a, 0x12, 0xc2, 0x99, 0xf7, 0xe2, 0xc9, 0xfe, 0xf4,
	0xdb, 0x7b, 0x6f, 0xed, 0xbd, 0xb5, 0xdb, 0x68, 0xee, 0x2f, 0xa3, 0xd1, 0x28, 0x0a, 0xe5, 0x7f,
	0x73, 0xba, 0x9f, 0x53, 0x92, 0xdc, 0xaf, 0x50, 0xfa, 0x33, 0x62, 0x63, 0xfe, 0xcf, 0xbf, 0x03,
	0x00, 0x00, 0xff, 0xff, 0xcf, 0xeb, 0xc5, 0xd1, 0x40, 0x2e, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CosmosServiceClient is the client API for CosmosService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CosmosServiceClient interface {
	// Create Patient
	CreatePatient(ctx context.Context, in *CommonPatientRequest, opts ...grpc.CallOption) (*CommonPatientResponse, error)
	// Get Patient
	GetPatient(ctx context.Context, in *CommonGetRequest, opts ...grpc.CallOption) (*CommonPatientResponse, error)
	// Update Patient
	UpdatePatient(ctx context.Context, in *CommonPatientRequest, opts ...grpc.CallOption) (*CommonPatientResponse, error)
	// Update Patients
	UpdatePatients(ctx context.Context, in *CommonPatientsRequest, opts ...grpc.CallOption) (*CommonIdsResponse, error)
	// Delete Patient
	DeletePatient(ctx context.Context, in *CommonDeleteRequest, opts ...grpc.CallOption) (*CommonPatientResponse, error)
	// Delete Patients
	DeletePatients(ctx context.Context, in *CommonDeletesRequest, opts ...grpc.CallOption) (*CommonIdsResponse, error)
	// Get Patients
	GetPatients(ctx context.Context, in *CommonGetsRequest, opts ...grpc.CallOption) (*CommonPatientsResponse, error)
	// Get Undeclared Patients
	GetUndeclaredPatients(ctx context.Context, in *CommonGetsRequest, opts ...grpc.CallOption) (*CommonPatientsResponse, error)
	// Get Patients With Days Since Swab >= 14
	GetSwabPatients(ctx context.Context, in *CommonGetsRequest, opts ...grpc.CallOption) (*CommonPatientsResponse, error)
	// Get Stable Patients
	GetStablePatients(ctx context.Context, in *CommonGetsRequest, opts ...grpc.CallOption) (*CommonPatientsResponse, error)
	// Get Called Patients
	GetCallPatients(ctx context.Context, in *CommonGetsRequest, opts ...grpc.CallOption) (*CommonPatientsResponse, error)
	// Get Other Patients
	GetOtherPatients(ctx context.Context, in *CommonGetsRequest, opts ...grpc.CallOption) (*CommonPatientsResponse, error)
	// Get No Yet Called Patients
	GetNoCallPatients(ctx context.Context, in *CommonGetsRequest, opts ...grpc.CallOption) (*CommonPatientsResponse, error)
	// Create User
	CreateUser(ctx context.Context, in *CommonUserRequest, opts ...grpc.CallOption) (*CommonUserResponse, error)
	// Get Users
	GetUsers(ctx context.Context, in *CommonGetsRequest, opts ...grpc.CallOption) (*CommonUsersResponse, error)
	// Get User
	GetUser(ctx context.Context, in *CommonGetRequest, opts ...grpc.CallOption) (*CommonUserResponse, error)
	// Update User
	UpdateUser(ctx context.Context, in *CommonUserRequest, opts ...grpc.CallOption) (*CommonUserResponse, error)
	// Update Users
	UpdateUsers(ctx context.Context, in *CommonUsersRequest, opts ...grpc.CallOption) (*CommonIdsResponse, error)
	// Delete User
	DeleteUser(ctx context.Context, in *CommonDeleteRequest, opts ...grpc.CallOption) (*CommonUserResponse, error)
	// Delete Users
	DeleteUsers(ctx context.Context, in *CommonDeletesRequest, opts ...grpc.CallOption) (*CommonIdsResponse, error)
	// Create Declaration
	CreateDeclaration(ctx context.Context, in *CommonDeclarationRequest, opts ...grpc.CallOption) (*CommonDeclarationResponse, error)
	// Get Declarations
	GetDeclarations(ctx context.Context, in *CommonGetsRequest, opts ...grpc.CallOption) (*CommonDeclarationsResponse, error)
	// Get Declaration
	GetDeclaration(ctx context.Context, in *CommonGetRequest, opts ...grpc.CallOption) (*CommonDeclarationResponse, error)
	// Update Declaration
	UpdateDeclaration(ctx context.Context, in *CommonDeclarationRequest, opts ...grpc.CallOption) (*CommonDeclarationResponse, error)
	// Update Declarations
	UpdateDeclarations(ctx context.Context, in *CommonDeclarationsRequest, opts ...grpc.CallOption) (*CommonIdsResponse, error)
	// Delete Declaration
	DeleteDeclaration(ctx context.Context, in *CommonDeleteRequest, opts ...grpc.CallOption) (*CommonDeclarationResponse, error)
	// Delete Declarations
	DeleteDeclarations(ctx context.Context, in *CommonDeletesRequest, opts ...grpc.CallOption) (*CommonIdsResponse, error)
	// Create Swab
	CreateSwab(ctx context.Context, in *CommonSwabRequest, opts ...grpc.CallOption) (*CommonSwabResponse, error)
	// Get Swabs
	GetSwabs(ctx context.Context, in *CommonGetsRequest, opts ...grpc.CallOption) (*CommonSwabsResponse, error)
	// Get Swab
	GetSwab(ctx context.Context, in *CommonGetRequest, opts ...grpc.CallOption) (*CommonSwabResponse, error)
	// Update Swab
	UpdateSwab(ctx context.Context, in *CommonSwabRequest, opts ...grpc.CallOption) (*CommonSwabResponse, error)
	// Update Swabs
	UpdateSwabs(ctx context.Context, in *CommonSwabsRequest, opts ...grpc.CallOption) (*CommonIdsResponse, error)
	// Delete Swab
	DeleteSwab(ctx context.Context, in *CommonDeleteRequest, opts ...grpc.CallOption) (*CommonSwabResponse, error)
	// Delete Swabs
	DeleteSwabs(ctx context.Context, in *CommonDeletesRequest, opts ...grpc.CallOption) (*CommonIdsResponse, error)
	// Get Report
	GetReport(ctx context.Context, in *GetReportRequest, opts ...grpc.CallOption) (*CommonReportResponse, error)
	// Get Reports
	GetReports(ctx context.Context, in *GetReportsRequest, opts ...grpc.CallOption) (*CommonReportsResponse, error)
	// Get Password Reset
	GetPasswordReset(ctx context.Context, in *GetPasswordResetRequest, opts ...grpc.CallOption) (*GetPasswordResetResponse, error)
	// Update Password
	UpdatePassword(ctx context.Context, in *UpdatePasswordRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Login
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	// Logout
	Logout(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	// Refresh
	Refresh(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*RefreshResponse, error)
	// Get Activities
	GetActivities(ctx context.Context, in *CommonGetsRequest, opts ...grpc.CallOption) (*CommonActivitiesResponse, error)
	// Get Activity
	GetActivity(ctx context.Context, in *CommonGetRequest, opts ...grpc.CallOption) (*CommonActivityResponse, error)
	// Client Update Patient
	ClientUpdatePatient(ctx context.Context, in *ClientUpdatePatientRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Client Update Patient V2
	ClientUpdatePatientV2(ctx context.Context, in *ClientUpdatePatientRequest, opts ...grpc.CallOption) (*ClientUpdatePatientV2Response, error)
	// Client Get Patients
	ClientGetPatients(ctx context.Context, in *ClientGetPatientsRequest, opts ...grpc.CallOption) (*ClientGetPatientsResponse, error)
	// Client Get Patient V2
	ClientGetPatientV2(ctx context.Context, in *ClientGetPatientV2Request, opts ...grpc.CallOption) (*ClientGetPatientV2Response, error)
	// Client Get Undeclared Patients
	ClientGetUndeclaredPatients(ctx context.Context, in *ClientGetUndeclaredPatientsRequest, opts ...grpc.CallOption) (*ClientGetUndeclaredPatientsResponse, error)
	// Client Create Declaration
	ClientCreateDeclaration(ctx context.Context, in *ClientCreateDeclarationRequest, opts ...grpc.CallOption) (*ClientCreateDeclarationResponse, error)
}

type cosmosServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCosmosServiceClient(cc grpc.ClientConnInterface) CosmosServiceClient {
	return &cosmosServiceClient{cc}
}

func (c *cosmosServiceClient) CreatePatient(ctx context.Context, in *CommonPatientRequest, opts ...grpc.CallOption) (*CommonPatientResponse, error) {
	out := new(CommonPatientResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/CreatePatient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) GetPatient(ctx context.Context, in *CommonGetRequest, opts ...grpc.CallOption) (*CommonPatientResponse, error) {
	out := new(CommonPatientResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/GetPatient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) UpdatePatient(ctx context.Context, in *CommonPatientRequest, opts ...grpc.CallOption) (*CommonPatientResponse, error) {
	out := new(CommonPatientResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/UpdatePatient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) UpdatePatients(ctx context.Context, in *CommonPatientsRequest, opts ...grpc.CallOption) (*CommonIdsResponse, error) {
	out := new(CommonIdsResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/UpdatePatients", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) DeletePatient(ctx context.Context, in *CommonDeleteRequest, opts ...grpc.CallOption) (*CommonPatientResponse, error) {
	out := new(CommonPatientResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/DeletePatient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) DeletePatients(ctx context.Context, in *CommonDeletesRequest, opts ...grpc.CallOption) (*CommonIdsResponse, error) {
	out := new(CommonIdsResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/DeletePatients", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) GetPatients(ctx context.Context, in *CommonGetsRequest, opts ...grpc.CallOption) (*CommonPatientsResponse, error) {
	out := new(CommonPatientsResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/GetPatients", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) GetUndeclaredPatients(ctx context.Context, in *CommonGetsRequest, opts ...grpc.CallOption) (*CommonPatientsResponse, error) {
	out := new(CommonPatientsResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/GetUndeclaredPatients", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) GetSwabPatients(ctx context.Context, in *CommonGetsRequest, opts ...grpc.CallOption) (*CommonPatientsResponse, error) {
	out := new(CommonPatientsResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/GetSwabPatients", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) GetStablePatients(ctx context.Context, in *CommonGetsRequest, opts ...grpc.CallOption) (*CommonPatientsResponse, error) {
	out := new(CommonPatientsResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/GetStablePatients", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) GetCallPatients(ctx context.Context, in *CommonGetsRequest, opts ...grpc.CallOption) (*CommonPatientsResponse, error) {
	out := new(CommonPatientsResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/GetCallPatients", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) GetOtherPatients(ctx context.Context, in *CommonGetsRequest, opts ...grpc.CallOption) (*CommonPatientsResponse, error) {
	out := new(CommonPatientsResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/GetOtherPatients", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) GetNoCallPatients(ctx context.Context, in *CommonGetsRequest, opts ...grpc.CallOption) (*CommonPatientsResponse, error) {
	out := new(CommonPatientsResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/GetNoCallPatients", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) CreateUser(ctx context.Context, in *CommonUserRequest, opts ...grpc.CallOption) (*CommonUserResponse, error) {
	out := new(CommonUserResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) GetUsers(ctx context.Context, in *CommonGetsRequest, opts ...grpc.CallOption) (*CommonUsersResponse, error) {
	out := new(CommonUsersResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/GetUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) GetUser(ctx context.Context, in *CommonGetRequest, opts ...grpc.CallOption) (*CommonUserResponse, error) {
	out := new(CommonUserResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) UpdateUser(ctx context.Context, in *CommonUserRequest, opts ...grpc.CallOption) (*CommonUserResponse, error) {
	out := new(CommonUserResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/UpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) UpdateUsers(ctx context.Context, in *CommonUsersRequest, opts ...grpc.CallOption) (*CommonIdsResponse, error) {
	out := new(CommonIdsResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/UpdateUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) DeleteUser(ctx context.Context, in *CommonDeleteRequest, opts ...grpc.CallOption) (*CommonUserResponse, error) {
	out := new(CommonUserResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/DeleteUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) DeleteUsers(ctx context.Context, in *CommonDeletesRequest, opts ...grpc.CallOption) (*CommonIdsResponse, error) {
	out := new(CommonIdsResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/DeleteUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) CreateDeclaration(ctx context.Context, in *CommonDeclarationRequest, opts ...grpc.CallOption) (*CommonDeclarationResponse, error) {
	out := new(CommonDeclarationResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/CreateDeclaration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) GetDeclarations(ctx context.Context, in *CommonGetsRequest, opts ...grpc.CallOption) (*CommonDeclarationsResponse, error) {
	out := new(CommonDeclarationsResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/GetDeclarations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) GetDeclaration(ctx context.Context, in *CommonGetRequest, opts ...grpc.CallOption) (*CommonDeclarationResponse, error) {
	out := new(CommonDeclarationResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/GetDeclaration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) UpdateDeclaration(ctx context.Context, in *CommonDeclarationRequest, opts ...grpc.CallOption) (*CommonDeclarationResponse, error) {
	out := new(CommonDeclarationResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/UpdateDeclaration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) UpdateDeclarations(ctx context.Context, in *CommonDeclarationsRequest, opts ...grpc.CallOption) (*CommonIdsResponse, error) {
	out := new(CommonIdsResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/UpdateDeclarations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) DeleteDeclaration(ctx context.Context, in *CommonDeleteRequest, opts ...grpc.CallOption) (*CommonDeclarationResponse, error) {
	out := new(CommonDeclarationResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/DeleteDeclaration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) DeleteDeclarations(ctx context.Context, in *CommonDeletesRequest, opts ...grpc.CallOption) (*CommonIdsResponse, error) {
	out := new(CommonIdsResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/DeleteDeclarations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) CreateSwab(ctx context.Context, in *CommonSwabRequest, opts ...grpc.CallOption) (*CommonSwabResponse, error) {
	out := new(CommonSwabResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/CreateSwab", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) GetSwabs(ctx context.Context, in *CommonGetsRequest, opts ...grpc.CallOption) (*CommonSwabsResponse, error) {
	out := new(CommonSwabsResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/GetSwabs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) GetSwab(ctx context.Context, in *CommonGetRequest, opts ...grpc.CallOption) (*CommonSwabResponse, error) {
	out := new(CommonSwabResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/GetSwab", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) UpdateSwab(ctx context.Context, in *CommonSwabRequest, opts ...grpc.CallOption) (*CommonSwabResponse, error) {
	out := new(CommonSwabResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/UpdateSwab", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) UpdateSwabs(ctx context.Context, in *CommonSwabsRequest, opts ...grpc.CallOption) (*CommonIdsResponse, error) {
	out := new(CommonIdsResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/UpdateSwabs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) DeleteSwab(ctx context.Context, in *CommonDeleteRequest, opts ...grpc.CallOption) (*CommonSwabResponse, error) {
	out := new(CommonSwabResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/DeleteSwab", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) DeleteSwabs(ctx context.Context, in *CommonDeletesRequest, opts ...grpc.CallOption) (*CommonIdsResponse, error) {
	out := new(CommonIdsResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/DeleteSwabs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) GetReport(ctx context.Context, in *GetReportRequest, opts ...grpc.CallOption) (*CommonReportResponse, error) {
	out := new(CommonReportResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/GetReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) GetReports(ctx context.Context, in *GetReportsRequest, opts ...grpc.CallOption) (*CommonReportsResponse, error) {
	out := new(CommonReportsResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/GetReports", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) GetPasswordReset(ctx context.Context, in *GetPasswordResetRequest, opts ...grpc.CallOption) (*GetPasswordResetResponse, error) {
	out := new(GetPasswordResetResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/GetPasswordReset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) UpdatePassword(ctx context.Context, in *UpdatePasswordRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/UpdatePassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) Logout(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/Logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) Refresh(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*RefreshResponse, error) {
	out := new(RefreshResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/Refresh", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) GetActivities(ctx context.Context, in *CommonGetsRequest, opts ...grpc.CallOption) (*CommonActivitiesResponse, error) {
	out := new(CommonActivitiesResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/GetActivities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) GetActivity(ctx context.Context, in *CommonGetRequest, opts ...grpc.CallOption) (*CommonActivityResponse, error) {
	out := new(CommonActivityResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/GetActivity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) ClientUpdatePatient(ctx context.Context, in *ClientUpdatePatientRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/ClientUpdatePatient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) ClientUpdatePatientV2(ctx context.Context, in *ClientUpdatePatientRequest, opts ...grpc.CallOption) (*ClientUpdatePatientV2Response, error) {
	out := new(ClientUpdatePatientV2Response)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/ClientUpdatePatientV2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) ClientGetPatients(ctx context.Context, in *ClientGetPatientsRequest, opts ...grpc.CallOption) (*ClientGetPatientsResponse, error) {
	out := new(ClientGetPatientsResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/ClientGetPatients", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) ClientGetPatientV2(ctx context.Context, in *ClientGetPatientV2Request, opts ...grpc.CallOption) (*ClientGetPatientV2Response, error) {
	out := new(ClientGetPatientV2Response)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/ClientGetPatientV2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) ClientGetUndeclaredPatients(ctx context.Context, in *ClientGetUndeclaredPatientsRequest, opts ...grpc.CallOption) (*ClientGetUndeclaredPatientsResponse, error) {
	out := new(ClientGetUndeclaredPatientsResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/ClientGetUndeclaredPatients", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosmosServiceClient) ClientCreateDeclaration(ctx context.Context, in *ClientCreateDeclarationRequest, opts ...grpc.CallOption) (*ClientCreateDeclarationResponse, error) {
	out := new(ClientCreateDeclarationResponse)
	err := c.cc.Invoke(ctx, "/pb.CosmosService/ClientCreateDeclaration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CosmosServiceServer is the server API for CosmosService service.
type CosmosServiceServer interface {
	// Create Patient
	CreatePatient(context.Context, *CommonPatientRequest) (*CommonPatientResponse, error)
	// Get Patient
	GetPatient(context.Context, *CommonGetRequest) (*CommonPatientResponse, error)
	// Update Patient
	UpdatePatient(context.Context, *CommonPatientRequest) (*CommonPatientResponse, error)
	// Update Patients
	UpdatePatients(context.Context, *CommonPatientsRequest) (*CommonIdsResponse, error)
	// Delete Patient
	DeletePatient(context.Context, *CommonDeleteRequest) (*CommonPatientResponse, error)
	// Delete Patients
	DeletePatients(context.Context, *CommonDeletesRequest) (*CommonIdsResponse, error)
	// Get Patients
	GetPatients(context.Context, *CommonGetsRequest) (*CommonPatientsResponse, error)
	// Get Undeclared Patients
	GetUndeclaredPatients(context.Context, *CommonGetsRequest) (*CommonPatientsResponse, error)
	// Get Patients With Days Since Swab >= 14
	GetSwabPatients(context.Context, *CommonGetsRequest) (*CommonPatientsResponse, error)
	// Get Stable Patients
	GetStablePatients(context.Context, *CommonGetsRequest) (*CommonPatientsResponse, error)
	// Get Called Patients
	GetCallPatients(context.Context, *CommonGetsRequest) (*CommonPatientsResponse, error)
	// Get Other Patients
	GetOtherPatients(context.Context, *CommonGetsRequest) (*CommonPatientsResponse, error)
	// Get No Yet Called Patients
	GetNoCallPatients(context.Context, *CommonGetsRequest) (*CommonPatientsResponse, error)
	// Create User
	CreateUser(context.Context, *CommonUserRequest) (*CommonUserResponse, error)
	// Get Users
	GetUsers(context.Context, *CommonGetsRequest) (*CommonUsersResponse, error)
	// Get User
	GetUser(context.Context, *CommonGetRequest) (*CommonUserResponse, error)
	// Update User
	UpdateUser(context.Context, *CommonUserRequest) (*CommonUserResponse, error)
	// Update Users
	UpdateUsers(context.Context, *CommonUsersRequest) (*CommonIdsResponse, error)
	// Delete User
	DeleteUser(context.Context, *CommonDeleteRequest) (*CommonUserResponse, error)
	// Delete Users
	DeleteUsers(context.Context, *CommonDeletesRequest) (*CommonIdsResponse, error)
	// Create Declaration
	CreateDeclaration(context.Context, *CommonDeclarationRequest) (*CommonDeclarationResponse, error)
	// Get Declarations
	GetDeclarations(context.Context, *CommonGetsRequest) (*CommonDeclarationsResponse, error)
	// Get Declaration
	GetDeclaration(context.Context, *CommonGetRequest) (*CommonDeclarationResponse, error)
	// Update Declaration
	UpdateDeclaration(context.Context, *CommonDeclarationRequest) (*CommonDeclarationResponse, error)
	// Update Declarations
	UpdateDeclarations(context.Context, *CommonDeclarationsRequest) (*CommonIdsResponse, error)
	// Delete Declaration
	DeleteDeclaration(context.Context, *CommonDeleteRequest) (*CommonDeclarationResponse, error)
	// Delete Declarations
	DeleteDeclarations(context.Context, *CommonDeletesRequest) (*CommonIdsResponse, error)
	// Create Swab
	CreateSwab(context.Context, *CommonSwabRequest) (*CommonSwabResponse, error)
	// Get Swabs
	GetSwabs(context.Context, *CommonGetsRequest) (*CommonSwabsResponse, error)
	// Get Swab
	GetSwab(context.Context, *CommonGetRequest) (*CommonSwabResponse, error)
	// Update Swab
	UpdateSwab(context.Context, *CommonSwabRequest) (*CommonSwabResponse, error)
	// Update Swabs
	UpdateSwabs(context.Context, *CommonSwabsRequest) (*CommonIdsResponse, error)
	// Delete Swab
	DeleteSwab(context.Context, *CommonDeleteRequest) (*CommonSwabResponse, error)
	// Delete Swabs
	DeleteSwabs(context.Context, *CommonDeletesRequest) (*CommonIdsResponse, error)
	// Get Report
	GetReport(context.Context, *GetReportRequest) (*CommonReportResponse, error)
	// Get Reports
	GetReports(context.Context, *GetReportsRequest) (*CommonReportsResponse, error)
	// Get Password Reset
	GetPasswordReset(context.Context, *GetPasswordResetRequest) (*GetPasswordResetResponse, error)
	// Update Password
	UpdatePassword(context.Context, *UpdatePasswordRequest) (*empty.Empty, error)
	// Login
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	// Logout
	Logout(context.Context, *empty.Empty) (*empty.Empty, error)
	// Refresh
	Refresh(context.Context, *empty.Empty) (*RefreshResponse, error)
	// Get Activities
	GetActivities(context.Context, *CommonGetsRequest) (*CommonActivitiesResponse, error)
	// Get Activity
	GetActivity(context.Context, *CommonGetRequest) (*CommonActivityResponse, error)
	// Client Update Patient
	ClientUpdatePatient(context.Context, *ClientUpdatePatientRequest) (*empty.Empty, error)
	// Client Update Patient V2
	ClientUpdatePatientV2(context.Context, *ClientUpdatePatientRequest) (*ClientUpdatePatientV2Response, error)
	// Client Get Patients
	ClientGetPatients(context.Context, *ClientGetPatientsRequest) (*ClientGetPatientsResponse, error)
	// Client Get Patient V2
	ClientGetPatientV2(context.Context, *ClientGetPatientV2Request) (*ClientGetPatientV2Response, error)
	// Client Get Undeclared Patients
	ClientGetUndeclaredPatients(context.Context, *ClientGetUndeclaredPatientsRequest) (*ClientGetUndeclaredPatientsResponse, error)
	// Client Create Declaration
	ClientCreateDeclaration(context.Context, *ClientCreateDeclarationRequest) (*ClientCreateDeclarationResponse, error)
}

// UnimplementedCosmosServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCosmosServiceServer struct {
}

func (*UnimplementedCosmosServiceServer) CreatePatient(ctx context.Context, req *CommonPatientRequest) (*CommonPatientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePatient not implemented")
}
func (*UnimplementedCosmosServiceServer) GetPatient(ctx context.Context, req *CommonGetRequest) (*CommonPatientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPatient not implemented")
}
func (*UnimplementedCosmosServiceServer) UpdatePatient(ctx context.Context, req *CommonPatientRequest) (*CommonPatientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePatient not implemented")
}
func (*UnimplementedCosmosServiceServer) UpdatePatients(ctx context.Context, req *CommonPatientsRequest) (*CommonIdsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePatients not implemented")
}
func (*UnimplementedCosmosServiceServer) DeletePatient(ctx context.Context, req *CommonDeleteRequest) (*CommonPatientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePatient not implemented")
}
func (*UnimplementedCosmosServiceServer) DeletePatients(ctx context.Context, req *CommonDeletesRequest) (*CommonIdsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePatients not implemented")
}
func (*UnimplementedCosmosServiceServer) GetPatients(ctx context.Context, req *CommonGetsRequest) (*CommonPatientsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPatients not implemented")
}
func (*UnimplementedCosmosServiceServer) GetUndeclaredPatients(ctx context.Context, req *CommonGetsRequest) (*CommonPatientsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUndeclaredPatients not implemented")
}
func (*UnimplementedCosmosServiceServer) GetSwabPatients(ctx context.Context, req *CommonGetsRequest) (*CommonPatientsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSwabPatients not implemented")
}
func (*UnimplementedCosmosServiceServer) GetStablePatients(ctx context.Context, req *CommonGetsRequest) (*CommonPatientsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStablePatients not implemented")
}
func (*UnimplementedCosmosServiceServer) GetCallPatients(ctx context.Context, req *CommonGetsRequest) (*CommonPatientsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCallPatients not implemented")
}
func (*UnimplementedCosmosServiceServer) GetOtherPatients(ctx context.Context, req *CommonGetsRequest) (*CommonPatientsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOtherPatients not implemented")
}
func (*UnimplementedCosmosServiceServer) GetNoCallPatients(ctx context.Context, req *CommonGetsRequest) (*CommonPatientsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNoCallPatients not implemented")
}
func (*UnimplementedCosmosServiceServer) CreateUser(ctx context.Context, req *CommonUserRequest) (*CommonUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUser not implemented")
}
func (*UnimplementedCosmosServiceServer) GetUsers(ctx context.Context, req *CommonGetsRequest) (*CommonUsersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUsers not implemented")
}
func (*UnimplementedCosmosServiceServer) GetUser(ctx context.Context, req *CommonGetRequest) (*CommonUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}
func (*UnimplementedCosmosServiceServer) UpdateUser(ctx context.Context, req *CommonUserRequest) (*CommonUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUser not implemented")
}
func (*UnimplementedCosmosServiceServer) UpdateUsers(ctx context.Context, req *CommonUsersRequest) (*CommonIdsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUsers not implemented")
}
func (*UnimplementedCosmosServiceServer) DeleteUser(ctx context.Context, req *CommonDeleteRequest) (*CommonUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUser not implemented")
}
func (*UnimplementedCosmosServiceServer) DeleteUsers(ctx context.Context, req *CommonDeletesRequest) (*CommonIdsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUsers not implemented")
}
func (*UnimplementedCosmosServiceServer) CreateDeclaration(ctx context.Context, req *CommonDeclarationRequest) (*CommonDeclarationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDeclaration not implemented")
}
func (*UnimplementedCosmosServiceServer) GetDeclarations(ctx context.Context, req *CommonGetsRequest) (*CommonDeclarationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeclarations not implemented")
}
func (*UnimplementedCosmosServiceServer) GetDeclaration(ctx context.Context, req *CommonGetRequest) (*CommonDeclarationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeclaration not implemented")
}
func (*UnimplementedCosmosServiceServer) UpdateDeclaration(ctx context.Context, req *CommonDeclarationRequest) (*CommonDeclarationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDeclaration not implemented")
}
func (*UnimplementedCosmosServiceServer) UpdateDeclarations(ctx context.Context, req *CommonDeclarationsRequest) (*CommonIdsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDeclarations not implemented")
}
func (*UnimplementedCosmosServiceServer) DeleteDeclaration(ctx context.Context, req *CommonDeleteRequest) (*CommonDeclarationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDeclaration not implemented")
}
func (*UnimplementedCosmosServiceServer) DeleteDeclarations(ctx context.Context, req *CommonDeletesRequest) (*CommonIdsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDeclarations not implemented")
}
func (*UnimplementedCosmosServiceServer) CreateSwab(ctx context.Context, req *CommonSwabRequest) (*CommonSwabResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSwab not implemented")
}
func (*UnimplementedCosmosServiceServer) GetSwabs(ctx context.Context, req *CommonGetsRequest) (*CommonSwabsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSwabs not implemented")
}
func (*UnimplementedCosmosServiceServer) GetSwab(ctx context.Context, req *CommonGetRequest) (*CommonSwabResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSwab not implemented")
}
func (*UnimplementedCosmosServiceServer) UpdateSwab(ctx context.Context, req *CommonSwabRequest) (*CommonSwabResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSwab not implemented")
}
func (*UnimplementedCosmosServiceServer) UpdateSwabs(ctx context.Context, req *CommonSwabsRequest) (*CommonIdsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSwabs not implemented")
}
func (*UnimplementedCosmosServiceServer) DeleteSwab(ctx context.Context, req *CommonDeleteRequest) (*CommonSwabResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSwab not implemented")
}
func (*UnimplementedCosmosServiceServer) DeleteSwabs(ctx context.Context, req *CommonDeletesRequest) (*CommonIdsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSwabs not implemented")
}
func (*UnimplementedCosmosServiceServer) GetReport(ctx context.Context, req *GetReportRequest) (*CommonReportResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetReport not implemented")
}
func (*UnimplementedCosmosServiceServer) GetReports(ctx context.Context, req *GetReportsRequest) (*CommonReportsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetReports not implemented")
}
func (*UnimplementedCosmosServiceServer) GetPasswordReset(ctx context.Context, req *GetPasswordResetRequest) (*GetPasswordResetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPasswordReset not implemented")
}
func (*UnimplementedCosmosServiceServer) UpdatePassword(ctx context.Context, req *UpdatePasswordRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePassword not implemented")
}
func (*UnimplementedCosmosServiceServer) Login(ctx context.Context, req *LoginRequest) (*LoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedCosmosServiceServer) Logout(ctx context.Context, req *empty.Empty) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Logout not implemented")
}
func (*UnimplementedCosmosServiceServer) Refresh(ctx context.Context, req *empty.Empty) (*RefreshResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Refresh not implemented")
}
func (*UnimplementedCosmosServiceServer) GetActivities(ctx context.Context, req *CommonGetsRequest) (*CommonActivitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetActivities not implemented")
}
func (*UnimplementedCosmosServiceServer) GetActivity(ctx context.Context, req *CommonGetRequest) (*CommonActivityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetActivity not implemented")
}
func (*UnimplementedCosmosServiceServer) ClientUpdatePatient(ctx context.Context, req *ClientUpdatePatientRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClientUpdatePatient not implemented")
}
func (*UnimplementedCosmosServiceServer) ClientUpdatePatientV2(ctx context.Context, req *ClientUpdatePatientRequest) (*ClientUpdatePatientV2Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClientUpdatePatientV2 not implemented")
}
func (*UnimplementedCosmosServiceServer) ClientGetPatients(ctx context.Context, req *ClientGetPatientsRequest) (*ClientGetPatientsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClientGetPatients not implemented")
}
func (*UnimplementedCosmosServiceServer) ClientGetPatientV2(ctx context.Context, req *ClientGetPatientV2Request) (*ClientGetPatientV2Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClientGetPatientV2 not implemented")
}
func (*UnimplementedCosmosServiceServer) ClientGetUndeclaredPatients(ctx context.Context, req *ClientGetUndeclaredPatientsRequest) (*ClientGetUndeclaredPatientsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClientGetUndeclaredPatients not implemented")
}
func (*UnimplementedCosmosServiceServer) ClientCreateDeclaration(ctx context.Context, req *ClientCreateDeclarationRequest) (*ClientCreateDeclarationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClientCreateDeclaration not implemented")
}

func RegisterCosmosServiceServer(s *grpc.Server, srv CosmosServiceServer) {
	s.RegisterService(&_CosmosService_serviceDesc, srv)
}

func _CosmosService_CreatePatient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonPatientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).CreatePatient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/CreatePatient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).CreatePatient(ctx, req.(*CommonPatientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_GetPatient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).GetPatient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/GetPatient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).GetPatient(ctx, req.(*CommonGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_UpdatePatient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonPatientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).UpdatePatient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/UpdatePatient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).UpdatePatient(ctx, req.(*CommonPatientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_UpdatePatients_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonPatientsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).UpdatePatients(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/UpdatePatients",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).UpdatePatients(ctx, req.(*CommonPatientsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_DeletePatient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).DeletePatient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/DeletePatient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).DeletePatient(ctx, req.(*CommonDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_DeletePatients_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonDeletesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).DeletePatients(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/DeletePatients",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).DeletePatients(ctx, req.(*CommonDeletesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_GetPatients_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonGetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).GetPatients(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/GetPatients",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).GetPatients(ctx, req.(*CommonGetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_GetUndeclaredPatients_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonGetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).GetUndeclaredPatients(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/GetUndeclaredPatients",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).GetUndeclaredPatients(ctx, req.(*CommonGetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_GetSwabPatients_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonGetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).GetSwabPatients(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/GetSwabPatients",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).GetSwabPatients(ctx, req.(*CommonGetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_GetStablePatients_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonGetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).GetStablePatients(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/GetStablePatients",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).GetStablePatients(ctx, req.(*CommonGetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_GetCallPatients_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonGetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).GetCallPatients(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/GetCallPatients",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).GetCallPatients(ctx, req.(*CommonGetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_GetOtherPatients_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonGetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).GetOtherPatients(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/GetOtherPatients",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).GetOtherPatients(ctx, req.(*CommonGetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_GetNoCallPatients_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonGetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).GetNoCallPatients(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/GetNoCallPatients",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).GetNoCallPatients(ctx, req.(*CommonGetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).CreateUser(ctx, req.(*CommonUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_GetUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonGetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).GetUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/GetUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).GetUsers(ctx, req.(*CommonGetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).GetUser(ctx, req.(*CommonGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).UpdateUser(ctx, req.(*CommonUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_UpdateUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).UpdateUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/UpdateUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).UpdateUsers(ctx, req.(*CommonUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).DeleteUser(ctx, req.(*CommonDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_DeleteUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonDeletesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).DeleteUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/DeleteUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).DeleteUsers(ctx, req.(*CommonDeletesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_CreateDeclaration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonDeclarationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).CreateDeclaration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/CreateDeclaration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).CreateDeclaration(ctx, req.(*CommonDeclarationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_GetDeclarations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonGetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).GetDeclarations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/GetDeclarations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).GetDeclarations(ctx, req.(*CommonGetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_GetDeclaration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).GetDeclaration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/GetDeclaration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).GetDeclaration(ctx, req.(*CommonGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_UpdateDeclaration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonDeclarationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).UpdateDeclaration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/UpdateDeclaration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).UpdateDeclaration(ctx, req.(*CommonDeclarationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_UpdateDeclarations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonDeclarationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).UpdateDeclarations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/UpdateDeclarations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).UpdateDeclarations(ctx, req.(*CommonDeclarationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_DeleteDeclaration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).DeleteDeclaration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/DeleteDeclaration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).DeleteDeclaration(ctx, req.(*CommonDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_DeleteDeclarations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonDeletesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).DeleteDeclarations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/DeleteDeclarations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).DeleteDeclarations(ctx, req.(*CommonDeletesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_CreateSwab_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonSwabRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).CreateSwab(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/CreateSwab",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).CreateSwab(ctx, req.(*CommonSwabRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_GetSwabs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonGetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).GetSwabs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/GetSwabs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).GetSwabs(ctx, req.(*CommonGetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_GetSwab_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).GetSwab(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/GetSwab",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).GetSwab(ctx, req.(*CommonGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_UpdateSwab_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonSwabRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).UpdateSwab(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/UpdateSwab",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).UpdateSwab(ctx, req.(*CommonSwabRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_UpdateSwabs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonSwabsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).UpdateSwabs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/UpdateSwabs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).UpdateSwabs(ctx, req.(*CommonSwabsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_DeleteSwab_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).DeleteSwab(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/DeleteSwab",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).DeleteSwab(ctx, req.(*CommonDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_DeleteSwabs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonDeletesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).DeleteSwabs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/DeleteSwabs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).DeleteSwabs(ctx, req.(*CommonDeletesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_GetReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).GetReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/GetReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).GetReport(ctx, req.(*GetReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_GetReports_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReportsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).GetReports(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/GetReports",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).GetReports(ctx, req.(*GetReportsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_GetPasswordReset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPasswordResetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).GetPasswordReset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/GetPasswordReset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).GetPasswordReset(ctx, req.(*GetPasswordResetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_UpdatePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).UpdatePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/UpdatePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).UpdatePassword(ctx, req.(*UpdatePasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).Logout(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_Refresh_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).Refresh(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/Refresh",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).Refresh(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_GetActivities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonGetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).GetActivities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/GetActivities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).GetActivities(ctx, req.(*CommonGetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_GetActivity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).GetActivity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/GetActivity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).GetActivity(ctx, req.(*CommonGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_ClientUpdatePatient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientUpdatePatientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).ClientUpdatePatient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/ClientUpdatePatient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).ClientUpdatePatient(ctx, req.(*ClientUpdatePatientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_ClientUpdatePatientV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientUpdatePatientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).ClientUpdatePatientV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/ClientUpdatePatientV2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).ClientUpdatePatientV2(ctx, req.(*ClientUpdatePatientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_ClientGetPatients_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientGetPatientsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).ClientGetPatients(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/ClientGetPatients",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).ClientGetPatients(ctx, req.(*ClientGetPatientsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_ClientGetPatientV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientGetPatientV2Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).ClientGetPatientV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/ClientGetPatientV2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).ClientGetPatientV2(ctx, req.(*ClientGetPatientV2Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_ClientGetUndeclaredPatients_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientGetUndeclaredPatientsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).ClientGetUndeclaredPatients(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/ClientGetUndeclaredPatients",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).ClientGetUndeclaredPatients(ctx, req.(*ClientGetUndeclaredPatientsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosmosService_ClientCreateDeclaration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientCreateDeclarationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosmosServiceServer).ClientCreateDeclaration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CosmosService/ClientCreateDeclaration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosmosServiceServer).ClientCreateDeclaration(ctx, req.(*ClientCreateDeclarationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CosmosService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.CosmosService",
	HandlerType: (*CosmosServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePatient",
			Handler:    _CosmosService_CreatePatient_Handler,
		},
		{
			MethodName: "GetPatient",
			Handler:    _CosmosService_GetPatient_Handler,
		},
		{
			MethodName: "UpdatePatient",
			Handler:    _CosmosService_UpdatePatient_Handler,
		},
		{
			MethodName: "UpdatePatients",
			Handler:    _CosmosService_UpdatePatients_Handler,
		},
		{
			MethodName: "DeletePatient",
			Handler:    _CosmosService_DeletePatient_Handler,
		},
		{
			MethodName: "DeletePatients",
			Handler:    _CosmosService_DeletePatients_Handler,
		},
		{
			MethodName: "GetPatients",
			Handler:    _CosmosService_GetPatients_Handler,
		},
		{
			MethodName: "GetUndeclaredPatients",
			Handler:    _CosmosService_GetUndeclaredPatients_Handler,
		},
		{
			MethodName: "GetSwabPatients",
			Handler:    _CosmosService_GetSwabPatients_Handler,
		},
		{
			MethodName: "GetStablePatients",
			Handler:    _CosmosService_GetStablePatients_Handler,
		},
		{
			MethodName: "GetCallPatients",
			Handler:    _CosmosService_GetCallPatients_Handler,
		},
		{
			MethodName: "GetOtherPatients",
			Handler:    _CosmosService_GetOtherPatients_Handler,
		},
		{
			MethodName: "GetNoCallPatients",
			Handler:    _CosmosService_GetNoCallPatients_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _CosmosService_CreateUser_Handler,
		},
		{
			MethodName: "GetUsers",
			Handler:    _CosmosService_GetUsers_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _CosmosService_GetUser_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _CosmosService_UpdateUser_Handler,
		},
		{
			MethodName: "UpdateUsers",
			Handler:    _CosmosService_UpdateUsers_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _CosmosService_DeleteUser_Handler,
		},
		{
			MethodName: "DeleteUsers",
			Handler:    _CosmosService_DeleteUsers_Handler,
		},
		{
			MethodName: "CreateDeclaration",
			Handler:    _CosmosService_CreateDeclaration_Handler,
		},
		{
			MethodName: "GetDeclarations",
			Handler:    _CosmosService_GetDeclarations_Handler,
		},
		{
			MethodName: "GetDeclaration",
			Handler:    _CosmosService_GetDeclaration_Handler,
		},
		{
			MethodName: "UpdateDeclaration",
			Handler:    _CosmosService_UpdateDeclaration_Handler,
		},
		{
			MethodName: "UpdateDeclarations",
			Handler:    _CosmosService_UpdateDeclarations_Handler,
		},
		{
			MethodName: "DeleteDeclaration",
			Handler:    _CosmosService_DeleteDeclaration_Handler,
		},
		{
			MethodName: "DeleteDeclarations",
			Handler:    _CosmosService_DeleteDeclarations_Handler,
		},
		{
			MethodName: "CreateSwab",
			Handler:    _CosmosService_CreateSwab_Handler,
		},
		{
			MethodName: "GetSwabs",
			Handler:    _CosmosService_GetSwabs_Handler,
		},
		{
			MethodName: "GetSwab",
			Handler:    _CosmosService_GetSwab_Handler,
		},
		{
			MethodName: "UpdateSwab",
			Handler:    _CosmosService_UpdateSwab_Handler,
		},
		{
			MethodName: "UpdateSwabs",
			Handler:    _CosmosService_UpdateSwabs_Handler,
		},
		{
			MethodName: "DeleteSwab",
			Handler:    _CosmosService_DeleteSwab_Handler,
		},
		{
			MethodName: "DeleteSwabs",
			Handler:    _CosmosService_DeleteSwabs_Handler,
		},
		{
			MethodName: "GetReport",
			Handler:    _CosmosService_GetReport_Handler,
		},
		{
			MethodName: "GetReports",
			Handler:    _CosmosService_GetReports_Handler,
		},
		{
			MethodName: "GetPasswordReset",
			Handler:    _CosmosService_GetPasswordReset_Handler,
		},
		{
			MethodName: "UpdatePassword",
			Handler:    _CosmosService_UpdatePassword_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _CosmosService_Login_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _CosmosService_Logout_Handler,
		},
		{
			MethodName: "Refresh",
			Handler:    _CosmosService_Refresh_Handler,
		},
		{
			MethodName: "GetActivities",
			Handler:    _CosmosService_GetActivities_Handler,
		},
		{
			MethodName: "GetActivity",
			Handler:    _CosmosService_GetActivity_Handler,
		},
		{
			MethodName: "ClientUpdatePatient",
			Handler:    _CosmosService_ClientUpdatePatient_Handler,
		},
		{
			MethodName: "ClientUpdatePatientV2",
			Handler:    _CosmosService_ClientUpdatePatientV2_Handler,
		},
		{
			MethodName: "ClientGetPatients",
			Handler:    _CosmosService_ClientGetPatients_Handler,
		},
		{
			MethodName: "ClientGetPatientV2",
			Handler:    _CosmosService_ClientGetPatientV2_Handler,
		},
		{
			MethodName: "ClientGetUndeclaredPatients",
			Handler:    _CosmosService_ClientGetUndeclaredPatients_Handler,
		},
		{
			MethodName: "ClientCreateDeclaration",
			Handler:    _CosmosService_ClientCreateDeclaration_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cosmos-service.proto",
}
