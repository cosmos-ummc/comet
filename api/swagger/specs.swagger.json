{
  "swagger": "2.0",
  "info": {
    "title": "CoSMoS Service",
    "description": "CoSMoS Service handles requests from both Telegram chat bot and admin dashboard.",
    "version": "1.0.0",
    "contact": {
      "url": "https://github.com/cosmos-ummc/comet",
      "email": "chinxiongwei@yahoo.com.my"
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/activities": {
      "get": {
        "summary": "Get Activities",
        "operationId": "GetActivities",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonActivitiesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "item",
            "description": "item to sort.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "item to order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "from",
            "description": "pagination from.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "to",
            "description": "pagination to.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "filterItem",
            "description": "item to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterValue",
            "description": "value to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ids",
            "description": "patient ids.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "CosmosService"
        ]
      }
    },
    "/v1/activities/{id}": {
      "get": {
        "summary": "Get Activity",
        "operationId": "GetActivity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonActivityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "patient IC / passport",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CosmosService"
        ]
      }
    },
    "/v1/callpatients": {
      "get": {
        "summary": "Get Called Patients",
        "operationId": "GetCallPatients",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonPatientsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "item",
            "description": "item to sort.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "item to order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "from",
            "description": "pagination from.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "to",
            "description": "pagination to.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "filterItem",
            "description": "item to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterValue",
            "description": "value to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ids",
            "description": "patient ids.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "CosmosService"
        ]
      }
    },
    "/v1/client/declarations": {
      "post": {
        "summary": "Client Create Declaration",
        "operationId": "ClientCreateDeclaration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbClientCreateDeclarationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbClientCreateDeclarationRequest"
            }
          }
        ],
        "tags": [
          "CosmosService"
        ]
      }
    },
    "/v1/client/patients": {
      "get": {
        "summary": "Client Get Patients",
        "operationId": "ClientGetPatients",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbClientGetPatientsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "telegramId",
            "description": "patient telegram ID.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phoneNumber",
            "description": "patient phone number.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "description": "patient id.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "day",
            "description": "day of monitoring.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "CosmosService"
        ]
      }
    },
    "/v1/client/patients/undeclared": {
      "get": {
        "summary": "Client Get Undeclared Patients",
        "operationId": "ClientGetUndeclaredPatients",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbClientGetUndeclaredPatientsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "from",
            "description": "undeclared from given millisecond time (deprecated, now depending on 12 am).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "to",
            "description": "undeclared to given millisecond time (deprecated).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "CosmosService"
        ]
      }
    },
    "/v1/client/patients/{id}": {
      "put": {
        "summary": "Client Update Patient",
        "operationId": "ClientUpdatePatient",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "patient IC / passport",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbClientUpdatePatientRequest"
            }
          }
        ],
        "tags": [
          "CosmosService"
        ]
      }
    },
    "/v1/declarations": {
      "get": {
        "summary": "Get Declarations",
        "operationId": "GetDeclarations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonDeclarationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "item",
            "description": "item to sort.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "item to order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "from",
            "description": "pagination from.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "to",
            "description": "pagination to.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "filterItem",
            "description": "item to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterValue",
            "description": "value to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ids",
            "description": "patient ids.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "CosmosService"
        ]
      },
      "delete": {
        "summary": "Delete Declarations",
        "operationId": "DeleteDeclarations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonIdsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "ids",
            "description": "ids.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "CosmosService"
        ]
      },
      "put": {
        "summary": "Update Declarations",
        "operationId": "UpdateDeclarations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonIdsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCommonDeclarationsRequest"
            }
          }
        ],
        "tags": [
          "CosmosService"
        ]
      }
    },
    "/v1/declarations/{id}": {
      "get": {
        "summary": "Get Declaration",
        "operationId": "GetDeclaration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonDeclarationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "patient IC / passport",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CosmosService"
        ]
      },
      "delete": {
        "summary": "Delete Declaration",
        "operationId": "DeleteDeclaration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonDeclarationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CosmosService"
        ]
      },
      "post": {
        "summary": "Create Declaration",
        "operationId": "CreateDeclaration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonDeclarationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "declaration id (not used )",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCommonDeclarationRequest"
            }
          }
        ],
        "tags": [
          "CosmosService"
        ]
      },
      "put": {
        "summary": "Update Declaration",
        "operationId": "UpdateDeclaration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonDeclarationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "declaration id (not used )",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCommonDeclarationRequest"
            }
          }
        ],
        "tags": [
          "CosmosService"
        ]
      }
    },
    "/v1/login": {
      "post": {
        "summary": "Login",
        "operationId": "Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbLoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbLoginRequest"
            }
          }
        ],
        "tags": [
          "CosmosService"
        ]
      }
    },
    "/v1/logout": {
      "post": {
        "summary": "Logout",
        "operationId": "Logout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "CosmosService"
        ]
      }
    },
    "/v1/nocallpatients": {
      "get": {
        "summary": "Get No Yet Called Patients",
        "operationId": "GetNoCallPatients",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonPatientsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "item",
            "description": "item to sort.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "item to order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "from",
            "description": "pagination from.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "to",
            "description": "pagination to.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "filterItem",
            "description": "item to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterValue",
            "description": "value to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ids",
            "description": "patient ids.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "CosmosService"
        ]
      }
    },
    "/v1/otherpatients": {
      "get": {
        "summary": "Get Other Patients",
        "operationId": "GetOtherPatients",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonPatientsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "item",
            "description": "item to sort.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "item to order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "from",
            "description": "pagination from.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "to",
            "description": "pagination to.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "filterItem",
            "description": "item to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterValue",
            "description": "value to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ids",
            "description": "patient ids.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "CosmosService"
        ]
      }
    },
    "/v1/patients": {
      "get": {
        "summary": "Get Patients",
        "operationId": "GetPatients",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonPatientsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "item",
            "description": "item to sort.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "item to order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "from",
            "description": "pagination from.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "to",
            "description": "pagination to.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "filterItem",
            "description": "item to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterValue",
            "description": "value to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ids",
            "description": "patient ids.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "CosmosService"
        ]
      },
      "delete": {
        "summary": "Delete Patients",
        "operationId": "DeletePatients",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonIdsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "ids",
            "description": "ids.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "CosmosService"
        ]
      },
      "put": {
        "summary": "Update Patients",
        "operationId": "UpdatePatients",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonIdsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCommonPatientsRequest"
            }
          }
        ],
        "tags": [
          "CosmosService"
        ]
      }
    },
    "/v1/patients/{id}": {
      "get": {
        "summary": "Get Patient",
        "operationId": "GetPatient",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonPatientResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "patient IC / passport",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CosmosService"
        ]
      },
      "delete": {
        "summary": "Delete Patient",
        "operationId": "DeletePatient",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonPatientResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CosmosService"
        ]
      },
      "post": {
        "summary": "Create Patient",
        "operationId": "CreatePatient",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonPatientResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "patient IC / passport",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCommonPatientRequest"
            }
          }
        ],
        "tags": [
          "CosmosService"
        ]
      },
      "put": {
        "summary": "Update Patient",
        "operationId": "UpdatePatient",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonPatientResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "patient IC / passport",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCommonPatientRequest"
            }
          }
        ],
        "tags": [
          "CosmosService"
        ]
      }
    },
    "/v1/refresh": {
      "post": {
        "summary": "Refresh",
        "operationId": "Refresh",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbRefreshResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {}
            }
          }
        ],
        "tags": [
          "CosmosService"
        ]
      }
    },
    "/v1/reports": {
      "get": {
        "summary": "Get Reports",
        "operationId": "GetReports",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonReportsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "from",
            "description": "from date (inclusive, in yyyyMMdd format).",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "to",
            "description": "to date (inclusive, in yyyyMMdd format).",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "description": "type of report (1 - status, 2 - declaration, 3 - calling status).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "CosmosService"
        ]
      }
    },
    "/v1/reports/{date}": {
      "get": {
        "summary": "Get Report",
        "operationId": "GetReport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonReportResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "date",
            "description": "date of report",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "description": "type of report (1 - status, 2 - declaration, 3 - calling status).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "CosmosService"
        ]
      }
    },
    "/v1/stablepatients": {
      "get": {
        "summary": "Get Stable Patients",
        "operationId": "GetStablePatients",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonPatientsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "item",
            "description": "item to sort.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "item to order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "from",
            "description": "pagination from.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "to",
            "description": "pagination to.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "filterItem",
            "description": "item to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterValue",
            "description": "value to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ids",
            "description": "patient ids.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "CosmosService"
        ]
      }
    },
    "/v1/swabpatients": {
      "get": {
        "summary": "Get Patients With Days Since Swab \u003e= 14",
        "operationId": "GetSwabPatients",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonPatientsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "item",
            "description": "item to sort.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "item to order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "from",
            "description": "pagination from.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "to",
            "description": "pagination to.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "filterItem",
            "description": "item to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterValue",
            "description": "value to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ids",
            "description": "patient ids.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "CosmosService"
        ]
      }
    },
    "/v1/swabs": {
      "get": {
        "summary": "Get Swabs",
        "operationId": "GetSwabs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonSwabsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "item",
            "description": "item to sort.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "item to order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "from",
            "description": "pagination from.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "to",
            "description": "pagination to.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "filterItem",
            "description": "item to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterValue",
            "description": "value to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ids",
            "description": "patient ids.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "CosmosService"
        ]
      },
      "delete": {
        "summary": "Delete Swabs",
        "operationId": "DeleteSwabs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonIdsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "ids",
            "description": "ids.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "CosmosService"
        ]
      },
      "put": {
        "summary": "Update Swabs",
        "operationId": "UpdateSwabs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonIdsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCommonSwabsRequest"
            }
          }
        ],
        "tags": [
          "CosmosService"
        ]
      }
    },
    "/v1/swabs/{id}": {
      "get": {
        "summary": "Get Swab",
        "operationId": "GetSwab",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonSwabResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "patient IC / passport",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CosmosService"
        ]
      },
      "delete": {
        "summary": "Delete Swab",
        "operationId": "DeleteSwab",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonSwabResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CosmosService"
        ]
      },
      "post": {
        "summary": "Create Swab",
        "operationId": "CreateSwab",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonSwabResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "swab id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCommonSwabRequest"
            }
          }
        ],
        "tags": [
          "CosmosService"
        ]
      },
      "put": {
        "summary": "Update Swab",
        "operationId": "UpdateSwab",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonSwabResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "swab id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCommonSwabRequest"
            }
          }
        ],
        "tags": [
          "CosmosService"
        ]
      }
    },
    "/v1/undeclaredpatients": {
      "get": {
        "summary": "Get Undeclared Patients",
        "operationId": "GetUndeclaredPatients",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonPatientsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "item",
            "description": "item to sort.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "item to order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "from",
            "description": "pagination from.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "to",
            "description": "pagination to.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "filterItem",
            "description": "item to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterValue",
            "description": "value to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ids",
            "description": "patient ids.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "CosmosService"
        ]
      }
    },
    "/v1/users": {
      "get": {
        "summary": "Get Users",
        "operationId": "GetUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "item",
            "description": "item to sort.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "item to order.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "from",
            "description": "pagination from.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "to",
            "description": "pagination to.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "filterItem",
            "description": "item to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterValue",
            "description": "value to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ids",
            "description": "patient ids.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "CosmosService"
        ]
      },
      "delete": {
        "summary": "Delete Users",
        "operationId": "DeleteUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonIdsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "ids",
            "description": "ids.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "CosmosService"
        ]
      },
      "put": {
        "summary": "Update Users",
        "operationId": "UpdateUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonIdsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCommonUsersRequest"
            }
          }
        ],
        "tags": [
          "CosmosService"
        ]
      }
    },
    "/v1/users/passwordreset/{token}": {
      "put": {
        "summary": "Update Password",
        "operationId": "UpdatePassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "token",
            "description": "token",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbUpdatePasswordRequest"
            }
          }
        ],
        "tags": [
          "CosmosService"
        ]
      }
    },
    "/v1/users/{id}": {
      "get": {
        "summary": "Get User",
        "operationId": "GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "patient IC / passport",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CosmosService"
        ]
      },
      "delete": {
        "summary": "Delete User",
        "operationId": "DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CosmosService"
        ]
      },
      "post": {
        "summary": "Create User",
        "operationId": "CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "user id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCommonUserRequest"
            }
          }
        ],
        "tags": [
          "CosmosService"
        ]
      },
      "put": {
        "summary": "Update User",
        "operationId": "UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCommonUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "user id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCommonUserRequest"
            }
          }
        ],
        "tags": [
          "CosmosService"
        ]
      }
    },
    "/v1/users/{id}/passwordreset": {
      "get": {
        "summary": "Get Password Reset",
        "operationId": "GetPasswordReset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetPasswordResetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "user id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CosmosService"
        ]
      }
    }
  },
  "definitions": {
    "pbActivity": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "activity ID"
        },
        "userId": {
          "type": "string",
          "title": "user id"
        },
        "userName": {
          "type": "string",
          "title": "user name"
        },
        "oldPatient": {
          "$ref": "#/definitions/pbPatient",
          "title": "old patient"
        },
        "newPatient": {
          "$ref": "#/definitions/pbPatient",
          "title": "new patient"
        },
        "oldSwab": {
          "$ref": "#/definitions/pbSwab",
          "title": "old swab"
        },
        "newSwab": {
          "$ref": "#/definitions/pbSwab",
          "title": "new swab"
        },
        "time": {
          "type": "string",
          "format": "int64",
          "title": "time"
        }
      },
      "title": "activity payload"
    },
    "pbClientCreateDeclarationRequest": {
      "type": "object",
      "properties": {
        "patientId": {
          "type": "string",
          "title": "patient IC / passport"
        },
        "cough": {
          "type": "string",
          "format": "int64",
          "title": "cough (1 - no cough, 2 - getting better, 3 - cough remains the same, 4 - start coughing today, 5 - getting worse)"
        },
        "throat": {
          "type": "string",
          "format": "int64",
          "title": "sore throat (1 - no sore throat, 2 - getting better, 3 - sore throat remains the same, 4 - start having sore throat today, 5 - getting worse)"
        },
        "fever": {
          "type": "string",
          "format": "int64",
          "title": "fever (1 - no fever, 3 - fever remains the same, 4 - start having a fever today, 5 - getting worse)"
        },
        "breathe": {
          "type": "string",
          "format": "int64",
          "title": "breathing difficulty (1 - no, 4 - has)"
        },
        "chest": {
          "type": "string",
          "format": "int64",
          "title": "chest pain (1 - no, 4 - has)"
        },
        "blue": {
          "type": "string",
          "format": "int64",
          "title": "blue face (1 - no, 4 - has)"
        },
        "drowsy": {
          "type": "string",
          "format": "int64",
          "title": "drowsiness (1 - no, 4 - has)"
        },
        "loss": {
          "type": "string",
          "format": "int64",
          "title": "loss of taste / smell"
        }
      },
      "title": "client create declaration request payload"
    },
    "pbClientCreateDeclarationResponse": {
      "type": "object",
      "properties": {
        "hasSymptom": {
          "type": "boolean",
          "format": "boolean",
          "title": "client report result"
        }
      },
      "title": "client create declaration response payload"
    },
    "pbClientGetPatientsResponse": {
      "type": "object",
      "properties": {
        "patients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbPatient"
          },
          "title": "patients payload"
        }
      },
      "title": "client get patients response payload"
    },
    "pbClientGetUndeclaredPatientsResponse": {
      "type": "object",
      "properties": {
        "patients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbPatient"
          },
          "title": "patients payload"
        }
      },
      "title": "client get undeclared patients response payload"
    },
    "pbClientUpdatePatientRequest": {
      "type": "object",
      "properties": {
        "telegramId": {
          "type": "string",
          "title": "patient telegram ID"
        },
        "name": {
          "type": "string",
          "title": "patient name"
        },
        "phoneNumber": {
          "type": "string",
          "title": "patient phone number"
        },
        "id": {
          "type": "string",
          "title": "patient IC / passport"
        },
        "status": {
          "type": "string",
          "format": "int64",
          "title": "patient status (1 - Symptomatic, 2 - Asymptomatic，3 - Confirmed but not Admitted, 4 - Confirmed and Admitted, 5 - Completed, 6 - Recovered, 7 - Quit, 8 - Passed Away)"
        },
        "email": {
          "type": "string",
          "title": "patient email"
        },
        "lastDeclared": {
          "type": "string",
          "format": "int64",
          "title": "patient latest declare time in milliseconds"
        },
        "episode": {
          "type": "string",
          "format": "int64",
          "title": "patient episode"
        },
        "type": {
          "type": "string",
          "format": "int64",
          "title": "patient type  (1 - PUI, 2 - Contact Tracing)"
        },
        "localization": {
          "type": "string",
          "format": "int64",
          "title": "patient localization (1 - English, 2 - Malay， 3 - Chinese, 4 - Tamil)"
        },
        "remarks": {
          "type": "string",
          "title": "doctors' remarks on patient"
        },
        "consent": {
          "type": "string",
          "format": "int64",
          "title": "patient consent signing time in milliseconds"
        },
        "privacyPolicy": {
          "type": "string",
          "format": "int64",
          "title": "patient privacy policy signing time in milliseconds"
        }
      },
      "title": "client update patient request payload"
    },
    "pbCommonActivitiesResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbActivity"
          },
          "title": "activities payload"
        },
        "total": {
          "type": "string",
          "format": "int64",
          "title": "total activities"
        }
      },
      "title": "common activities response payload"
    },
    "pbCommonActivityResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/pbActivity",
          "title": "activity payload"
        }
      },
      "title": "common activity response payload"
    },
    "pbCommonDeclarationRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "declaration id (not used )"
        },
        "data": {
          "$ref": "#/definitions/pbDeclaration",
          "title": "declaration payload"
        }
      },
      "title": "common declaration request payload"
    },
    "pbCommonDeclarationResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/pbDeclaration",
          "title": "declaration payload"
        }
      },
      "title": "common declaration response payload"
    },
    "pbCommonDeclarationsRequest": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "declaration ids"
        },
        "data": {
          "$ref": "#/definitions/pbDeclaration",
          "title": "declaration payload"
        }
      },
      "title": "common declarations request payload"
    },
    "pbCommonDeclarationsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbDeclaration"
          },
          "title": "declarations payload"
        },
        "total": {
          "type": "string",
          "format": "int64",
          "title": "total declarations"
        }
      },
      "title": "get declarations response payload"
    },
    "pbCommonIdsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "ids"
        }
      },
      "title": "common Ids response"
    },
    "pbCommonPatientRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "patient IC / passport"
        },
        "data": {
          "$ref": "#/definitions/pbPatient",
          "title": "patient object"
        }
      },
      "title": "common patient request payload"
    },
    "pbCommonPatientResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/pbPatient",
          "title": "patient payload"
        }
      },
      "title": "common patient response payload"
    },
    "pbCommonPatientsRequest": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "patient ids"
        },
        "data": {
          "$ref": "#/definitions/pbPatient",
          "title": "patient payload"
        }
      },
      "title": "common patients request payload"
    },
    "pbCommonPatientsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbPatient"
          },
          "title": "patients payload"
        },
        "total": {
          "type": "string",
          "format": "int64",
          "title": "total patients"
        }
      },
      "title": "common patients response payload"
    },
    "pbCommonReportResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/pbReport",
          "title": "report payload"
        }
      },
      "title": "common report response payload"
    },
    "pbCommonReportsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbReport"
          },
          "title": "reports payload"
        }
      },
      "title": "common reports response payload"
    },
    "pbCommonSwabRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "swab id"
        },
        "data": {
          "$ref": "#/definitions/pbSwab",
          "title": "swab payload"
        }
      },
      "title": "update swab request payload"
    },
    "pbCommonSwabResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/pbSwab",
          "title": "swab payload"
        }
      },
      "title": "get swab response payload"
    },
    "pbCommonSwabsRequest": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "swab ids"
        },
        "data": {
          "$ref": "#/definitions/pbSwab",
          "title": "swab payload"
        }
      },
      "title": "common swabs request payload"
    },
    "pbCommonSwabsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbSwab"
          },
          "title": "swabs payload"
        },
        "total": {
          "type": "string",
          "format": "int64",
          "title": "total swabs"
        }
      },
      "title": "common swabs response payload"
    },
    "pbCommonUserRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "user id"
        },
        "data": {
          "$ref": "#/definitions/pbUser",
          "title": "user payload"
        }
      },
      "title": "common user request payload"
    },
    "pbCommonUserResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/pbUser",
          "title": "user payload"
        }
      },
      "title": "common user response payload"
    },
    "pbCommonUsersRequest": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "user ids"
        },
        "data": {
          "$ref": "#/definitions/pbUser",
          "title": "user payload"
        }
      },
      "title": "common users request payload"
    },
    "pbCommonUsersResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbUser"
          },
          "title": "users payload"
        },
        "total": {
          "type": "string",
          "format": "int64",
          "title": "total users"
        }
      },
      "title": "common users response payload"
    },
    "pbDeclaration": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "patientId": {
          "type": "string",
          "title": "patient IC / passport"
        },
        "cough": {
          "type": "string",
          "format": "int64",
          "title": "cough (1 - no cough, 2 - getting better, 3 - cough remains the same, 4 - start coughing today, 5 - getting worse)"
        },
        "throat": {
          "type": "string",
          "format": "int64",
          "title": "sore throat (1 - no sore throat, 2 - getting better, 3 - sore throat remains the same, 4 - start having sore throat today, 5 - getting worse)"
        },
        "fever": {
          "type": "string",
          "format": "int64",
          "title": "fever (1 - no fever, 3 - fever remains the same, 4 - start having a fever today, 5 - getting worse)"
        },
        "breathe": {
          "type": "string",
          "format": "int64",
          "title": "breathing difficulty (1 - no, 4 - has)"
        },
        "chest": {
          "type": "string",
          "format": "int64",
          "title": "chest pain (1 - no, 4 - has)"
        },
        "blue": {
          "type": "string",
          "format": "int64",
          "title": "blue face (1 - no, 4 - has)"
        },
        "drowsy": {
          "type": "string",
          "format": "int64",
          "title": "drowsiness (1 - no, 4 - has)"
        },
        "loss": {
          "type": "string",
          "format": "int64",
          "title": "loss of taste / smell"
        },
        "hasSymptom": {
          "type": "boolean",
          "format": "boolean",
          "title": "report result (has symptom / no symptom)"
        },
        "submittedAt": {
          "type": "string",
          "format": "int64",
          "title": "report submission time in milliseconds"
        },
        "callingStatus": {
          "type": "string",
          "format": "int64",
          "title": "report calling status (1 - don’t have to call, 2 - patient called UMMC, 3 - UMMC called patient, 4 - no call yet)"
        },
        "date": {
          "type": "string",
          "title": "report date in string yyyyMMdd"
        },
        "patientName": {
          "type": "string",
          "title": "patient name"
        },
        "patientPhoneNumber": {
          "type": "string",
          "title": "patient phone number"
        },
        "doctorRemarks": {
          "type": "string",
          "title": "doctor remarks on the report"
        }
      },
      "title": "declaration payload"
    },
    "pbGetPasswordResetResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "title": "password reset message"
        }
      },
      "title": "get password reset response payload"
    },
    "pbLoginRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "pbLoginResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "pbPatient": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "patient IC / passport number"
        },
        "telegramId": {
          "type": "string",
          "title": "patient telegram ID"
        },
        "name": {
          "type": "string",
          "title": "patient name"
        },
        "status": {
          "type": "string",
          "format": "int64",
          "title": "patient status (1 - Symptomatic, 2 - Asymptomatic，3 - Confirmed but not Admitted, 4 - Confirmed and Admitted, 5 - Completed, 6 - Recovered, 7 - Quit, 8 - Passed Away)"
        },
        "phoneNumber": {
          "type": "string",
          "title": "patient phone number"
        },
        "email": {
          "type": "string",
          "title": "patient email"
        },
        "lastDeclared": {
          "type": "string",
          "format": "int64",
          "title": "patient latest declare time in milliseconds"
        },
        "swabCount": {
          "type": "string",
          "format": "int64",
          "title": "patient number of swabs (covid-19 test)"
        },
        "episode": {
          "type": "string",
          "format": "int64",
          "title": "patient episode"
        },
        "type": {
          "type": "string",
          "format": "int64",
          "title": "patient type (1 - PUI, 2 - Contact Tracing)"
        },
        "lastDeclareResult": {
          "type": "boolean",
          "format": "boolean",
          "title": "patient latest declare result (true - has symptom, false - no symptom)"
        },
        "exposureDate": {
          "type": "string",
          "title": "patient date of exposure"
        },
        "exposureSource": {
          "type": "string",
          "title": "patient source of exposure"
        },
        "daysSinceExposure": {
          "type": "string",
          "format": "int64",
          "title": "patient days since exposure (inclusive)"
        },
        "registrationNum": {
          "type": "string",
          "title": "patient registration number"
        },
        "alternateContact": {
          "type": "string",
          "title": "patient alternative contact number"
        },
        "isolationAddress": {
          "type": "string",
          "title": "patient isolation address"
        },
        "symptomDate": {
          "type": "string",
          "title": "patient date of symptom"
        },
        "swabDate": {
          "type": "string",
          "title": "patient date of swab"
        },
        "feverContDay": {
          "type": "string",
          "format": "int64",
          "title": "patient days since fever (inclusive)"
        },
        "remarks": {
          "type": "string",
          "title": "doctors' remarks on patient"
        },
        "localization": {
          "type": "string",
          "format": "int64",
          "title": "patient localization (1 - English, 2 - Malay， 3 - Chinese, 4 - Tamil)"
        },
        "callingStatus": {
          "type": "string",
          "format": "int64",
          "title": "patient latest report calling status"
        },
        "consent": {
          "type": "string",
          "format": "int64",
          "title": "patient consent signing time in milliseconds"
        },
        "privacyPolicy": {
          "type": "string",
          "format": "int64",
          "title": "patient privacy policy signing time in milliseconds"
        },
        "feverStartDate": {
          "type": "string",
          "title": "patient date of starting fever"
        },
        "swabLocation": {
          "type": "string",
          "title": "patient location of swab"
        },
        "daysSinceSwab": {
          "type": "string",
          "format": "int64",
          "title": "patient day since swab"
        },
        "typeChangeDate": {
          "type": "string",
          "title": "patient type change date"
        },
        "homeAddress": {
          "type": "string",
          "title": "patient home address"
        },
        "swabStatus": {
          "type": "string",
          "format": "int64",
          "title": "patient swab status"
        },
        "isOtherSwabLocation": {
          "type": "boolean",
          "format": "boolean",
          "title": "patient is other swab location"
        },
        "isSameAddress": {
          "type": "boolean",
          "format": "boolean",
          "title": "patient is same address"
        }
      },
      "title": "patient payload"
    },
    "pbRefreshResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "pbReport": {
      "type": "object",
      "properties": {
        "dontHaveToCallCount": {
          "type": "string",
          "format": "int64",
          "title": "don't have to call count"
        },
        "patientCalledCount": {
          "type": "string",
          "format": "int64",
          "title": "patient called count"
        },
        "ummcCalledCount": {
          "type": "string",
          "format": "int64",
          "title": "UMMC called count"
        },
        "noYetCallCount": {
          "type": "string",
          "format": "int64",
          "title": "no yet called count"
        },
        "date": {
          "type": "string",
          "title": "date of report"
        },
        "undeclaredCount": {
          "type": "string",
          "format": "int64",
          "title": "undeclared count"
        },
        "declaredCount": {
          "type": "string",
          "format": "int64",
          "title": "declared count"
        },
        "asymptomatic": {
          "type": "string",
          "format": "int64",
          "title": "asymptomatic patient count"
        },
        "symptomatic": {
          "type": "string",
          "format": "int64",
          "title": "symptomatic patient count"
        },
        "confirmedButNotAdmitted": {
          "type": "string",
          "format": "int64",
          "title": "confirmed but not admitted patient count"
        },
        "confirmedAndAdmitted": {
          "type": "string",
          "format": "int64",
          "title": "confirmed and admitted patient count"
        },
        "completed": {
          "type": "string",
          "format": "int64",
          "title": "completed patient count"
        },
        "quit": {
          "type": "string",
          "format": "int64",
          "title": "quit patient count"
        },
        "recovered": {
          "type": "string",
          "format": "int64",
          "title": "recovered patient count"
        },
        "passedAway": {
          "type": "string",
          "format": "int64",
          "title": "passed away patient count"
        }
      },
      "title": "report payload"
    },
    "pbSwab": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "swab ID (patient id + date)"
        },
        "patientId": {
          "type": "string",
          "title": "patient id"
        },
        "patientName": {
          "type": "string",
          "title": "patient name"
        },
        "patientPhoneNumber": {
          "type": "string",
          "title": "patient phone number"
        },
        "status": {
          "type": "string",
          "format": "int64",
          "title": "swab status (1 - positive, 2 - negative, 3 - pending)"
        },
        "date": {
          "type": "string",
          "title": "swab date"
        },
        "location": {
          "type": "string",
          "title": "swab location"
        },
        "isOtherSwabLocation": {
          "type": "boolean",
          "format": "boolean",
          "title": "is other swab location"
        }
      },
      "title": "swab payload"
    },
    "pbUpdatePasswordRequest": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "title": "token"
        },
        "password": {
          "type": "string",
          "title": "password"
        }
      },
      "title": "get password reset request payload"
    },
    "pbUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "user id"
        },
        "role": {
          "type": "string",
          "title": "user role: superuser, chatbot, admin, nurse"
        },
        "displayName": {
          "type": "string",
          "title": "user display name"
        },
        "phoneNumber": {
          "type": "string",
          "title": "user phone number"
        },
        "email": {
          "type": "string",
          "title": "user email"
        },
        "disabled": {
          "type": "boolean",
          "format": "boolean",
          "title": "user account status (true - disabled, false - enabled)"
        },
        "password": {
          "type": "string",
          "title": "user hashed password"
        }
      },
      "title": "user payload"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
