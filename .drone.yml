kind: pipeline
type: docker
name: production
trigger:
  branch:
    - master
  event:
    include:
      - push
volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
steps:
  - name: dockerization
    image: docker:dind
    environment:
      DOCKERHUB_PASSWORD:
        from_secret: dockerhub_password
      DOCKERHUB_USERNAME:
        from_secret: dockerhub_username
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker login --username=$DOCKERHUB_USERNAME --password=$DOCKERHUB_PASSWORD
      - docker pull cosmosummc/comet:production || true
      - docker pull cosmosummc/comet:${DRONE_COMMIT_SHA:0:7} || true
      - docker pull cosmosummc/comet:production-builder || true
      - docker pull cosmosummc/comet:builder-${DRONE_COMMIT_SHA:0:7} || true
      - >
        docker build .
        --file Dockerfile
        --target build_base
        --cache-from cosmosummc/comet:production-builder
        --cache-from cosmosummc/comet:builder-${DRONE_COMMIT_SHA:0:7}
        --tag cosmosummc/comet:production-builder
        --tag cosmosummc/comet:builder-${DRONE_COMMIT_SHA:0:7}
      - >
        docker build .
        --file Dockerfile
        --cache-from cosmosummc/comet:production
        --cache-from cosmosummc/comet:${DRONE_COMMIT_SHA:0:7}
        --cache-from cosmosummc/comet:builder-${DRONE_COMMIT_SHA:0:7}
        --tag cosmosummc/comet:production
        --tag cosmosummc/comet:${DRONE_COMMIT_SHA:0:7}
      - >
        docker build api/swagger
        --file api/swagger/Dockerfile
        --tag cosmosummc/comet:production-docs
        --tag cosmosummc/comet:docs-${DRONE_COMMIT_SHA:0:7}
      - docker push cosmosummc/comet:production
      - docker push cosmosummc/comet:${DRONE_COMMIT_SHA:0:7}
      - docker push cosmosummc/comet:production-builder
      - docker push cosmosummc/comet:builder-${DRONE_COMMIT_SHA:0:7}
      - docker push cosmosummc/comet:production-docs
      - docker push cosmosummc/comet:docs-${DRONE_COMMIT_SHA:0:7}

  - name: deployment-deprecated
    image: appleboy/drone-ssh
    environment:
      HOST: api.pkd.cosmos.care
      DOCS_HOST: docs.api.pkd.cosmos.care
      DOCKERHUB_USERNAME:
        from_secret: dockerhub_username
      DOCKERHUB_PASSWORD:
        from_secret: dockerhub_password
      AUTH_ENABLED:
        from_secret: production_auth_enabled
      CHATBOT_USER:
        from_secret: production_chatbot_user
      BACKEND_USER:
        from_secret: production_backend_user
      MONGODB_URL:
        from_secret: production_mongodb_url
      ACCESS_SECRET:
        from_secret: production_access_secret
      REFRESH_SECRET:
        from_secret: production_refresh_secret
      COSMOS_EMAIL_ADDRESS:
        from_secret: cosmos_email_address
      COSMOS_EMAIL_PASSWORD:
        from_secret: cosmos_email_password
      SMTP_SERVER_HOST:
        from_secret: smtp_server_host
      SMTP_SERVER_PORT:
        from_secret: smtp_server_port
      ADMIN_URL:
        from_secret: production_admin_url
      TEMPLATES_PATH:
        from_secret: templates_path
      BOT_TOKEN:
        from_secret: production_bot_token
    settings:
      host: prod-0.do.cosmos.care
      username: root
      port: 22
      command_timeout: 3m
      script_stop: true
      key:
        from_secret: ssh_key
      envs:
        - HOST
        - DOCS_HOST
        - DOCKERHUB_USERNAME
        - DOCKERHUB_PASSWORD
        - AUTH_ENABLED
        - CHATBOT_USER
        - BACKEND_USER
        - MONGODB_URL
        - ACCESS_SECRET
        - REFRESH_SECRET
        - COSMOS_EMAIL_ADDRESS
        - COSMOS_EMAIL_PASSWORD
        - SMTP_SERVER_HOST
        - SMTP_SERVER_PORT
        - ADMIN_URL
        - TEMPLATES_PATH
        - BOT_TOKEN
      script:
        - docker login --username=$DOCKERHUB_USERNAME --password=$DOCKERHUB_PASSWORD
        - docker pull cosmosummc/comet:${DRONE_COMMIT_SHA:0:7}
        - docker pull cosmosummc/comet:docs-${DRONE_COMMIT_SHA:0:7}
        - docker container stop comet || true
        - docker container rm comet || true
        - docker container run -d
          --name comet
          --restart=unless-stopped
          --log-driver fluentd
          -e "VIRTUAL_HOST=$HOST"
          -e "VIRTUAL_PORT=10002"
          -e "LETSENCRYPT_HOST=$HOST"
          -e "AUTH_ENABLED=$AUTH_ENABLED"
          -e "CHATBOT_USER=$CHATBOT_USER"
          -e "BACKEND_USER=$BACKEND_USER"
          -e "MONGODB_URL=$MONGODB_URL"
          -e "ACCESS_SECRET=$ACCESS_SECRET"
          -e "REFRESH_SECRET=$REFRESH_SECRET"
          -e "COSMOS_EMAIL_ADDRESS=$COSMOS_EMAIL_ADDRESS"
          -e "COSMOS_EMAIL_PASSWORD=$COSMOS_EMAIL_PASSWORD"
          -e "SMTP_SERVER_HOST=$SMTP_SERVER_HOST"
          -e "SMTP_SERVER_PORT=$SMTP_SERVER_PORT"
          -e "ADMIN_URL=$ADMIN_URL"
          -e "TEMPLATES_PATH=$TEMPLATES_PATH"
          -e "BOT_TOKEN=$BOT_TOKEN"
          cosmosummc/comet:${DRONE_COMMIT_SHA:0:7}
        - docker container stop comet-docs || true
        - docker container rm comet-docs || true
        - docker container run -d
          --name comet-docs
          --restart=unless-stopped
          --log-driver fluentd
          -e "VIRTUAL_HOST=$DOCS_HOST"
          -e "VIRTUAL_PORT=80"
          -e "LETSENCRYPT_HOST=$DOCS_HOST"
          cosmosummc/comet:docs-${DRONE_COMMIT_SHA:0:7}
        - docker image prune -a -f && docker system prune -a -f

  - name: deployment
    image: appleboy/drone-ssh
    environment:
      HOST: api.pkd.cosmos.care
      DOCS_HOST: docs.api.pkd.cosmos.care
      DOCKERHUB_USERNAME:
        from_secret: dockerhub_username
      DOCKERHUB_PASSWORD:
        from_secret: dockerhub_password
      AUTH_ENABLED:
        from_secret: production_auth_enabled
      CHATBOT_USER:
        from_secret: production_chatbot_user
      BACKEND_USER:
        from_secret: production_backend_user
      MONGODB_URL:
        from_secret: production_mongodb_url
      ACCESS_SECRET:
        from_secret: production_access_secret
      REFRESH_SECRET:
        from_secret: production_refresh_secret
      COSMOS_EMAIL_ADDRESS:
        from_secret: cosmos_email_address
      COSMOS_EMAIL_PASSWORD:
        from_secret: cosmos_email_password
      SMTP_SERVER_HOST:
        from_secret: smtp_server_host
      SMTP_SERVER_PORT:
        from_secret: smtp_server_port
      ADMIN_URL:
        from_secret: production_admin_url
      TEMPLATES_PATH:
        from_secret: templates_path
      BOT_TOKEN:
        from_secret: production_bot_token
    settings:
      host: pkd-prod-0.do.cosmos.care
      username: root
      port: 22
      command_timeout: 3m
      script_stop: true
      key:
        from_secret: ssh_key
      envs:
        - HOST
        - DOCS_HOST
        - DOCKERHUB_USERNAME
        - DOCKERHUB_PASSWORD
        - AUTH_ENABLED
        - CHATBOT_USER
        - BACKEND_USER
        - MONGODB_URL
        - ACCESS_SECRET
        - REFRESH_SECRET
        - COSMOS_EMAIL_ADDRESS
        - COSMOS_EMAIL_PASSWORD
        - SMTP_SERVER_HOST
        - SMTP_SERVER_PORT
        - ADMIN_URL
        - TEMPLATES_PATH
        - BOT_TOKEN
      script:
        - docker login --username=$DOCKERHUB_USERNAME --password=$DOCKERHUB_PASSWORD
        - docker pull cosmosummc/comet:${DRONE_COMMIT_SHA:0:7}
        - docker pull cosmosummc/comet:docs-${DRONE_COMMIT_SHA:0:7}
        - docker container stop comet || true
        - docker container rm comet || true
        - docker container run -d
          --name comet
          --restart=unless-stopped
          --log-driver fluentd
          -e "VIRTUAL_HOST=$HOST"
          -e "VIRTUAL_PORT=10002"
          -e "LETSENCRYPT_HOST=$HOST"
          -e "AUTH_ENABLED=$AUTH_ENABLED"
          -e "CHATBOT_USER=$CHATBOT_USER"
          -e "BACKEND_USER=$BACKEND_USER"
          -e "MONGODB_URL=$MONGODB_URL"
          -e "ACCESS_SECRET=$ACCESS_SECRET"
          -e "REFRESH_SECRET=$REFRESH_SECRET"
          -e "COSMOS_EMAIL_ADDRESS=$COSMOS_EMAIL_ADDRESS"
          -e "COSMOS_EMAIL_PASSWORD=$COSMOS_EMAIL_PASSWORD"
          -e "SMTP_SERVER_HOST=$SMTP_SERVER_HOST"
          -e "SMTP_SERVER_PORT=$SMTP_SERVER_PORT"
          -e "ADMIN_URL=$ADMIN_URL"
          -e "TEMPLATES_PATH=$TEMPLATES_PATH"
          -e "BOT_TOKEN=$BOT_TOKEN"
          cosmosummc/comet:${DRONE_COMMIT_SHA:0:7}
        - docker container stop comet-docs || true
        - docker container rm comet-docs || true
        - docker container run -d
          --name comet-docs
          --restart=unless-stopped
          --log-driver fluentd
          -e "VIRTUAL_HOST=$DOCS_HOST"
          -e "VIRTUAL_PORT=80"
          -e "LETSENCRYPT_HOST=$DOCS_HOST"
          cosmosummc/comet:docs-${DRONE_COMMIT_SHA:0:7}
        - docker image prune -a -f && docker system prune -a -f

---
kind: pipeline
type: docker
name: staging
trigger:
  branch:
    - dev
  event:
    include:
      - push
volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
steps:
  - name: dockerization
    image: docker:dind
    environment:
      DOCKERHUB_PASSWORD:
        from_secret: dockerhub_password
      DOCKERHUB_USERNAME:
        from_secret: dockerhub_username
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker login --username=$DOCKERHUB_USERNAME --password=$DOCKERHUB_PASSWORD
      - docker pull cosmosummc/comet:staging || true
      - docker pull cosmosummc/comet:${DRONE_COMMIT_SHA:0:7} || true
      - docker pull cosmosummc/comet:staging-builder || true
      - docker pull cosmosummc/comet:builder-${DRONE_COMMIT_SHA:0:7} || true
      - >
        docker build .
        --file Dockerfile
        --target build_base
        --cache-from cosmosummc/comet:staging-builder
        --cache-from cosmosummc/comet:builder-${DRONE_COMMIT_SHA:0:7}
        --tag cosmosummc/comet:staging-builder
        --tag cosmosummc/comet:builder-${DRONE_COMMIT_SHA:0:7}
      - >
        docker build .
        --file Dockerfile
        --cache-from cosmosummc/comet:staging
        --cache-from cosmosummc/comet:${DRONE_COMMIT_SHA:0:7}
        --cache-from cosmosummc/comet:builder-${DRONE_COMMIT_SHA:0:7}
        --tag cosmosummc/comet:staging
        --tag cosmosummc/comet:${DRONE_COMMIT_SHA:0:7}
      - >
        docker build api/swagger
        --file api/swagger/Dockerfile
        --tag cosmosummc/comet:staging-docs
        --tag cosmosummc/comet:docs-${DRONE_COMMIT_SHA:0:7}
      - docker push cosmosummc/comet:staging
      - docker push cosmosummc/comet:${DRONE_COMMIT_SHA:0:7}
      - docker push cosmosummc/comet:staging-builder
      - docker push cosmosummc/comet:builder-${DRONE_COMMIT_SHA:0:7}
      - docker push cosmosummc/comet:staging-docs
      - docker push cosmosummc/comet:docs-${DRONE_COMMIT_SHA:0:7}

  - name: deployment-deprecated
    image: appleboy/drone-ssh
    environment:
      HOST: api.pkd.staging.cosmos.care
      DOCS_HOST: docs.api.pkd.staging.cosmos.care
      DOCKERHUB_USERNAME:
        from_secret: dockerhub_username
      DOCKERHUB_PASSWORD:
        from_secret: dockerhub_password
      AUTH_ENABLED:
        from_secret: staging_auth_enabled
      CHATBOT_USER:
        from_secret: staging_chatbot_user
      BACKEND_USER:
        from_secret: staging_backend_user
      MONGODB_URL:
        from_secret: staging_mongodb_url
      ACCESS_SECRET:
        from_secret: staging_access_secret
      REFRESH_SECRET:
        from_secret: staging_refresh_secret
      COSMOS_EMAIL_ADDRESS:
        from_secret: cosmos_email_address
      COSMOS_EMAIL_PASSWORD:
        from_secret: cosmos_email_password
      SMTP_SERVER_HOST:
        from_secret: smtp_server_host
      SMTP_SERVER_PORT:
        from_secret: smtp_server_port
      ADMIN_URL:
        from_secret: staging_admin_url
      TEMPLATES_PATH:
        from_secret: templates_path
      BOT_TOKEN:
        from_secret: staging_bot_token
    settings:
      host: stag.do.cosmos.care
      username: root
      port: 22
      command_timeout: 3m
      script_stop: true
      key:
        from_secret: ssh_key
      envs:
        - HOST
        - DOCS_HOST
        - DOCKERHUB_USERNAME
        - DOCKERHUB_PASSWORD
        - AUTH_ENABLED
        - CHATBOT_USER
        - BACKEND_USER
        - MONGODB_URL
        - ACCESS_SECRET
        - REFRESH_SECRET
        - COSMOS_EMAIL_ADDRESS
        - COSMOS_EMAIL_PASSWORD
        - SMTP_SERVER_HOST
        - SMTP_SERVER_PORT
        - ADMIN_URL
        - TEMPLATES_PATH
        - BOT_TOKEN
      script:
        - docker login --username=$DOCKERHUB_USERNAME --password=$DOCKERHUB_PASSWORD
        - docker pull cosmosummc/comet:${DRONE_COMMIT_SHA:0:7}
        - docker pull cosmosummc/comet:docs-${DRONE_COMMIT_SHA:0:7}
        - docker container stop comet-staging || true
        - docker container rm comet-staging || true
        - docker container run -d
          --name comet-staging
          --restart=unless-stopped
          --log-driver fluentd
          -e "VIRTUAL_HOST=$HOST"
          -e "VIRTUAL_PORT=10002"
          -e "LETSENCRYPT_HOST=$HOST"
          -e "AUTH_ENABLED=$AUTH_ENABLED"
          -e "CHATBOT_USER=$CHATBOT_USER"
          -e "BACKEND_USER=$BACKEND_USER"
          -e "MONGODB_URL=$MONGODB_URL"
          -e "ACCESS_SECRET=$ACCESS_SECRET"
          -e "REFRESH_SECRET=$REFRESH_SECRET"
          -e "COSMOS_EMAIL_ADDRESS=$COSMOS_EMAIL_ADDRESS"
          -e "COSMOS_EMAIL_PASSWORD=$COSMOS_EMAIL_PASSWORD"
          -e "SMTP_SERVER_HOST=$SMTP_SERVER_HOST"
          -e "SMTP_SERVER_PORT=$SMTP_SERVER_PORT"
          -e "ADMIN_URL=$ADMIN_URL"
          -e "TEMPLATES_PATH=$TEMPLATES_PATH"
          -e "BOT_TOKEN=$BOT_TOKEN"
          cosmosummc/comet:${DRONE_COMMIT_SHA:0:7}
        - docker container stop comet-staging-docs || true
        - docker container rm comet-staging-docs || true
        - docker container run -d
          --name comet-staging-docs
          --restart=unless-stopped
          --log-driver fluentd
          -e "VIRTUAL_HOST=$DOCS_HOST"
          -e "VIRTUAL_PORT=80"
          -e "LETSENCRYPT_HOST=$DOCS_HOST"
          cosmosummc/comet:docs-${DRONE_COMMIT_SHA:0:7}
        - docker image prune -a -f && docker system prune -a -f

  - name: deployment
    image: appleboy/drone-ssh
    environment:
      HOST: api.pkd.staging.cosmos.care
      DOCS_HOST: docs.api.pkd.staging.cosmos.care
      DOCKERHUB_USERNAME:
        from_secret: dockerhub_username
      DOCKERHUB_PASSWORD:
        from_secret: dockerhub_password
      AUTH_ENABLED:
        from_secret: staging_auth_enabled
      CHATBOT_USER:
        from_secret: staging_chatbot_user
      BACKEND_USER:
        from_secret: staging_backend_user
      MONGODB_URL:
        from_secret: staging_mongodb_url
      ACCESS_SECRET:
        from_secret: staging_access_secret
      REFRESH_SECRET:
        from_secret: staging_refresh_secret
      COSMOS_EMAIL_ADDRESS:
        from_secret: cosmos_email_address
      COSMOS_EMAIL_PASSWORD:
        from_secret: cosmos_email_password
      SMTP_SERVER_HOST:
        from_secret: smtp_server_host
      SMTP_SERVER_PORT:
        from_secret: smtp_server_port
      ADMIN_URL:
        from_secret: staging_admin_url
      TEMPLATES_PATH:
        from_secret: templates_path
      BOT_TOKEN:
        from_secret: staging_bot_token
    settings:
      host: pkd-stag.do.cosmos.care
      username: root
      port: 22
      command_timeout: 3m
      script_stop: true
      key:
        from_secret: ssh_key
      envs:
        - HOST
        - DOCS_HOST
        - DOCKERHUB_USERNAME
        - DOCKERHUB_PASSWORD
        - AUTH_ENABLED
        - CHATBOT_USER
        - BACKEND_USER
        - MONGODB_URL
        - ACCESS_SECRET
        - REFRESH_SECRET
        - COSMOS_EMAIL_ADDRESS
        - COSMOS_EMAIL_PASSWORD
        - SMTP_SERVER_HOST
        - SMTP_SERVER_PORT
        - ADMIN_URL
        - TEMPLATES_PATH
        - BOT_TOKEN
      script:
        - docker login --username=$DOCKERHUB_USERNAME --password=$DOCKERHUB_PASSWORD
        - docker pull cosmosummc/comet:${DRONE_COMMIT_SHA:0:7}
        - docker pull cosmosummc/comet:docs-${DRONE_COMMIT_SHA:0:7}
        - docker container stop comet-staging || true
        - docker container rm comet-staging || true
        - docker container run -d
          --name comet-staging
          --restart=unless-stopped
          --log-driver fluentd
          -e "VIRTUAL_HOST=$HOST"
          -e "VIRTUAL_PORT=10002"
          -e "LETSENCRYPT_HOST=$HOST"
          -e "AUTH_ENABLED=$AUTH_ENABLED"
          -e "CHATBOT_USER=$CHATBOT_USER"
          -e "BACKEND_USER=$BACKEND_USER"
          -e "MONGODB_URL=$MONGODB_URL"
          -e "ACCESS_SECRET=$ACCESS_SECRET"
          -e "REFRESH_SECRET=$REFRESH_SECRET"
          -e "COSMOS_EMAIL_ADDRESS=$COSMOS_EMAIL_ADDRESS"
          -e "COSMOS_EMAIL_PASSWORD=$COSMOS_EMAIL_PASSWORD"
          -e "SMTP_SERVER_HOST=$SMTP_SERVER_HOST"
          -e "SMTP_SERVER_PORT=$SMTP_SERVER_PORT"
          -e "ADMIN_URL=$ADMIN_URL"
          -e "TEMPLATES_PATH=$TEMPLATES_PATH"
          -e "BOT_TOKEN=$BOT_TOKEN"
          cosmosummc/comet:${DRONE_COMMIT_SHA:0:7}
        - docker container stop comet-staging-docs || true
        - docker container rm comet-staging-docs || true
        - docker container run -d
          --name comet-staging-docs
          --restart=unless-stopped
          --log-driver fluentd
          -e "VIRTUAL_HOST=$DOCS_HOST"
          -e "VIRTUAL_PORT=80"
          -e "LETSENCRYPT_HOST=$DOCS_HOST"
          cosmosummc/comet:docs-${DRONE_COMMIT_SHA:0:7}
        - docker image prune -a -f && docker system prune -a -f
